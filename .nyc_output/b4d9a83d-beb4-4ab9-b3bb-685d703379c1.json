{"/Users/binvog/Documents/UNSW 2023T1/COMP1531/Indiv_projectbackend/iter4-project-backend/src/server.ts":{"path":"/Users/binvog/Documents/UNSW 2023T1/COMP1531/Indiv_projectbackend/iter4-project-backend/src/server.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":72}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":21}},"14":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"16":{"start":{"line":19,"column":31},"end":{"line":19,"column":42}},"17":{"start":{"line":20,"column":17},"end":{"line":20,"column":19}},"18":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"19":{"start":{"line":21,"column":21},"end":{"line":21,"column":141}},"20":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"21":{"start":{"line":21,"column":109},"end":{"line":21,"column":141}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":36}},"23":{"start":{"line":23,"column":4},"end":{"line":23,"column":18}},"24":{"start":{"line":25,"column":22},"end":{"line":27,"column":1}},"25":{"start":{"line":26,"column":4},"end":{"line":26,"column":62}},"26":{"start":{"line":28,"column":0},"end":{"line":28,"column":62}},"27":{"start":{"line":29,"column":16},"end":{"line":29,"column":48}},"28":{"start":{"line":30,"column":13},"end":{"line":30,"column":30}},"29":{"start":{"line":31,"column":15},"end":{"line":31,"column":49}},"30":{"start":{"line":32,"column":20},"end":{"line":32,"column":61}},"31":{"start":{"line":33,"column":13},"end":{"line":33,"column":45}},"32":{"start":{"line":34,"column":31},"end":{"line":34,"column":81}},"33":{"start":{"line":35,"column":13},"end":{"line":35,"column":30}},"34":{"start":{"line":36,"column":17},"end":{"line":36,"column":38}},"35":{"start":{"line":37,"column":16},"end":{"line":37,"column":36}},"36":{"start":{"line":38,"column":16},"end":{"line":38,"column":36}},"37":{"start":{"line":39,"column":14},"end":{"line":39,"column":32}},"38":{"start":{"line":40,"column":11},"end":{"line":40,"column":26}},"39":{"start":{"line":42,"column":14},"end":{"line":42,"column":32}},"40":{"start":{"line":43,"column":16},"end":{"line":43,"column":36}},"41":{"start":{"line":44,"column":14},"end":{"line":44,"column":32}},"42":{"start":{"line":46,"column":10},"end":{"line":46,"column":34}},"43":{"start":{"line":48,"column":0},"end":{"line":48,"column":31}},"44":{"start":{"line":50,"column":0},"end":{"line":50,"column":31}},"45":{"start":{"line":52,"column":0},"end":{"line":52,"column":38}},"46":{"start":{"line":54,"column":0},"end":{"line":54,"column":49}},"47":{"start":{"line":55,"column":11},"end":{"line":55,"column":67}},"48":{"start":{"line":56,"column":11},"end":{"line":56,"column":40}},"49":{"start":{"line":58,"column":0},"end":{"line":61,"column":3}},"50":{"start":{"line":59,"column":15},"end":{"line":59,"column":29}},"51":{"start":{"line":60,"column":4},"end":{"line":60,"column":44}},"52":{"start":{"line":62,"column":0},"end":{"line":66,"column":3}},"53":{"start":{"line":63,"column":13},"end":{"line":63,"column":21}},"54":{"start":{"line":63,"column":31},"end":{"line":63,"column":39}},"55":{"start":{"line":63,"column":52},"end":{"line":63,"column":63}},"56":{"start":{"line":64,"column":17},"end":{"line":64,"column":57}},"57":{"start":{"line":65,"column":4},"end":{"line":65,"column":28}},"58":{"start":{"line":67,"column":0},"end":{"line":71,"column":3}},"59":{"start":{"line":68,"column":13},"end":{"line":68,"column":21}},"60":{"start":{"line":68,"column":31},"end":{"line":68,"column":39}},"61":{"start":{"line":68,"column":52},"end":{"line":68,"column":63}},"62":{"start":{"line":68,"column":77},"end":{"line":68,"column":89}},"63":{"start":{"line":68,"column":102},"end":{"line":68,"column":113}},"64":{"start":{"line":69,"column":17},"end":{"line":69,"column":81}},"65":{"start":{"line":70,"column":4},"end":{"line":70,"column":28}},"66":{"start":{"line":72,"column":0},"end":{"line":77,"column":3}},"67":{"start":{"line":73,"column":16},"end":{"line":73,"column":33}},"68":{"start":{"line":74,"column":13},"end":{"line":74,"column":21}},"69":{"start":{"line":74,"column":30},"end":{"line":74,"column":37}},"70":{"start":{"line":74,"column":50},"end":{"line":74,"column":61}},"71":{"start":{"line":75,"column":17},"end":{"line":75,"column":72}},"72":{"start":{"line":76,"column":4},"end":{"line":76,"column":28}},"73":{"start":{"line":78,"column":0},"end":{"line":82,"column":3}},"74":{"start":{"line":79,"column":16},"end":{"line":79,"column":33}},"75":{"start":{"line":80,"column":17},"end":{"line":80,"column":54}},"76":{"start":{"line":81,"column":4},"end":{"line":81,"column":28}},"77":{"start":{"line":83,"column":0},"end":{"line":87,"column":3}},"78":{"start":{"line":84,"column":16},"end":{"line":84,"column":33}},"79":{"start":{"line":85,"column":17},"end":{"line":85,"column":57}},"80":{"start":{"line":86,"column":4},"end":{"line":86,"column":28}},"81":{"start":{"line":88,"column":0},"end":{"line":93,"column":3}},"82":{"start":{"line":89,"column":16},"end":{"line":89,"column":33}},"83":{"start":{"line":90,"column":20},"end":{"line":90,"column":38}},"84":{"start":{"line":91,"column":17},"end":{"line":91,"column":63}},"85":{"start":{"line":92,"column":4},"end":{"line":92,"column":28}},"86":{"start":{"line":94,"column":0},"end":{"line":97,"column":3}},"87":{"start":{"line":95,"column":17},"end":{"line":95,"column":39}},"88":{"start":{"line":96,"column":4},"end":{"line":96,"column":28}},"89":{"start":{"line":98,"column":0},"end":{"line":104,"column":3}},"90":{"start":{"line":99,"column":16},"end":{"line":99,"column":33}},"91":{"start":{"line":100,"column":20},"end":{"line":100,"column":49}},"92":{"start":{"line":101,"column":16},"end":{"line":101,"column":41}},"93":{"start":{"line":102,"column":17},"end":{"line":102,"column":74}},"94":{"start":{"line":103,"column":4},"end":{"line":103,"column":28}},"95":{"start":{"line":105,"column":0},"end":{"line":110,"column":3}},"96":{"start":{"line":106,"column":16},"end":{"line":106,"column":33}},"97":{"start":{"line":107,"column":20},"end":{"line":107,"column":38}},"98":{"start":{"line":108,"column":17},"end":{"line":108,"column":64}},"99":{"start":{"line":109,"column":4},"end":{"line":109,"column":28}},"100":{"start":{"line":111,"column":0},"end":{"line":116,"column":3}},"101":{"start":{"line":112,"column":16},"end":{"line":112,"column":33}},"102":{"start":{"line":113,"column":13},"end":{"line":113,"column":21}},"103":{"start":{"line":113,"column":35},"end":{"line":113,"column":47}},"104":{"start":{"line":113,"column":55},"end":{"line":113,"column":61}},"105":{"start":{"line":114,"column":17},"end":{"line":114,"column":72}},"106":{"start":{"line":115,"column":4},"end":{"line":115,"column":28}},"107":{"start":{"line":117,"column":0},"end":{"line":122,"column":3}},"108":{"start":{"line":118,"column":16},"end":{"line":118,"column":33}},"109":{"start":{"line":119,"column":13},"end":{"line":119,"column":21}},"110":{"start":{"line":119,"column":35},"end":{"line":119,"column":47}},"111":{"start":{"line":119,"column":55},"end":{"line":119,"column":61}},"112":{"start":{"line":120,"column":17},"end":{"line":120,"column":75}},"113":{"start":{"line":121,"column":4},"end":{"line":121,"column":28}},"114":{"start":{"line":123,"column":0},"end":{"line":128,"column":3}},"115":{"start":{"line":124,"column":16},"end":{"line":124,"column":33}},"116":{"start":{"line":125,"column":20},"end":{"line":125,"column":49}},"117":{"start":{"line":126,"column":17},"end":{"line":126,"column":66}},"118":{"start":{"line":127,"column":4},"end":{"line":127,"column":28}},"119":{"start":{"line":129,"column":0},"end":{"line":134,"column":3}},"120":{"start":{"line":130,"column":16},"end":{"line":130,"column":33}},"121":{"start":{"line":131,"column":15},"end":{"line":131,"column":28}},"122":{"start":{"line":132,"column":17},"end":{"line":132,"column":50}},"123":{"start":{"line":133,"column":4},"end":{"line":133,"column":28}},"124":{"start":{"line":135,"column":0},"end":{"line":140,"column":3}},"125":{"start":{"line":136,"column":16},"end":{"line":136,"column":33}},"126":{"start":{"line":137,"column":15},"end":{"line":137,"column":28}},"127":{"start":{"line":138,"column":17},"end":{"line":138,"column":49}},"128":{"start":{"line":139,"column":4},"end":{"line":139,"column":28}},"129":{"start":{"line":141,"column":0},"end":{"line":147,"column":3}},"130":{"start":{"line":142,"column":16},"end":{"line":142,"column":33}},"131":{"start":{"line":143,"column":15},"end":{"line":143,"column":39}},"132":{"start":{"line":144,"column":16},"end":{"line":144,"column":41}},"133":{"start":{"line":145,"column":17},"end":{"line":145,"column":59}},"134":{"start":{"line":146,"column":4},"end":{"line":146,"column":28}},"135":{"start":{"line":148,"column":0},"end":{"line":152,"column":3}},"136":{"start":{"line":149,"column":16},"end":{"line":149,"column":33}},"137":{"start":{"line":150,"column":17},"end":{"line":150,"column":42}},"138":{"start":{"line":151,"column":4},"end":{"line":151,"column":28}},"139":{"start":{"line":153,"column":0},"end":{"line":158,"column":3}},"140":{"start":{"line":154,"column":16},"end":{"line":154,"column":33}},"141":{"start":{"line":155,"column":13},"end":{"line":155,"column":21}},"142":{"start":{"line":155,"column":35},"end":{"line":155,"column":47}},"143":{"start":{"line":155,"column":55},"end":{"line":155,"column":61}},"144":{"start":{"line":156,"column":17},"end":{"line":156,"column":70}},"145":{"start":{"line":157,"column":4},"end":{"line":157,"column":28}},"146":{"start":{"line":159,"column":0},"end":{"line":164,"column":3}},"147":{"start":{"line":160,"column":16},"end":{"line":160,"column":33}},"148":{"start":{"line":161,"column":20},"end":{"line":161,"column":49}},"149":{"start":{"line":162,"column":17},"end":{"line":162,"column":65}},"150":{"start":{"line":163,"column":4},"end":{"line":163,"column":28}},"151":{"start":{"line":165,"column":0},"end":{"line":169,"column":3}},"152":{"start":{"line":166,"column":16},"end":{"line":166,"column":33}},"153":{"start":{"line":167,"column":17},"end":{"line":167,"column":48}},"154":{"start":{"line":168,"column":4},"end":{"line":168,"column":28}},"155":{"start":{"line":170,"column":0},"end":{"line":175,"column":3}},"156":{"start":{"line":171,"column":16},"end":{"line":171,"column":33}},"157":{"start":{"line":172,"column":15},"end":{"line":172,"column":39}},"158":{"start":{"line":173,"column":17},"end":{"line":173,"column":51}},"159":{"start":{"line":174,"column":4},"end":{"line":174,"column":28}},"160":{"start":{"line":176,"column":0},"end":{"line":181,"column":3}},"161":{"start":{"line":177,"column":16},"end":{"line":177,"column":33}},"162":{"start":{"line":178,"column":13},"end":{"line":178,"column":21}},"163":{"start":{"line":178,"column":35},"end":{"line":178,"column":47}},"164":{"start":{"line":178,"column":59},"end":{"line":178,"column":69}},"165":{"start":{"line":179,"column":17},"end":{"line":179,"column":72}},"166":{"start":{"line":180,"column":4},"end":{"line":180,"column":28}},"167":{"start":{"line":182,"column":0},"end":{"line":187,"column":3}},"168":{"start":{"line":183,"column":16},"end":{"line":183,"column":33}},"169":{"start":{"line":184,"column":13},"end":{"line":184,"column":21}},"170":{"start":{"line":184,"column":35},"end":{"line":184,"column":47}},"171":{"start":{"line":184,"column":59},"end":{"line":184,"column":69}},"172":{"start":{"line":185,"column":17},"end":{"line":185,"column":72}},"173":{"start":{"line":186,"column":4},"end":{"line":186,"column":28}},"174":{"start":{"line":188,"column":0},"end":{"line":193,"column":3}},"175":{"start":{"line":189,"column":16},"end":{"line":189,"column":33}},"176":{"start":{"line":190,"column":20},"end":{"line":190,"column":38}},"177":{"start":{"line":191,"column":17},"end":{"line":191,"column":57}},"178":{"start":{"line":192,"column":4},"end":{"line":192,"column":28}},"179":{"start":{"line":194,"column":0},"end":{"line":199,"column":3}},"180":{"start":{"line":195,"column":16},"end":{"line":195,"column":33}},"181":{"start":{"line":196,"column":16},"end":{"line":196,"column":30}},"182":{"start":{"line":197,"column":17},"end":{"line":197,"column":52}},"183":{"start":{"line":198,"column":4},"end":{"line":198,"column":28}},"184":{"start":{"line":200,"column":0},"end":{"line":205,"column":3}},"185":{"start":{"line":201,"column":16},"end":{"line":201,"column":33}},"186":{"start":{"line":202,"column":13},"end":{"line":202,"column":21}},"187":{"start":{"line":202,"column":35},"end":{"line":202,"column":47}},"188":{"start":{"line":202,"column":60},"end":{"line":202,"column":71}},"189":{"start":{"line":203,"column":17},"end":{"line":203,"column":65}},"190":{"start":{"line":204,"column":4},"end":{"line":204,"column":28}},"191":{"start":{"line":206,"column":0},"end":{"line":210,"column":3}},"192":{"start":{"line":207,"column":16},"end":{"line":207,"column":33}},"193":{"start":{"line":208,"column":17},"end":{"line":208,"column":48}},"194":{"start":{"line":209,"column":4},"end":{"line":209,"column":28}},"195":{"start":{"line":211,"column":0},"end":{"line":216,"column":3}},"196":{"start":{"line":212,"column":16},"end":{"line":212,"column":33}},"197":{"start":{"line":213,"column":14},"end":{"line":213,"column":37}},"198":{"start":{"line":214,"column":17},"end":{"line":214,"column":55}},"199":{"start":{"line":215,"column":4},"end":{"line":215,"column":28}},"200":{"start":{"line":217,"column":0},"end":{"line":222,"column":3}},"201":{"start":{"line":218,"column":16},"end":{"line":218,"column":33}},"202":{"start":{"line":219,"column":20},"end":{"line":219,"column":38}},"203":{"start":{"line":220,"column":17},"end":{"line":220,"column":62}},"204":{"start":{"line":221,"column":4},"end":{"line":221,"column":28}},"205":{"start":{"line":223,"column":0},"end":{"line":228,"column":3}},"206":{"start":{"line":224,"column":16},"end":{"line":224,"column":33}},"207":{"start":{"line":225,"column":20},"end":{"line":225,"column":38}},"208":{"start":{"line":226,"column":17},"end":{"line":226,"column":64}},"209":{"start":{"line":227,"column":4},"end":{"line":227,"column":28}},"210":{"start":{"line":229,"column":0},"end":{"line":234,"column":3}},"211":{"start":{"line":230,"column":16},"end":{"line":230,"column":33}},"212":{"start":{"line":231,"column":19},"end":{"line":231,"column":37}},"213":{"start":{"line":232,"column":17},"end":{"line":232,"column":57}},"214":{"start":{"line":233,"column":4},"end":{"line":233,"column":28}},"215":{"start":{"line":235,"column":0},"end":{"line":239,"column":3}},"216":{"start":{"line":236,"column":16},"end":{"line":236,"column":33}},"217":{"start":{"line":237,"column":17},"end":{"line":237,"column":57}},"218":{"start":{"line":238,"column":4},"end":{"line":238,"column":28}},"219":{"start":{"line":240,"column":0},"end":{"line":245,"column":3}},"220":{"start":{"line":241,"column":16},"end":{"line":241,"column":33}},"221":{"start":{"line":242,"column":15},"end":{"line":242,"column":39}},"222":{"start":{"line":243,"column":17},"end":{"line":243,"column":50}},"223":{"start":{"line":244,"column":4},"end":{"line":244,"column":28}},"224":{"start":{"line":246,"column":0},"end":{"line":251,"column":3}},"225":{"start":{"line":247,"column":16},"end":{"line":247,"column":33}},"226":{"start":{"line":248,"column":13},"end":{"line":248,"column":21}},"227":{"start":{"line":248,"column":30},"end":{"line":248,"column":37}},"228":{"start":{"line":248,"column":49},"end":{"line":248,"column":59}},"229":{"start":{"line":249,"column":17},"end":{"line":249,"column":69}},"230":{"start":{"line":250,"column":4},"end":{"line":250,"column":28}},"231":{"start":{"line":252,"column":0},"end":{"line":257,"column":3}},"232":{"start":{"line":253,"column":16},"end":{"line":253,"column":33}},"233":{"start":{"line":254,"column":13},"end":{"line":254,"column":21}},"234":{"start":{"line":254,"column":35},"end":{"line":254,"column":47}},"235":{"start":{"line":254,"column":58},"end":{"line":254,"column":67}},"236":{"start":{"line":255,"column":17},"end":{"line":255,"column":72}},"237":{"start":{"line":256,"column":4},"end":{"line":256,"column":28}},"238":{"start":{"line":258,"column":0},"end":{"line":263,"column":3}},"239":{"start":{"line":259,"column":16},"end":{"line":259,"column":33}},"240":{"start":{"line":260,"column":20},"end":{"line":260,"column":49}},"241":{"start":{"line":261,"column":17},"end":{"line":261,"column":65}},"242":{"start":{"line":262,"column":4},"end":{"line":262,"column":28}},"243":{"start":{"line":264,"column":0},"end":{"line":269,"column":3}},"244":{"start":{"line":265,"column":16},"end":{"line":265,"column":33}},"245":{"start":{"line":266,"column":13},"end":{"line":266,"column":21}},"246":{"start":{"line":266,"column":35},"end":{"line":266,"column":47}},"247":{"start":{"line":266,"column":59},"end":{"line":266,"column":69}},"248":{"start":{"line":267,"column":17},"end":{"line":267,"column":72}},"249":{"start":{"line":268,"column":4},"end":{"line":268,"column":28}},"250":{"start":{"line":270,"column":0},"end":{"line":275,"column":3}},"251":{"start":{"line":271,"column":16},"end":{"line":271,"column":33}},"252":{"start":{"line":272,"column":13},"end":{"line":272,"column":21}},"253":{"start":{"line":272,"column":32},"end":{"line":272,"column":41}},"254":{"start":{"line":272,"column":52},"end":{"line":272,"column":61}},"255":{"start":{"line":272,"column":72},"end":{"line":272,"column":81}},"256":{"start":{"line":272,"column":90},"end":{"line":272,"column":97}},"257":{"start":{"line":272,"column":106},"end":{"line":272,"column":113}},"258":{"start":{"line":273,"column":17},"end":{"line":273,"column":97}},"259":{"start":{"line":274,"column":4},"end":{"line":274,"column":28}},"260":{"start":{"line":276,"column":0},"end":{"line":281,"column":3}},"261":{"start":{"line":277,"column":16},"end":{"line":277,"column":33}},"262":{"start":{"line":278,"column":13},"end":{"line":278,"column":21}},"263":{"start":{"line":278,"column":35},"end":{"line":278,"column":47}},"264":{"start":{"line":278,"column":59},"end":{"line":278,"column":69}},"265":{"start":{"line":278,"column":82},"end":{"line":278,"column":93}},"266":{"start":{"line":279,"column":17},"end":{"line":279,"column":87}},"267":{"start":{"line":280,"column":4},"end":{"line":280,"column":28}},"268":{"start":{"line":282,"column":0},"end":{"line":287,"column":3}},"269":{"start":{"line":283,"column":16},"end":{"line":283,"column":33}},"270":{"start":{"line":284,"column":13},"end":{"line":284,"column":21}},"271":{"start":{"line":284,"column":30},"end":{"line":284,"column":37}},"272":{"start":{"line":284,"column":49},"end":{"line":284,"column":59}},"273":{"start":{"line":284,"column":72},"end":{"line":284,"column":83}},"274":{"start":{"line":285,"column":17},"end":{"line":285,"column":84}},"275":{"start":{"line":286,"column":4},"end":{"line":286,"column":28}},"276":{"start":{"line":288,"column":0},"end":{"line":293,"column":3}},"277":{"start":{"line":289,"column":16},"end":{"line":289,"column":33}},"278":{"start":{"line":290,"column":13},"end":{"line":290,"column":21}},"279":{"start":{"line":290,"column":37},"end":{"line":290,"column":51}},"280":{"start":{"line":290,"column":63},"end":{"line":290,"column":73}},"281":{"start":{"line":290,"column":87},"end":{"line":290,"column":99}},"282":{"start":{"line":290,"column":108},"end":{"line":290,"column":115}},"283":{"start":{"line":291,"column":17},"end":{"line":291,"column":92}},"284":{"start":{"line":292,"column":4},"end":{"line":292,"column":28}},"285":{"start":{"line":294,"column":0},"end":{"line":299,"column":3}},"286":{"start":{"line":295,"column":16},"end":{"line":295,"column":33}},"287":{"start":{"line":296,"column":13},"end":{"line":296,"column":21}},"288":{"start":{"line":296,"column":29},"end":{"line":296,"column":35}},"289":{"start":{"line":296,"column":52},"end":{"line":296,"column":67}},"290":{"start":{"line":297,"column":17},"end":{"line":297,"column":83}},"291":{"start":{"line":298,"column":4},"end":{"line":298,"column":28}},"292":{"start":{"line":300,"column":0},"end":{"line":304,"column":3}},"293":{"start":{"line":301,"column":16},"end":{"line":301,"column":30}},"294":{"start":{"line":302,"column":17},"end":{"line":302,"column":58}},"295":{"start":{"line":303,"column":4},"end":{"line":303,"column":28}},"296":{"start":{"line":305,"column":0},"end":{"line":309,"column":3}},"297":{"start":{"line":306,"column":13},"end":{"line":306,"column":21}},"298":{"start":{"line":306,"column":35},"end":{"line":306,"column":47}},"299":{"start":{"line":306,"column":63},"end":{"line":306,"column":77}},"300":{"start":{"line":307,"column":17},"end":{"line":307,"column":68}},"301":{"start":{"line":308,"column":4},"end":{"line":308,"column":28}},"302":{"start":{"line":310,"column":0},"end":{"line":315,"column":3}},"303":{"start":{"line":311,"column":16},"end":{"line":311,"column":33}},"304":{"start":{"line":312,"column":14},"end":{"line":312,"column":37}},"305":{"start":{"line":313,"column":17},"end":{"line":313,"column":59}},"306":{"start":{"line":314,"column":4},"end":{"line":314,"column":28}},"307":{"start":{"line":316,"column":0},"end":{"line":321,"column":3}},"308":{"start":{"line":317,"column":16},"end":{"line":317,"column":33}},"309":{"start":{"line":318,"column":13},"end":{"line":318,"column":21}},"310":{"start":{"line":318,"column":35},"end":{"line":318,"column":47}},"311":{"start":{"line":318,"column":59},"end":{"line":318,"column":69}},"312":{"start":{"line":319,"column":17},"end":{"line":319,"column":73}},"313":{"start":{"line":320,"column":4},"end":{"line":320,"column":28}},"314":{"start":{"line":322,"column":0},"end":{"line":327,"column":3}},"315":{"start":{"line":323,"column":16},"end":{"line":323,"column":33}},"316":{"start":{"line":324,"column":13},"end":{"line":324,"column":21}},"317":{"start":{"line":324,"column":35},"end":{"line":324,"column":47}},"318":{"start":{"line":324,"column":59},"end":{"line":324,"column":69}},"319":{"start":{"line":325,"column":17},"end":{"line":325,"column":75}},"320":{"start":{"line":326,"column":4},"end":{"line":326,"column":28}},"321":{"start":{"line":328,"column":0},"end":{"line":332,"column":3}},"322":{"start":{"line":329,"column":16},"end":{"line":329,"column":33}},"323":{"start":{"line":330,"column":17},"end":{"line":330,"column":48}},"324":{"start":{"line":331,"column":4},"end":{"line":331,"column":28}},"325":{"start":{"line":333,"column":0},"end":{"line":337,"column":3}},"326":{"start":{"line":334,"column":16},"end":{"line":334,"column":33}},"327":{"start":{"line":335,"column":17},"end":{"line":335,"column":49}},"328":{"start":{"line":336,"column":4},"end":{"line":336,"column":28}},"329":{"start":{"line":340,"column":0},"end":{"line":340,"column":49}},"330":{"start":{"line":342,"column":13},"end":{"line":345,"column":2}},"331":{"start":{"line":344,"column":4},"end":{"line":344,"column":90}},"332":{"start":{"line":347,"column":0},"end":{"line":349,"column":3}},"333":{"start":{"line":348,"column":4},"end":{"line":348,"column":90}},"334":{"start":{"line":348,"column":31},"end":{"line":348,"column":86}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":80},"end":{"line":13,"column":81}},"loc":{"start":{"line":13,"column":95},"end":{"line":15,"column":1}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":5},"end":{"line":15,"column":6}},"loc":{"start":{"line":15,"column":20},"end":{"line":17,"column":1}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":50},"end":{"line":18,"column":51}},"loc":{"start":{"line":18,"column":65},"end":{"line":24,"column":1}},"line":18},"6":{"name":"(anonymous_6)","decl":{"start":{"line":25,"column":56},"end":{"line":25,"column":57}},"loc":{"start":{"line":25,"column":71},"end":{"line":27,"column":1}},"line":25},"7":{"name":"(anonymous_7)","decl":{"start":{"line":58,"column":17},"end":{"line":58,"column":18}},"loc":{"start":{"line":58,"column":43},"end":{"line":61,"column":1}},"line":58},"8":{"name":"(anonymous_8)","decl":{"start":{"line":62,"column":27},"end":{"line":62,"column":28}},"loc":{"start":{"line":62,"column":53},"end":{"line":66,"column":1}},"line":62},"9":{"name":"(anonymous_9)","decl":{"start":{"line":67,"column":30},"end":{"line":67,"column":31}},"loc":{"start":{"line":67,"column":56},"end":{"line":71,"column":1}},"line":67},"10":{"name":"(anonymous_10)","decl":{"start":{"line":72,"column":32},"end":{"line":72,"column":33}},"loc":{"start":{"line":72,"column":58},"end":{"line":77,"column":1}},"line":72},"11":{"name":"(anonymous_11)","decl":{"start":{"line":78,"column":29},"end":{"line":78,"column":30}},"loc":{"start":{"line":78,"column":55},"end":{"line":82,"column":1}},"line":78},"12":{"name":"(anonymous_12)","decl":{"start":{"line":83,"column":32},"end":{"line":83,"column":33}},"loc":{"start":{"line":83,"column":58},"end":{"line":87,"column":1}},"line":83},"13":{"name":"(anonymous_13)","decl":{"start":{"line":88,"column":29},"end":{"line":88,"column":30}},"loc":{"start":{"line":88,"column":55},"end":{"line":93,"column":1}},"line":88},"14":{"name":"(anonymous_14)","decl":{"start":{"line":94,"column":24},"end":{"line":94,"column":25}},"loc":{"start":{"line":94,"column":50},"end":{"line":97,"column":1}},"line":94},"15":{"name":"(anonymous_15)","decl":{"start":{"line":98,"column":32},"end":{"line":98,"column":33}},"loc":{"start":{"line":98,"column":58},"end":{"line":104,"column":1}},"line":98},"16":{"name":"(anonymous_16)","decl":{"start":{"line":105,"column":30},"end":{"line":105,"column":31}},"loc":{"start":{"line":105,"column":56},"end":{"line":110,"column":1}},"line":105},"17":{"name":"(anonymous_17)","decl":{"start":{"line":111,"column":33},"end":{"line":111,"column":34}},"loc":{"start":{"line":111,"column":59},"end":{"line":116,"column":1}},"line":111},"18":{"name":"(anonymous_18)","decl":{"start":{"line":117,"column":36},"end":{"line":117,"column":37}},"loc":{"start":{"line":117,"column":62},"end":{"line":122,"column":1}},"line":117},"19":{"name":"(anonymous_19)","decl":{"start":{"line":123,"column":31},"end":{"line":123,"column":32}},"loc":{"start":{"line":123,"column":57},"end":{"line":128,"column":1}},"line":123},"20":{"name":"(anonymous_20)","decl":{"start":{"line":129,"column":26},"end":{"line":129,"column":27}},"loc":{"start":{"line":129,"column":52},"end":{"line":134,"column":1}},"line":129},"21":{"name":"(anonymous_21)","decl":{"start":{"line":135,"column":25},"end":{"line":135,"column":26}},"loc":{"start":{"line":135,"column":51},"end":{"line":140,"column":1}},"line":135},"22":{"name":"(anonymous_22)","decl":{"start":{"line":141,"column":27},"end":{"line":141,"column":28}},"loc":{"start":{"line":141,"column":53},"end":{"line":147,"column":1}},"line":141},"23":{"name":"(anonymous_23)","decl":{"start":{"line":148,"column":23},"end":{"line":148,"column":24}},"loc":{"start":{"line":148,"column":49},"end":{"line":152,"column":1}},"line":148},"24":{"name":"(anonymous_24)","decl":{"start":{"line":153,"column":31},"end":{"line":153,"column":32}},"loc":{"start":{"line":153,"column":57},"end":{"line":158,"column":1}},"line":153},"25":{"name":"(anonymous_25)","decl":{"start":{"line":159,"column":33},"end":{"line":159,"column":34}},"loc":{"start":{"line":159,"column":59},"end":{"line":164,"column":1}},"line":159},"26":{"name":"(anonymous_26)","decl":{"start":{"line":165,"column":28},"end":{"line":165,"column":29}},"loc":{"start":{"line":165,"column":54},"end":{"line":169,"column":1}},"line":165},"27":{"name":"(anonymous_27)","decl":{"start":{"line":170,"column":26},"end":{"line":170,"column":27}},"loc":{"start":{"line":170,"column":52},"end":{"line":175,"column":1}},"line":170},"28":{"name":"(anonymous_28)","decl":{"start":{"line":176,"column":28},"end":{"line":176,"column":29}},"loc":{"start":{"line":176,"column":54},"end":{"line":181,"column":1}},"line":176},"29":{"name":"(anonymous_29)","decl":{"start":{"line":182,"column":29},"end":{"line":182,"column":30}},"loc":{"start":{"line":182,"column":55},"end":{"line":187,"column":1}},"line":182},"30":{"name":"(anonymous_30)","decl":{"start":{"line":188,"column":38},"end":{"line":188,"column":39}},"loc":{"start":{"line":188,"column":64},"end":{"line":193,"column":1}},"line":188},"31":{"name":"(anonymous_31)","decl":{"start":{"line":194,"column":37},"end":{"line":194,"column":38}},"loc":{"start":{"line":194,"column":63},"end":{"line":199,"column":1}},"line":194},"32":{"name":"(anonymous_32)","decl":{"start":{"line":200,"column":36},"end":{"line":200,"column":37}},"loc":{"start":{"line":200,"column":62},"end":{"line":205,"column":1}},"line":200},"33":{"name":"(anonymous_33)","decl":{"start":{"line":206,"column":25},"end":{"line":206,"column":26}},"loc":{"start":{"line":206,"column":51},"end":{"line":210,"column":1}},"line":206},"34":{"name":"(anonymous_34)","decl":{"start":{"line":211,"column":28},"end":{"line":211,"column":29}},"loc":{"start":{"line":211,"column":54},"end":{"line":216,"column":1}},"line":211},"35":{"name":"(anonymous_35)","decl":{"start":{"line":217,"column":28},"end":{"line":217,"column":29}},"loc":{"start":{"line":217,"column":54},"end":{"line":222,"column":1}},"line":217},"36":{"name":"(anonymous_36)","decl":{"start":{"line":223,"column":30},"end":{"line":223,"column":31}},"loc":{"start":{"line":223,"column":56},"end":{"line":228,"column":1}},"line":223},"37":{"name":"(anonymous_37)","decl":{"start":{"line":229,"column":22},"end":{"line":229,"column":23}},"loc":{"start":{"line":229,"column":48},"end":{"line":234,"column":1}},"line":229},"38":{"name":"(anonymous_38)","decl":{"start":{"line":235,"column":33},"end":{"line":235,"column":34}},"loc":{"start":{"line":235,"column":59},"end":{"line":239,"column":1}},"line":235},"39":{"name":"(anonymous_39)","decl":{"start":{"line":240,"column":28},"end":{"line":240,"column":29}},"loc":{"start":{"line":240,"column":54},"end":{"line":245,"column":1}},"line":240},"40":{"name":"(anonymous_40)","decl":{"start":{"line":246,"column":31},"end":{"line":246,"column":32}},"loc":{"start":{"line":246,"column":57},"end":{"line":251,"column":1}},"line":246},"41":{"name":"(anonymous_41)","decl":{"start":{"line":252,"column":30},"end":{"line":252,"column":31}},"loc":{"start":{"line":252,"column":56},"end":{"line":257,"column":1}},"line":252},"42":{"name":"(anonymous_42)","decl":{"start":{"line":258,"column":30},"end":{"line":258,"column":31}},"loc":{"start":{"line":258,"column":56},"end":{"line":263,"column":1}},"line":258},"43":{"name":"(anonymous_43)","decl":{"start":{"line":264,"column":29},"end":{"line":264,"column":30}},"loc":{"start":{"line":264,"column":55},"end":{"line":269,"column":1}},"line":264},"44":{"name":"(anonymous_44)","decl":{"start":{"line":270,"column":41},"end":{"line":270,"column":42}},"loc":{"start":{"line":270,"column":67},"end":{"line":275,"column":1}},"line":270},"45":{"name":"(anonymous_45)","decl":{"start":{"line":276,"column":34},"end":{"line":276,"column":35}},"loc":{"start":{"line":276,"column":60},"end":{"line":281,"column":1}},"line":276},"46":{"name":"(anonymous_46)","decl":{"start":{"line":282,"column":36},"end":{"line":282,"column":37}},"loc":{"start":{"line":282,"column":62},"end":{"line":287,"column":1}},"line":282},"47":{"name":"(anonymous_47)","decl":{"start":{"line":288,"column":30},"end":{"line":288,"column":31}},"loc":{"start":{"line":288,"column":56},"end":{"line":293,"column":1}},"line":288},"48":{"name":"(anonymous_48)","decl":{"start":{"line":294,"column":44},"end":{"line":294,"column":45}},"loc":{"start":{"line":294,"column":70},"end":{"line":299,"column":1}},"line":294},"49":{"name":"(anonymous_49)","decl":{"start":{"line":300,"column":43},"end":{"line":300,"column":44}},"loc":{"start":{"line":300,"column":69},"end":{"line":304,"column":1}},"line":300},"50":{"name":"(anonymous_50)","decl":{"start":{"line":305,"column":41},"end":{"line":305,"column":42}},"loc":{"start":{"line":305,"column":67},"end":{"line":309,"column":1}},"line":305},"51":{"name":"(anonymous_51)","decl":{"start":{"line":310,"column":36},"end":{"line":310,"column":37}},"loc":{"start":{"line":310,"column":62},"end":{"line":315,"column":1}},"line":310},"52":{"name":"(anonymous_52)","decl":{"start":{"line":316,"column":30},"end":{"line":316,"column":31}},"loc":{"start":{"line":316,"column":56},"end":{"line":321,"column":1}},"line":316},"53":{"name":"(anonymous_53)","decl":{"start":{"line":322,"column":32},"end":{"line":322,"column":33}},"loc":{"start":{"line":322,"column":58},"end":{"line":327,"column":1}},"line":322},"54":{"name":"(anonymous_54)","decl":{"start":{"line":328,"column":26},"end":{"line":328,"column":27}},"loc":{"start":{"line":328,"column":52},"end":{"line":332,"column":1}},"line":328},"55":{"name":"(anonymous_55)","decl":{"start":{"line":333,"column":27},"end":{"line":333,"column":28}},"loc":{"start":{"line":333,"column":53},"end":{"line":337,"column":1}},"line":333},"56":{"name":"(anonymous_56)","decl":{"start":{"line":342,"column":36},"end":{"line":342,"column":37}},"loc":{"start":{"line":342,"column":48},"end":{"line":345,"column":1}},"line":342},"57":{"name":"(anonymous_57)","decl":{"start":{"line":347,"column":21},"end":{"line":347,"column":22}},"loc":{"start":{"line":347,"column":33},"end":{"line":349,"column":1}},"line":347},"58":{"name":"(anonymous_58)","decl":{"start":{"line":348,"column":17},"end":{"line":348,"column":18}},"loc":{"start":{"line":348,"column":29},"end":{"line":348,"column":88}},"line":348}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"type":"binary-expr","locations":[{"start":{"line":13,"column":26},"end":{"line":13,"column":30}},{"start":{"line":13,"column":34},"end":{"line":13,"column":57}},{"start":{"line":13,"column":63},"end":{"line":17,"column":1}}],"line":13},"9":{"loc":{"start":{"line":13,"column":63},"end":{"line":17,"column":1}},"type":"cond-expr","locations":[{"start":{"line":13,"column":80},"end":{"line":15,"column":1}},{"start":{"line":15,"column":5},"end":{"line":17,"column":1}}],"line":13},"10":{"loc":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"type":"binary-expr","locations":[{"start":{"line":18,"column":20},"end":{"line":18,"column":24}},{"start":{"line":18,"column":28},"end":{"line":18,"column":45}},{"start":{"line":18,"column":50},"end":{"line":24,"column":1}}],"line":18},"11":{"loc":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},{"start":{"line":19,"column":4},"end":{"line":19,"column":42}}],"line":19},"12":{"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":11}},{"start":{"line":19,"column":15},"end":{"line":19,"column":29}}],"line":19},"13":{"loc":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},{"start":{"line":21,"column":4},"end":{"line":21,"column":141}}],"line":21},"14":{"loc":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},{"start":{"line":21,"column":40},"end":{"line":21,"column":141}}],"line":21},"15":{"loc":{"start":{"line":21,"column":44},"end":{"line":21,"column":107}},"type":"binary-expr","locations":[{"start":{"line":21,"column":44},"end":{"line":21,"column":59}},{"start":{"line":21,"column":63},"end":{"line":21,"column":107}}],"line":21},"16":{"loc":{"start":{"line":25,"column":22},"end":{"line":27,"column":1}},"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":27}},{"start":{"line":25,"column":31},"end":{"line":25,"column":51}},{"start":{"line":25,"column":56},"end":{"line":27,"column":1}}],"line":25},"17":{"loc":{"start":{"line":26,"column":11},"end":{"line":26,"column":61}},"type":"cond-expr","locations":[{"start":{"line":26,"column":37},"end":{"line":26,"column":40}},{"start":{"line":26,"column":43},"end":{"line":26,"column":61}}],"line":26},"18":{"loc":{"start":{"line":26,"column":12},"end":{"line":26,"column":33}},"type":"binary-expr","locations":[{"start":{"line":26,"column":12},"end":{"line":26,"column":15}},{"start":{"line":26,"column":19},"end":{"line":26,"column":33}}],"line":26},"19":{"loc":{"start":{"line":55,"column":20},"end":{"line":55,"column":66}},"type":"binary-expr","locations":[{"start":{"line":55,"column":20},"end":{"line":55,"column":36}},{"start":{"line":55,"column":40},"end":{"line":55,"column":66}}],"line":55},"20":{"loc":{"start":{"line":56,"column":11},"end":{"line":56,"column":40}},"type":"binary-expr","locations":[{"start":{"line":56,"column":11},"end":{"line":56,"column":25}},{"start":{"line":56,"column":29},"end":{"line":56,"column":40}}],"line":56}},"s":{"0":1,"1":11,"2":11,"3":11,"4":11,"5":11,"6":1,"7":11,"8":0,"9":0,"10":0,"11":1,"12":1,"13":0,"14":1,"15":1,"16":0,"17":1,"18":1,"19":1,"20":11,"21":11,"22":1,"23":1,"24":1,"25":4,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":2,"51":2,"52":1,"53":7,"54":7,"55":7,"56":7,"57":5,"58":1,"59":715,"60":715,"61":715,"62":715,"63":715,"64":715,"65":704,"66":1,"67":391,"68":391,"69":391,"70":391,"71":391,"72":388,"73":1,"74":4,"75":4,"76":3,"77":1,"78":4,"79":4,"80":3,"81":1,"82":76,"83":76,"84":76,"85":67,"86":1,"87":663,"88":663,"89":1,"90":25,"91":25,"92":25,"93":25,"94":21,"95":1,"96":15,"97":15,"98":15,"99":8,"100":1,"101":19,"102":19,"103":19,"104":19,"105":19,"106":6,"107":1,"108":18,"109":18,"110":18,"111":18,"112":18,"113":2,"114":1,"115":22,"116":22,"117":22,"118":17,"119":1,"120":193,"121":193,"122":193,"123":187,"124":1,"125":7,"126":7,"127":7,"128":4,"129":1,"130":29,"131":29,"132":29,"133":29,"134":25,"135":1,"136":6,"137":6,"138":5,"139":1,"140":16,"141":16,"142":16,"143":16,"144":16,"145":5,"146":1,"147":16,"148":16,"149":16,"150":8,"151":1,"152":8,"153":8,"154":5,"155":1,"156":8,"157":8,"158":8,"159":5,"160":1,"161":19,"162":19,"163":19,"164":19,"165":19,"166":10,"167":1,"168":285,"169":285,"170":285,"171":285,"172":285,"173":280,"174":1,"175":6,"176":6,"177":6,"178":1,"179":1,"180":4,"181":4,"182":4,"183":1,"184":1,"185":3,"186":3,"187":3,"188":3,"189":3,"190":1,"191":1,"192":2,"193":2,"194":1,"195":1,"196":14,"197":14,"198":14,"199":12,"200":1,"201":20,"202":20,"203":20,"204":12,"205":1,"206":11,"207":11,"208":11,"209":4,"210":1,"211":5,"212":5,"213":5,"214":2,"215":1,"216":19,"217":19,"218":18,"219":1,"220":6,"221":6,"222":6,"223":3,"224":1,"225":145,"226":145,"227":145,"228":145,"229":145,"230":140,"231":1,"232":9,"233":9,"234":9,"235":9,"236":9,"237":4,"238":1,"239":7,"240":7,"241":7,"242":4,"243":1,"244":12,"245":12,"246":12,"247":12,"248":12,"249":6,"250":1,"251":10,"252":10,"253":10,"254":10,"255":10,"256":10,"257":10,"258":10,"259":2,"260":1,"261":10,"262":10,"263":10,"264":10,"265":10,"266":10,"267":4,"268":1,"269":10,"270":10,"271":10,"272":10,"273":10,"274":10,"275":4,"276":1,"277":13,"278":13,"279":13,"280":13,"281":13,"282":13,"283":13,"284":4,"285":1,"286":17,"287":17,"288":17,"289":17,"290":17,"291":5,"292":1,"293":6,"294":6,"295":6,"296":1,"297":4,"298":4,"299":4,"300":4,"301":2,"302":1,"303":8,"304":8,"305":8,"306":1,"307":1,"308":22,"309":22,"310":22,"311":22,"312":22,"313":15,"314":1,"315":13,"316":13,"317":13,"318":13,"319":13,"320":4,"321":1,"322":16,"323":16,"324":15,"325":1,"326":14,"327":14,"328":13,"329":1,"330":1,"331":1,"332":1,"333":1,"334":1},"f":{"0":11,"1":1,"2":0,"3":1,"4":0,"5":1,"6":4,"7":2,"8":7,"9":715,"10":391,"11":4,"12":4,"13":76,"14":663,"15":25,"16":15,"17":19,"18":18,"19":22,"20":193,"21":7,"22":29,"23":6,"24":16,"25":16,"26":8,"27":8,"28":19,"29":285,"30":6,"31":4,"32":3,"33":2,"34":14,"35":20,"36":11,"37":5,"38":19,"39":6,"40":145,"41":9,"42":7,"43":12,"44":10,"45":10,"46":10,"47":13,"48":17,"49":6,"50":4,"51":8,"52":22,"53":13,"54":16,"55":14,"56":1,"57":1,"58":1},"b":{"0":[1,1,1],"1":[1,0],"2":[11,0],"3":[11,0],"4":[11,11],"5":[0,11],"6":[11,0],"7":[0,0],"8":[1,1,1],"9":[1,0],"10":[1,1,1],"11":[0,1],"12":[1,1],"13":[1,0],"14":[11,0],"15":[11,11],"16":[1,1,1],"17":[0,4],"18":[4,4],"19":[1,1],"20":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/binvog/Documents/UNSW 2023T1/COMP1531/Indiv_projectbackend/iter4-project-backend/src/server.ts","sources":["/Users/binvog/Documents/UNSW 2023T1/COMP1531/Indiv_projectbackend/iter4-project-backend/src/server.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,iDAA2D;AAC3D,+BAA8B;AAC9B,kDAA4B;AAC5B,8DAAmC;AACnC,8CAAwB;AACxB,kFAAkD;AAClD,+BAMgB;AAEhB,uCAIoB;AAEpB,qCAQmB;AACnB,qCAcmB;AACnB,iCASiB;AACjB,2BAOc;AACd,2CAA2C;AAC3C,iCAAkC;AAClC,qCAA2E;AAC3E,iCAAyE;AAEzE,iBAAiB;AACjB,IAAM,GAAG,GAAG,IAAA,iBAAO,GAAE,CAAC;AACtB,oEAAoE;AACpE,GAAG,CAAC,GAAG,CAAC,IAAA,cAAI,GAAE,CAAC,CAAC;AAChB,2DAA2D;AAC3D,GAAG,CAAC,GAAG,CAAC,IAAA,cAAI,GAAE,CAAC,CAAC;AAChB,yCAAyC;AACzC,GAAG,CAAC,GAAG,CAAC,IAAA,gBAAM,EAAC,KAAK,CAAC,CAAC,CAAC;AACvB,gBAAgB;AAChB,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,iBAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;AAEvC,IAAM,IAAI,GAAW,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,qBAAM,CAAC,IAAI,CAAC,CAAC;AAC/D,IAAM,IAAI,GAAW,OAAO,CAAC,GAAG,CAAC,EAAE,IAAI,WAAW,CAAC;AAEnD,sBAAsB;AACtB,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,UAAC,GAAY,EAAE,GAAa,EAAE,IAAI;IACjD,IAAM,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,IAAc,CAAC;IACtC,OAAO,GAAG,CAAC,IAAI,CAAC,IAAA,WAAI,EAAC,IAAI,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,IAAI,CAAC,gBAAgB,EAAE,UAAC,GAAY,EAAE,GAAa,EAAE,IAAI;IACrD,IAAA,KAAsB,GAAG,CAAC,IAAI,EAA5B,KAAK,WAAA,EAAE,QAAQ,cAAa,CAAC;IACrC,IAAM,MAAM,GAAG,IAAA,kBAAW,EAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;IAC5C,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,IAAI,CAAC,mBAAmB,EAAE,UAAC,GAAY,EAAE,GAAa,EAAE,IAAI;IACxD,IAAA,KAA2C,GAAG,CAAC,IAAI,EAAjD,KAAK,WAAA,EAAE,QAAQ,cAAA,EAAE,SAAS,eAAA,EAAE,QAAQ,cAAa,CAAC;IAC1D,IAAM,MAAM,GAAG,IAAA,qBAAc,EAAC,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;IACpE,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,IAAI,CAAC,qBAAqB,EAAE,UAAC,GAAY,EAAE,GAAa,EAAE,IAAI;IAChE,IAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,KAAe,CAAC;IACpC,IAAA,KAAqB,GAAG,CAAC,IAAI,EAA3B,IAAI,UAAA,EAAE,QAAQ,cAAa,CAAC;IACpC,IAAM,MAAM,GAAG,IAAA,2BAAgB,EAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;IACvD,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,GAAG,CAAC,mBAAmB,EAAE,UAAC,GAAY,EAAE,GAAa,EAAE,IAAI;IAC7D,IAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,KAAe,CAAC;IAC1C,IAAM,MAAM,GAAG,IAAA,yBAAc,EAAC,KAAK,CAAC,CAAC;IACrC,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,GAAG,CAAC,sBAAsB,EAAE,UAAC,GAAY,EAAE,GAAa,EAAE,IAAI;IAChE,IAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,KAAe,CAAC;IAC1C,IAAM,MAAM,GAAG,IAAA,4BAAiB,EAAC,KAAK,CAAC,CAAC;IACxC,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,IAAI,CAAC,kBAAkB,EAAE,UAAC,GAAY,EAAE,GAAa,EAAE,IAAI;IAC7D,IAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,KAAe,CAAC;IAClC,IAAA,SAAS,GAAK,GAAG,CAAC,IAAI,UAAb,CAAc;IAC/B,IAAM,MAAM,GAAG,IAAA,uBAAa,EAAC,KAAK,EAAE,SAAS,CAAC,CAAC;IAC/C,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,MAAM,CAAC,WAAW,EAAE,UAAC,GAAY,EAAE,GAAa,EAAE,IAAI;IACxD,IAAM,MAAM,GAAG,IAAA,eAAO,GAAE,CAAC;IACzB,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,GAAG,CAAC,sBAAsB,EAAE,UAAC,GAAY,EAAE,GAAa,EAAE,IAAI;IAChE,IAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,KAAe,CAAC;IAC1C,IAAM,SAAS,GAAG,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,SAAmB,CAAC,CAAC;IAC1D,IAAM,KAAK,GAAG,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,KAAe,CAAC,CAAC;IAClD,IAAM,MAAM,GAAG,IAAA,2BAAiB,EAAC,KAAK,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;IAC1D,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,IAAI,CAAC,mBAAmB,EAAE,UAAC,GAAY,EAAE,GAAa,EAAE,IAAI;IAC9D,IAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,KAAe,CAAC;IAClC,IAAA,SAAS,GAAK,GAAG,CAAC,IAAI,UAAb,CAAc;IAC/B,IAAM,MAAM,GAAG,IAAA,wBAAc,EAAC,KAAK,EAAE,SAAS,CAAC,CAAC;IAChD,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,IAAI,CAAC,sBAAsB,EAAE,UAAC,GAAY,EAAE,GAAa,EAAE,IAAI;IACjE,IAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,KAAe,CAAC;IACpC,IAAA,KAAqB,GAAG,CAAC,IAAI,EAA3B,SAAS,eAAA,EAAE,GAAG,SAAa,CAAC;IACpC,IAAM,MAAM,GAAG,IAAA,2BAAiB,EAAC,KAAK,EAAE,SAAS,EAAE,GAAG,CAAC,CAAC;IACxD,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,IAAI,CAAC,yBAAyB,EAAE,UAAC,GAAY,EAAE,GAAa,EAAE,IAAI;IACpE,IAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,KAAe,CAAC;IACpC,IAAA,KAAqB,GAAG,CAAC,IAAI,EAA3B,SAAS,eAAA,EAAE,GAAG,SAAa,CAAC;IACpC,IAAM,MAAM,GAAG,IAAA,8BAAoB,EAAC,KAAK,EAAE,SAAS,EAAE,GAAG,CAAC,CAAC;IAC3D,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,GAAG,CAAC,qBAAqB,EAAE,UAAC,GAAY,EAAE,GAAa,EAAE,IAAI;IAC/D,IAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,KAAe,CAAC;IAC1C,IAAM,SAAS,GAAG,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,SAAmB,CAAC,CAAC;IAC1D,IAAM,MAAM,GAAG,IAAA,0BAAgB,EAAC,KAAK,EAAE,SAAS,CAAC,CAAC;IAClD,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,IAAI,CAAC,eAAe,EAAE,UAAC,GAAY,EAAE,GAAa,EAAE,IAAI;IAC1D,IAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,KAAe,CAAC;IAClC,IAAA,IAAI,GAAK,GAAG,CAAC,IAAI,KAAb,CAAc;IAC1B,IAAM,MAAM,GAAG,IAAA,eAAU,EAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IACvC,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,IAAI,CAAC,cAAc,EAAE,UAAC,GAAY,EAAE,GAAa,EAAE,IAAI;IACzD,IAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,KAAe,CAAC;IAClC,IAAA,IAAI,GAAK,GAAG,CAAC,IAAI,KAAb,CAAc;IAC1B,IAAM,MAAM,GAAG,IAAA,cAAS,EAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IACtC,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,GAAG,CAAC,iBAAiB,EAAE,UAAC,GAAY,EAAE,GAAa,EAAE,IAAI;IAC3D,IAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,KAAe,CAAC;IAC1C,IAAM,IAAI,GAAG,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,IAAc,CAAC,CAAC;IAChD,IAAM,KAAK,GAAG,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,KAAe,CAAC,CAAC;IAClD,IAAM,MAAM,GAAG,IAAA,iBAAY,EAAC,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;IAChD,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC;AACH,GAAG,CAAC,GAAG,CAAC,aAAa,EAAE,UAAC,GAAY,EAAE,GAAa,EAAE,IAAI;IACvD,IAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,KAAe,CAAC;IAC1C,IAAM,MAAM,GAAG,IAAA,aAAQ,EAAC,KAAK,CAAC,CAAC;IAC/B,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,IAAI,CAAC,oBAAoB,EAAE,UAAC,GAAY,EAAE,GAAa,EAAE,IAAI;IAC/D,IAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,KAAe,CAAC;IACpC,IAAA,KAAqB,GAAG,CAAC,IAAI,EAA3B,SAAS,eAAA,EAAE,GAAG,SAAa,CAAC;IACpC,IAAM,MAAM,GAAG,IAAA,yBAAe,EAAC,KAAK,EAAE,SAAS,EAAE,GAAG,CAAC,CAAC;IACtD,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,MAAM,CAAC,oBAAoB,EAAE,UAAC,GAAY,EAAE,GAAa,EAAE,IAAI;IACjE,IAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,KAAe,CAAC;IAC1C,IAAM,SAAS,GAAG,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,SAAmB,CAAC,CAAC;IAC1D,IAAM,MAAM,GAAG,IAAA,yBAAe,EAAC,KAAK,EAAE,SAAS,CAAC,CAAC;IACjD,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,IAAI,CAAC,iBAAiB,EAAE,UAAC,GAAY,EAAE,GAAa,EAAE,IAAI;IAC5D,IAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,KAAe,CAAC;IAC1C,IAAM,MAAM,GAAG,IAAA,mBAAY,EAAC,KAAK,CAAC,CAAC;IACnC,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,GAAG,CAAC,gBAAgB,EAAE,UAAC,GAAY,EAAE,GAAa,EAAE,IAAI;IAC1D,IAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,KAAe,CAAC;IAC1C,IAAM,IAAI,GAAG,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,IAAc,CAAC,CAAC;IAChD,IAAM,MAAM,GAAG,IAAA,gBAAW,EAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IACxC,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,GAAG,CAAC,kBAAkB,EAAE,UAAC,GAAY,EAAE,GAAa,EAAE,IAAI;IAC5D,IAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,KAAe,CAAC;IACpC,IAAA,KAAyB,GAAG,CAAC,IAAI,EAA/B,SAAS,eAAA,EAAE,OAAO,aAAa,CAAC;IACxC,IAAM,MAAM,GAAG,IAAA,uBAAa,EAAC,KAAK,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;IACxD,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC;AACH,GAAG,CAAC,IAAI,CAAC,kBAAkB,EAAE,UAAC,GAAY,EAAE,GAAa,EAAE,IAAI;IAC7D,IAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,KAAe,CAAC;IACpC,IAAA,KAAyB,GAAG,CAAC,IAAI,EAA/B,SAAS,eAAA,EAAE,OAAO,aAAa,CAAC;IACxC,IAAM,MAAM,GAAG,IAAA,uBAAa,EAAC,KAAK,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;IACxD,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,GAAG,CAAC,4BAA4B,EAAE,UAAC,GAAY,EAAE,GAAa,EAAE,IAAI;IACtE,IAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,KAAe,CAAC;IAClC,IAAA,SAAS,GAAK,GAAG,CAAC,IAAI,UAAb,CAAc;IAC/B,IAAM,MAAM,GAAG,IAAA,iBAAS,EAAC,KAAK,EAAE,SAAS,CAAC,CAAC;IAC3C,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,GAAG,CAAC,2BAA2B,EAAE,UAAC,GAAY,EAAE,GAAa,EAAE,IAAI;IACrE,IAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,KAAe,CAAC;IAClC,IAAA,KAAK,GAAK,GAAG,CAAC,IAAI,MAAb,CAAc;IAC3B,IAAM,MAAM,GAAG,IAAA,gBAAQ,EAAC,KAAK,EAAE,KAAK,CAAC,CAAC;IACtC,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,GAAG,CAAC,0BAA0B,EAAE,UAAC,GAAY,EAAE,GAAa,EAAE,IAAI;IACpE,IAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,KAAe,CAAC;IACpC,IAAA,KAA0B,GAAG,CAAC,IAAI,EAAhC,SAAS,eAAA,EAAE,QAAQ,cAAa,CAAC;IACzC,IAAM,MAAM,GAAG,IAAA,eAAO,EAAC,KAAK,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;IACnD,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,GAAG,CAAC,eAAe,EAAE,UAAC,GAAY,EAAE,GAAa,EAAE,IAAI;IACzD,IAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,KAAe,CAAC;IAC1C,IAAM,MAAM,GAAG,IAAA,mBAAW,EAAC,KAAK,CAAC,CAAC;IAClC,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,GAAG,CAAC,kBAAkB,EAAE,UAAC,GAAY,EAAE,GAAa,EAAE,IAAI;IAC5D,IAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,KAAe,CAAC;IAC1C,IAAM,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,GAAa,CAAC,CAAC;IAC9C,IAAM,MAAM,GAAG,IAAA,qBAAa,EAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IACzC,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,IAAI,CAAC,iBAAiB,EAAE,UAAC,GAAY,EAAE,GAAa,EAAE,IAAI;IAC5D,IAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,KAAe,CAAC;IAClC,IAAA,SAAS,GAAK,GAAG,CAAC,IAAI,UAAb,CAAc;IAC/B,IAAM,MAAM,GAAG,IAAA,sBAAY,EAAC,KAAK,EAAE,SAAS,CAAC,CAAC;IAC9C,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,IAAI,CAAC,mBAAmB,EAAE,UAAC,GAAY,EAAE,GAAa,EAAE,IAAI;IAC9D,IAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,KAAe,CAAC;IAClC,IAAA,SAAS,GAAK,GAAG,CAAC,IAAI,UAAb,CAAc;IAC/B,IAAM,MAAM,GAAG,IAAA,wBAAc,EAAC,KAAK,EAAE,SAAS,CAAC,CAAC;IAChD,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,GAAG,CAAC,YAAY,EAAE,UAAC,GAAY,EAAE,GAAa,EAAE,IAAI;IACtD,IAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,KAAe,CAAC;IAC1C,IAAM,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC,QAAkB,CAAC;IAC9C,IAAM,MAAM,GAAG,IAAA,kBAAQ,EAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;IACzC,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,GAAG,CAAC,uBAAuB,EAAE,UAAC,GAAY,EAAE,GAAa,EAAE,IAAI;IACjE,IAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,KAAe,CAAC;IAC1C,IAAM,MAAM,GAAG,IAAA,4BAAkB,EAAC,KAAK,CAAC,CAAC;IACzC,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,MAAM,CAAC,eAAe,EAAE,UAAC,GAAY,EAAE,GAAa,EAAE,IAAI;IAC5D,IAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,KAAe,CAAC;IAC1C,IAAM,IAAI,GAAG,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,IAAc,CAAC,CAAC;IAChD,IAAM,MAAM,GAAG,IAAA,eAAU,EAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IACvC,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,IAAI,CAAC,oBAAoB,EAAE,UAAC,GAAY,EAAE,GAAa,EAAE,IAAI;IAC/D,IAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,KAAe,CAAC;IACpC,IAAA,KAAoB,GAAG,CAAC,IAAI,EAA1B,IAAI,UAAA,EAAE,OAAO,aAAa,CAAC;IACnC,IAAM,MAAM,GAAG,IAAA,yBAAe,EAAC,KAAK,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;IACrD,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,IAAI,CAAC,mBAAmB,EAAE,UAAC,GAAY,EAAE,GAAa,EAAE,IAAI;IAC9D,IAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,KAAe,CAAC;IACpC,IAAA,KAAwB,GAAG,CAAC,IAAI,EAA9B,SAAS,eAAA,EAAE,MAAM,YAAa,CAAC;IACvC,IAAM,MAAM,GAAG,IAAA,wBAAc,EAAC,KAAK,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;IACxD,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,GAAG,CAAC,oBAAoB,EAAE,UAAC,GAAY,EAAE,GAAa,EAAE,IAAI;IAC9D,IAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,KAAe,CAAC;IAC1C,IAAM,SAAS,GAAG,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,SAAmB,CAAC,CAAC;IAC1D,IAAM,MAAM,GAAG,IAAA,yBAAe,EAAC,KAAK,EAAE,SAAS,CAAC,CAAC;IACjD,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,IAAI,CAAC,kBAAkB,EAAE,UAAC,GAAY,EAAE,GAAa,EAAE,IAAI;IAC7D,IAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,KAAe,CAAC;IACpC,IAAA,KAAyB,GAAG,CAAC,IAAI,EAA/B,SAAS,eAAA,EAAE,OAAO,aAAa,CAAC;IACxC,IAAM,MAAM,GAAG,IAAA,uBAAa,EAAC,KAAK,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;IACxD,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,IAAI,CACN,8BAA8B,EAC9B,UAAC,GAAY,EAAE,GAAa,EAAE,IAAI;IAChC,IAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,KAAe,CAAC;IACpC,IAAA,KAAyC,GAAG,CAAC,IAAI,EAA/C,MAAM,YAAA,EAAE,MAAM,YAAA,EAAE,MAAM,YAAA,EAAE,IAAI,UAAA,EAAE,IAAI,UAAa,CAAC;IACxD,IAAM,MAAM,GAAG,IAAA,gCAAwB,EACrC,KAAK,EACL,MAAM,EACN,MAAM,EACN,MAAM,EACN,IAAI,EACJ,IAAI,CACL,CAAC;IACF,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1B,CAAC,CACF,CAAC;AACF,GAAG,CAAC,IAAI,CAAC,uBAAuB,EAAE,UAAC,GAAY,EAAE,GAAa,EAAE,IAAI;IAClE,IAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,KAAe,CAAC;IACpC,IAAA,KAAmC,GAAG,CAAC,IAAI,EAAzC,SAAS,eAAA,EAAE,OAAO,aAAA,EAAE,QAAQ,cAAa,CAAC;IAClD,IAAM,MAAM,GAAG,IAAA,4BAAkB,EAAC,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;IACvE,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,IAAI,CAAC,yBAAyB,EAAE,UAAC,GAAY,EAAE,GAAa,EAAE,IAAI;IACpE,IAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,KAAe,CAAC;IACpC,IAAA,KAA8B,GAAG,CAAC,IAAI,EAApC,IAAI,UAAA,EAAE,OAAO,aAAA,EAAE,QAAQ,cAAa,CAAC;IAC7C,IAAM,MAAM,GAAG,IAAA,8BAAoB,EAAC,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;IACpE,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,IAAI,CAAC,mBAAmB,EAAE,UAAC,GAAY,EAAE,GAAa,EAAE,IAAI;IAC9D,IAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,KAAe,CAAC;IACpC,IAAA,KAA4C,GAAG,CAAC,IAAI,EAAlD,WAAW,iBAAA,EAAE,OAAO,aAAA,EAAE,SAAS,eAAA,EAAE,IAAI,UAAa,CAAC;IAC3D,IAAM,MAAM,GAAG,IAAA,wBAAc,EAAC,KAAK,EAAE,WAAW,EAAE,OAAO,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;IAC5E,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,IAAI,CACN,iCAAiC,EACjC,UAAC,GAAY,EAAE,GAAa,EAAE,IAAI;IAChC,IAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,KAAe,CAAC;IACpC,IAAA,KAAwB,GAAG,CAAC,IAAI,EAA9B,GAAG,SAAA,EAAE,YAAY,kBAAa,CAAC;IACvC,IAAM,MAAM,GAAG,IAAA,mCAA2B,EAAC,KAAK,EAAE,GAAG,EAAE,YAAY,CAAC,CAAC;IACrE,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1B,CAAC,CACF,CAAC;AAEF,GAAG,CAAC,IAAI,CACN,gCAAgC,EAChC,UAAC,GAAY,EAAE,GAAa,EAAE,IAAI;IACxB,IAAA,KAAK,GAAK,GAAG,CAAC,IAAI,MAAb,CAAc;IAC3B,IAAM,MAAM,GAAG,IAAA,6BAAsB,EAAC,KAAK,CAAC,CAAC;IAC7C,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1B,CAAC,CACF,CAAC;AAEF,GAAG,CAAC,IAAI,CACN,8BAA8B,EAC9B,UAAC,GAAY,EAAE,GAAa,EAAE,IAAI;IAC1B,IAAA,KAA6B,GAAG,CAAC,IAAI,EAAnC,SAAS,eAAA,EAAE,WAAW,iBAAa,CAAC;IAC5C,IAAM,MAAM,GAAG,IAAA,sBAAe,EAAC,SAAS,EAAE,WAAW,CAAC,CAAC;IACvD,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1B,CAAC,CACF,CAAC;AAEF,GAAG,CAAC,MAAM,CAAC,uBAAuB,EAAE,UAAC,GAAY,EAAE,GAAa,EAAE,IAAI;IACpE,IAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,KAAe,CAAC;IAC1C,IAAM,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,GAAa,CAAC,CAAC;IAC9C,IAAM,MAAM,GAAG,IAAA,yBAAiB,EAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IAC7C,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,IAAI,CAAC,mBAAmB,EAAE,UAAC,GAAY,EAAE,GAAa,EAAE,IAAI;IAC9D,IAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,KAAe,CAAC;IACpC,IAAA,KAAyB,GAAG,CAAC,IAAI,EAA/B,SAAS,eAAA,EAAE,OAAO,aAAa,CAAC;IACxC,IAAM,MAAM,GAAG,IAAA,wBAAc,EAAC,KAAK,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;IACzD,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,IAAI,CAAC,qBAAqB,EAAE,UAAC,GAAY,EAAE,GAAa,EAAE,IAAI;IAChE,IAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,KAAe,CAAC;IACpC,IAAA,KAAyB,GAAG,CAAC,IAAI,EAA/B,SAAS,eAAA,EAAE,OAAO,aAAa,CAAC;IACxC,IAAM,MAAM,GAAG,IAAA,0BAAgB,EAAC,KAAK,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;IAC3D,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,GAAG,CAAC,gBAAgB,EAAE,UAAC,GAAY,EAAE,GAAa,EAAE,IAAI;IAC1D,IAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,KAAe,CAAC;IAC1C,IAAM,MAAM,GAAG,IAAA,mBAAW,EAAC,KAAK,CAAC,CAAC;IAClC,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,GAAG,CAAC,iBAAiB,EAAE,UAAC,GAAY,EAAE,GAAa,EAAE,IAAI;IAC3D,IAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,KAAe,CAAC;IAC1C,IAAM,MAAM,GAAG,IAAA,oBAAY,EAAC,KAAK,CAAC,CAAC;IACnC,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC;AAEH,sCAAsC;AACtC,wBAAwB;AACxB,GAAG,CAAC,GAAG,CAAC,IAAA,gCAAY,GAAE,CAAC,CAAC;AACxB,eAAe;AACf,IAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE;IACpC,0BAA0B;IAC1B,OAAO,CAAC,GAAG,CAAC,8CAA6B,IAAI,iBAAO,IAAI,CAAE,CAAC,CAAC;AAC9D,CAAC,CAAC,CAAC;AAEH,yCAAyC;AACzC,OAAO,CAAC,EAAE,CAAC,QAAQ,EAAE;IACnB,MAAM,CAAC,KAAK,CAAC,cAAM,OAAA,OAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC,EAA/C,CAA+C,CAAC,CAAC;AACtE,CAAC,CAAC,CAAC","sourcesContent":["import express, { json, Request, Response } from 'express';\nimport { echo } from './echo';\nimport morgan from 'morgan';\nimport config from './config.json';\nimport cors from 'cors';\nimport errorHandler from 'middleware-http-errors';\nimport {\n  authRegisterV1,\n  authLoginV1,\n  authLogoutV1,\n  passwordResetRequestV1,\n  passwordResetV1,\n} from './auth';\n\nimport {\n  channelsCreateV1,\n  channelsListV1,\n  channelsListAllV1,\n} from './channels';\n\nimport {\n  channelMessagesV1,\n  channelDetailsV1,\n  channelLeaveV1,\n  channelJoinV1,\n  channelInviteV1,\n  channelAddOwnerV1,\n  channelRemoveOwnerV1,\n} from './channel';\nimport {\n  messageRemoveV1,\n  messageSendV1,\n  messageEditV1,\n  messageSendDmV1,\n  messageSendLaterV1,\n  messagePinV1,\n  messageUnpinV1,\n  searchV1,\n  notificationsGetV1,\n  messageSendLaterDmV1,\n  messageShareV1,\n  messageReactV1,\n  messageUnreactV1,\n} from './message';\nimport {\n  setEmail,\n  setName,\n  setHandle,\n  getAllUsers,\n  userProfileV2,\n  userProfileUploadPhotoV1,\n  userStatsV1,\n  usersStatsV1,\n} from './users';\nimport {\n  dmCreateV1,\n  dmDetailsV1,\n  dmListV1,\n  dmMessagesV1,\n  dmRemoveV1,\n  dmLeaveV1,\n} from './dm';\n// import { userProfileV1 } from './users';\nimport { clearV1 } from './other';\nimport { standupActiveV1, standupSendV1, standupStartV1 } from './standup';\nimport { adminuserPermissionChangeV1, adminuserRemoveV1 } from './admin';\n\n// Set up web app\nconst app = express();\n// Use middleware that allows us to access the JSON body of requests\napp.use(json());\n// Use middleware that allows for access from other domains\napp.use(cors());\n// for logging errors (print to terminal)\napp.use(morgan('dev'));\n// for image use\napp.use('/img', express.static('img'));\n\nconst PORT: number = parseInt(process.env.PORT || config.port);\nconst HOST: string = process.env.IP || 'localhost';\n\n// Example get request\napp.get('/echo', (req: Request, res: Response, next) => {\n  const data = req.query.echo as string;\n  return res.json(echo(data));\n});\n\napp.post('/auth/login/v3', (req: Request, res: Response, next) => {\n  const { email, password } = req.body;\n  const result = authLoginV1(email, password);\n  return res.json(result);\n});\n\napp.post('/auth/register/v3', (req: Request, res: Response, next) => {\n  const { email, password, nameFirst, nameLast } = req.body;\n  const result = authRegisterV1(email, password, nameFirst, nameLast);\n  return res.json(result);\n});\n\napp.post('/channels/create/v3', (req: Request, res: Response, next) => {\n  const token = req.headers.token as string;\n  const { name, isPublic } = req.body;\n  const result = channelsCreateV1(token, name, isPublic);\n  return res.json(result);\n});\n\napp.get('/channels/list/v3', (req: Request, res: Response, next) => {\n  const token = req.headers.token as string;\n  const result = channelsListV1(token);\n  return res.json(result);\n});\n\napp.get('/channels/listall/v3', (req: Request, res: Response, next) => {\n  const token = req.headers.token as string;\n  const result = channelsListAllV1(token);\n  return res.json(result);\n});\n\napp.post('/channel/join/v3', (req: Request, res: Response, next) => {\n  const token = req.headers.token as string;\n  const { channelId } = req.body;\n  const result = channelJoinV1(token, channelId);\n  return res.json(result);\n});\n\napp.delete('/clear/v1', (req: Request, res: Response, next) => {\n  const result = clearV1();\n  return res.json(result);\n});\n\napp.get('/channel/messages/v3', (req: Request, res: Response, next) => {\n  const token = req.headers.token as string;\n  const channelId = parseInt(req.query.channelId as string);\n  const start = parseInt(req.query.start as string);\n  const result = channelMessagesV1(token, channelId, start);\n  return res.json(result);\n});\n\napp.post('/channel/leave/v2', (req: Request, res: Response, next) => {\n  const token = req.headers.token as string;\n  const { channelId } = req.body;\n  const result = channelLeaveV1(token, channelId);\n  return res.json(result);\n});\n\napp.post('/channel/addowner/v2', (req: Request, res: Response, next) => {\n  const token = req.headers.token as string;\n  const { channelId, uId } = req.body;\n  const result = channelAddOwnerV1(token, channelId, uId);\n  return res.json(result);\n});\n\napp.post('/channel/removeowner/v2', (req: Request, res: Response, next) => {\n  const token = req.headers.token as string;\n  const { channelId, uId } = req.body;\n  const result = channelRemoveOwnerV1(token, channelId, uId);\n  return res.json(result);\n});\n\napp.get('/channel/details/v3', (req: Request, res: Response, next) => {\n  const token = req.headers.token as string;\n  const channelId = parseInt(req.query.channelId as string);\n  const result = channelDetailsV1(token, channelId);\n  return res.json(result);\n});\n\napp.post('/dm/create/v2', (req: Request, res: Response, next) => {\n  const token = req.headers.token as string;\n  const { uIds } = req.body;\n  const result = dmCreateV1(token, uIds);\n  return res.json(result);\n});\n\napp.post('/dm/leave/v2', (req: Request, res: Response, next) => {\n  const token = req.headers.token as string;\n  const { dmId } = req.body;\n  const result = dmLeaveV1(token, dmId);\n  return res.json(result);\n});\n\napp.get('/dm/messages/v2', (req: Request, res: Response, next) => {\n  const token = req.headers.token as string;\n  const dmId = parseInt(req.query.dmId as string);\n  const start = parseInt(req.query.start as string);\n  const result = dmMessagesV1(token, dmId, start);\n  return res.json(result);\n});\napp.get('/dm/list/v2', (req: Request, res: Response, next) => {\n  const token = req.headers.token as string;\n  const result = dmListV1(token);\n  return res.json(result);\n});\n\napp.post('/channel/invite/v3', (req: Request, res: Response, next) => {\n  const token = req.headers.token as string;\n  const { channelId, uId } = req.body;\n  const result = channelInviteV1(token, channelId, uId);\n  return res.json(result);\n});\n\napp.delete('/message/remove/v2', (req: Request, res: Response, next) => {\n  const token = req.headers.token as string;\n  const messageId = parseInt(req.query.messageId as string);\n  const result = messageRemoveV1(token, messageId);\n  return res.json(result);\n});\n\napp.post('/auth/logout/v2', (req: Request, res: Response, next) => {\n  const token = req.headers.token as string;\n  const result = authLogoutV1(token);\n  return res.json(result);\n});\n\napp.get('/dm/details/v2', (req: Request, res: Response, next) => {\n  const token = req.headers.token as string;\n  const dmId = parseInt(req.query.dmId as string);\n  const result = dmDetailsV1(token, dmId);\n  return res.json(result);\n});\n\napp.put('/message/edit/v2', (req: Request, res: Response, next) => {\n  const token = req.headers.token as string;\n  const { messageId, message } = req.body;\n  const result = messageEditV1(token, messageId, message);\n  return res.json(result);\n});\napp.post('/message/send/v2', (req: Request, res: Response, next) => {\n  const token = req.headers.token as string;\n  const { channelId, message } = req.body;\n  const result = messageSendV1(token, channelId, message);\n  return res.json(result);\n});\n\napp.put('/user/profile/sethandle/v2', (req: Request, res: Response, next) => {\n  const token = req.headers.token as string;\n  const { handleStr } = req.body;\n  const result = setHandle(token, handleStr);\n  return res.json(result);\n});\n\napp.put('/user/profile/setemail/v2', (req: Request, res: Response, next) => {\n  const token = req.headers.token as string;\n  const { email } = req.body;\n  const result = setEmail(token, email);\n  return res.json(result);\n});\n\napp.put('/user/profile/setname/v2', (req: Request, res: Response, next) => {\n  const token = req.headers.token as string;\n  const { nameFirst, nameLast } = req.body;\n  const result = setName(token, nameFirst, nameLast);\n  return res.json(result);\n});\n\napp.get('/users/all/v2', (req: Request, res: Response, next) => {\n  const token = req.headers.token as string;\n  const result = getAllUsers(token);\n  return res.json(result);\n});\n\napp.get('/user/profile/v3', (req: Request, res: Response, next) => {\n  const token = req.headers.token as string;\n  const uId = parseInt(req.query.uId as string);\n  const result = userProfileV2(token, uId);\n  return res.json(result);\n});\n\napp.post('/message/pin/v1', (req: Request, res: Response, next) => {\n  const token = req.headers.token as string;\n  const { messageId } = req.body;\n  const result = messagePinV1(token, messageId);\n  return res.json(result);\n});\n\napp.post('/message/unpin/v1', (req: Request, res: Response, next) => {\n  const token = req.headers.token as string;\n  const { messageId } = req.body;\n  const result = messageUnpinV1(token, messageId);\n  return res.json(result);\n});\n\napp.get('/search/v1', (req: Request, res: Response, next) => {\n  const token = req.headers.token as string;\n  const queryStr = req.query.queryStr as string;\n  const result = searchV1(token, queryStr);\n  return res.json(result);\n});\n\napp.get('/notifications/get/v1', (req: Request, res: Response, next) => {\n  const token = req.headers.token as string;\n  const result = notificationsGetV1(token);\n  return res.json(result);\n});\n\napp.delete('/dm/remove/v2', (req: Request, res: Response, next) => {\n  const token = req.headers.token as string;\n  const dmId = parseInt(req.query.dmId as string);\n  const result = dmRemoveV1(token, dmId);\n  return res.json(result);\n});\n\napp.post('/message/senddm/v2', (req: Request, res: Response, next) => {\n  const token = req.headers.token as string;\n  const { dmId, message } = req.body;\n  const result = messageSendDmV1(token, dmId, message);\n  return res.json(result);\n});\n\napp.post('/standup/start/v1', (req: Request, res: Response, next) => {\n  const token = req.headers.token as string;\n  const { channelId, length } = req.body;\n  const result = standupStartV1(token, channelId, length);\n  return res.json(result);\n});\n\napp.get('/standup/active/v1', (req: Request, res: Response, next) => {\n  const token = req.headers.token as string;\n  const channelId = parseInt(req.query.channelId as string);\n  const result = standupActiveV1(token, channelId);\n  return res.json(result);\n});\n\napp.post('/standup/send/v1', (req: Request, res: Response, next) => {\n  const token = req.headers.token as string;\n  const { channelId, message } = req.body;\n  const result = standupSendV1(token, channelId, message);\n  return res.json(result);\n});\n\napp.post(\n  '/user/profile/uploadphoto/v1',\n  (req: Request, res: Response, next) => {\n    const token = req.headers.token as string;\n    const { imgUrl, xStart, yStart, xEnd, yEnd } = req.body;\n    const result = userProfileUploadPhotoV1(\n      token,\n      imgUrl,\n      xStart,\n      yStart,\n      xEnd,\n      yEnd\n    );\n    return res.json(result);\n  }\n);\napp.post('/message/sendlater/v1', (req: Request, res: Response, next) => {\n  const token = req.headers.token as string;\n  const { channelId, message, timeSent } = req.body;\n  const result = messageSendLaterV1(token, channelId, message, timeSent);\n  return res.json(result);\n});\n\napp.post('/message/sendlaterdm/v1', (req: Request, res: Response, next) => {\n  const token = req.headers.token as string;\n  const { dmId, message, timeSent } = req.body;\n  const result = messageSendLaterDmV1(token, dmId, message, timeSent);\n  return res.json(result);\n});\n\napp.post('/message/share/v1', (req: Request, res: Response, next) => {\n  const token = req.headers.token as string;\n  const { ogMessageId, message, channelId, dmId } = req.body;\n  const result = messageShareV1(token, ogMessageId, message, channelId, dmId);\n  return res.json(result);\n});\n\napp.post(\n  '/admin/userpermission/change/v1',\n  (req: Request, res: Response, next) => {\n    const token = req.headers.token as string;\n    const { uId, permissionId } = req.body;\n    const result = adminuserPermissionChangeV1(token, uId, permissionId);\n    return res.json(result);\n  }\n);\n\napp.post(\n  '/auth/passwordreset/request/v1',\n  (req: Request, res: Response, next) => {\n    const { email } = req.body;\n    const result = passwordResetRequestV1(email);\n    return res.json(result);\n  }\n);\n\napp.post(\n  '/auth/passwordreset/reset/v1',\n  (req: Request, res: Response, next) => {\n    const { resetCode, newPassword } = req.body;\n    const result = passwordResetV1(resetCode, newPassword);\n    return res.json(result);\n  }\n);\n\napp.delete('/admin/user/remove/v1', (req: Request, res: Response, next) => {\n  const token = req.headers.token as string;\n  const uId = parseInt(req.query.uId as string);\n  const result = adminuserRemoveV1(token, uId);\n  return res.json(result);\n});\n\napp.post('/message/react/v1', (req: Request, res: Response, next) => {\n  const token = req.headers.token as string;\n  const { messageId, reactId } = req.body;\n  const result = messageReactV1(token, messageId, reactId);\n  return res.json(result);\n});\n\napp.post('/message/unreact/v1', (req: Request, res: Response, next) => {\n  const token = req.headers.token as string;\n  const { messageId, reactId } = req.body;\n  const result = messageUnreactV1(token, messageId, reactId);\n  return res.json(result);\n});\n\napp.get('/user/stats/v1', (req: Request, res: Response, next) => {\n  const token = req.headers.token as string;\n  const result = userStatsV1(token);\n  return res.json(result);\n});\n\napp.get('/users/stats/v1', (req: Request, res: Response, next) => {\n  const token = req.headers.token as string;\n  const result = usersStatsV1(token);\n  return res.json(result);\n});\n\n// Keep this BENEATH route definitions\n// handles errors nicely\napp.use(errorHandler());\n// start server\nconst server = app.listen(PORT, HOST, () => {\n  // DO NOT CHANGE THIS LINE\n  console.log(`⚡️ Server started on port ${PORT} at ${HOST}`);\n});\n\n// For coverage, handle Ctrl+C gracefully\nprocess.on('SIGINT', () => {\n  server.close(() => console.log('Shutting down server gracefully.'));\n});\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a87c050fa95c5debbd78983097b82ca23355c482","contentHash":"ec6ad67dcea35d672adcc15af3372d3c6566af4fa82d41f116df742d4738a288"},"/Users/binvog/Documents/UNSW 2023T1/COMP1531/Indiv_projectbackend/iter4-project-backend/src/echo.ts":{"path":"/Users/binvog/Documents/UNSW 2023T1/COMP1531/Indiv_projectbackend/iter4-project-backend/src/echo.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":22}},"4":{"start":{"line":7,"column":20},"end":{"line":7,"column":59}},"5":{"start":{"line":9,"column":4},"end":{"line":14,"column":5}},"6":{"start":{"line":11,"column":8},"end":{"line":11,"column":68}},"7":{"start":{"line":15,"column":4},"end":{"line":15,"column":17}},"8":{"start":{"line":17,"column":0},"end":{"line":17,"column":20}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"echo","decl":{"start":{"line":8,"column":9},"end":{"line":8,"column":13}},"loc":{"start":{"line":8,"column":21},"end":{"line":16,"column":1}},"line":8}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":9,"column":4},"end":{"line":14,"column":5}},"type":"if","locations":[{"start":{"line":9,"column":4},"end":{"line":14,"column":5}},{"start":{"line":9,"column":4},"end":{"line":14,"column":5}}],"line":9}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":2,"6":1,"7":1,"8":1},"f":{"0":1,"1":2},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/binvog/Documents/UNSW 2023T1/COMP1531/Indiv_projectbackend/iter4-project-backend/src/echo.ts","sources":["/Users/binvog/Documents/UNSW 2023T1/COMP1531/Indiv_projectbackend/iter4-project-backend/src/echo.ts"],"names":[],"mappings":";;;;;;AAAA,4DAAoC;AAEpC,SAAS,IAAI,CAAC,KAAa;IACzB,IAAI,KAAK,KAAK,MAAM,EAAE;QACpB,kBAAkB;QAClB,MAAM,IAAA,qBAAS,EAAC,GAAG,EAAE,oBAAoB,CAAC,CAAC;QAC3C,kBAAkB;QAClB,6BAA6B;KAC9B;IACD,OAAO,KAAK,CAAC;AACf,CAAC;AAEQ,oBAAI","sourcesContent":["import HTTPError from 'http-errors';\n\nfunction echo(value: string) {\n  if (value === 'echo') {\n    // NEW Iteration 3\n    throw HTTPError(400, 'Cannot echo \"echo\"');\n    // OLD Iteration 2\n    // return { error: 'error' };\n  }\n  return value;\n}\n\nexport { echo };\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7337223a8dc9d1f6b9f43570bd4b8fa1a7534ed7","contentHash":"bd996234eff7c3621ae0cd47a4a16a8a31af2bb4d51125d0f44aa9dbc4fbefb5"},"/Users/binvog/Documents/UNSW 2023T1/COMP1531/Indiv_projectbackend/iter4-project-backend/src/auth.ts":{"path":"/Users/binvog/Documents/UNSW 2023T1/COMP1531/Indiv_projectbackend/iter4-project-backend/src/auth.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":136}},"4":{"start":{"line":7,"column":18},"end":{"line":7,"column":55}},"5":{"start":{"line":8,"column":20},"end":{"line":8,"column":59}},"6":{"start":{"line":9,"column":20},"end":{"line":9,"column":44}},"7":{"start":{"line":10,"column":23},"end":{"line":10,"column":50}},"8":{"start":{"line":11,"column":18},"end":{"line":11,"column":40}},"9":{"start":{"line":12,"column":17},"end":{"line":12,"column":38}},"10":{"start":{"line":21,"column":20},"end":{"line":21,"column":46}},"11":{"start":{"line":23,"column":28},"end":{"line":23,"column":73}},"12":{"start":{"line":24,"column":4},"end":{"line":32,"column":5}},"13":{"start":{"line":24,"column":18},"end":{"line":24,"column":19}},"14":{"start":{"line":24,"column":26},"end":{"line":24,"column":41}},"15":{"start":{"line":25,"column":19},"end":{"line":25,"column":25}},"16":{"start":{"line":26,"column":8},"end":{"line":31,"column":9}},"17":{"start":{"line":27,"column":12},"end":{"line":27,"column":31}},"18":{"start":{"line":29,"column":13},"end":{"line":31,"column":9}},"19":{"start":{"line":30,"column":12},"end":{"line":30,"column":77}},"20":{"start":{"line":33,"column":4},"end":{"line":35,"column":5}},"21":{"start":{"line":34,"column":8},"end":{"line":34,"column":87}},"22":{"start":{"line":36,"column":20},"end":{"line":36,"column":117}},"23":{"start":{"line":36,"column":64},"end":{"line":36,"column":114}},"24":{"start":{"line":37,"column":16},"end":{"line":37,"column":86}},"25":{"start":{"line":38,"column":4},"end":{"line":38,"column":60}},"26":{"start":{"line":39,"column":4},"end":{"line":39,"column":40}},"27":{"start":{"line":40,"column":4},"end":{"line":40,"column":64}},"28":{"start":{"line":42,"column":0},"end":{"line":42,"column":34}},"29":{"start":{"line":53,"column":20},"end":{"line":53,"column":46}},"30":{"start":{"line":54,"column":4},"end":{"line":56,"column":5}},"31":{"start":{"line":55,"column":8},"end":{"line":55,"column":68}},"32":{"start":{"line":57,"column":21},"end":{"line":57,"column":91}},"33":{"start":{"line":57,"column":60},"end":{"line":57,"column":88}},"34":{"start":{"line":58,"column":4},"end":{"line":60,"column":5}},"35":{"start":{"line":59,"column":8},"end":{"line":59,"column":70}},"36":{"start":{"line":61,"column":4},"end":{"line":63,"column":5}},"37":{"start":{"line":62,"column":8},"end":{"line":62,"column":71}},"38":{"start":{"line":64,"column":4},"end":{"line":69,"column":5}},"39":{"start":{"line":65,"column":8},"end":{"line":65,"column":77}},"40":{"start":{"line":67,"column":9},"end":{"line":69,"column":5}},"41":{"start":{"line":68,"column":8},"end":{"line":68,"column":78}},"42":{"start":{"line":70,"column":4},"end":{"line":75,"column":5}},"43":{"start":{"line":71,"column":8},"end":{"line":71,"column":76}},"44":{"start":{"line":73,"column":9},"end":{"line":75,"column":5}},"45":{"start":{"line":74,"column":8},"end":{"line":74,"column":77}},"46":{"start":{"line":76,"column":17},"end":{"line":76,"column":53}},"47":{"start":{"line":78,"column":23},"end":{"line":78,"column":68}},"48":{"start":{"line":80,"column":16},"end":{"line":80,"column":49}},"49":{"start":{"line":81,"column":23},"end":{"line":81,"column":43}},"50":{"start":{"line":82,"column":4},"end":{"line":82,"column":46}},"51":{"start":{"line":83,"column":21},"end":{"line":83,"column":33}},"52":{"start":{"line":84,"column":4},"end":{"line":84,"column":56}},"53":{"start":{"line":85,"column":4},"end":{"line":87,"column":5}},"54":{"start":{"line":86,"column":8},"end":{"line":86,"column":53}},"55":{"start":{"line":88,"column":20},"end":{"line":88,"column":83}},"56":{"start":{"line":88,"column":58},"end":{"line":88,"column":80}},"57":{"start":{"line":89,"column":25},"end":{"line":89,"column":37}},"58":{"start":{"line":90,"column":4},"end":{"line":92,"column":5}},"59":{"start":{"line":90,"column":17},"end":{"line":90,"column":18}},"60":{"start":{"line":91,"column":8},"end":{"line":91,"column":59}},"61":{"start":{"line":93,"column":20},"end":{"line":93,"column":58}},"62":{"start":{"line":94,"column":24},"end":{"line":94,"column":25}},"63":{"start":{"line":95,"column":4},"end":{"line":118,"column":5}},"64":{"start":{"line":96,"column":8},"end":{"line":96,"column":26}},"65":{"start":{"line":97,"column":8},"end":{"line":117,"column":10}},"66":{"start":{"line":119,"column":4},"end":{"line":119,"column":42}},"67":{"start":{"line":120,"column":15},"end":{"line":120,"column":63}},"68":{"start":{"line":121,"column":15},"end":{"line":121,"column":44}},"69":{"start":{"line":122,"column":4},"end":{"line":154,"column":7}},"70":{"start":{"line":155,"column":4},"end":{"line":155,"column":40}},"71":{"start":{"line":156,"column":4},"end":{"line":156,"column":48}},"72":{"start":{"line":158,"column":0},"end":{"line":158,"column":40}},"73":{"start":{"line":165,"column":15},"end":{"line":165,"column":41}},"74":{"start":{"line":166,"column":15},"end":{"line":166,"column":58}},"75":{"start":{"line":167,"column":20},"end":{"line":167,"column":68}},"76":{"start":{"line":168,"column":4},"end":{"line":170,"column":5}},"77":{"start":{"line":169,"column":8},"end":{"line":169,"column":68}},"78":{"start":{"line":171,"column":21},"end":{"line":171,"column":70}},"79":{"start":{"line":172,"column":4},"end":{"line":172,"column":54}},"80":{"start":{"line":173,"column":4},"end":{"line":173,"column":35}},"81":{"start":{"line":174,"column":4},"end":{"line":174,"column":14}},"82":{"start":{"line":176,"column":0},"end":{"line":176,"column":36}},"83":{"start":{"line":182,"column":15},"end":{"line":182,"column":41}},"84":{"start":{"line":183,"column":15},"end":{"line":183,"column":59}},"85":{"start":{"line":184,"column":4},"end":{"line":186,"column":5}},"86":{"start":{"line":185,"column":8},"end":{"line":185,"column":18}},"87":{"start":{"line":187,"column":20},"end":{"line":187,"column":67}},"88":{"start":{"line":188,"column":22},"end":{"line":194,"column":6}},"89":{"start":{"line":195,"column":22},"end":{"line":200,"column":5}},"90":{"start":{"line":202,"column":4},"end":{"line":210,"column":7}},"91":{"start":{"line":204,"column":8},"end":{"line":209,"column":9}},"92":{"start":{"line":208,"column":12},"end":{"line":208,"column":38}},"93":{"start":{"line":211,"column":20},"end":{"line":211,"column":104}},"94":{"start":{"line":211,"column":61},"end":{"line":211,"column":101}},"95":{"start":{"line":214,"column":4},"end":{"line":222,"column":5}},"96":{"start":{"line":215,"column":8},"end":{"line":218,"column":11}},"97":{"start":{"line":221,"column":8},"end":{"line":221,"column":57}},"98":{"start":{"line":224,"column":20},"end":{"line":224,"column":72}},"99":{"start":{"line":225,"column":4},"end":{"line":225,"column":37}},"100":{"start":{"line":226,"column":4},"end":{"line":226,"column":35}},"101":{"start":{"line":227,"column":4},"end":{"line":227,"column":14}},"102":{"start":{"line":229,"column":0},"end":{"line":229,"column":56}},"103":{"start":{"line":236,"column":15},"end":{"line":236,"column":41}},"104":{"start":{"line":237,"column":20},"end":{"line":237,"column":103}},"105":{"start":{"line":237,"column":64},"end":{"line":237,"column":100}},"106":{"start":{"line":238,"column":4},"end":{"line":240,"column":5}},"107":{"start":{"line":239,"column":8},"end":{"line":239,"column":68}},"108":{"start":{"line":241,"column":4},"end":{"line":243,"column":5}},"109":{"start":{"line":242,"column":8},"end":{"line":242,"column":71}},"110":{"start":{"line":244,"column":20},"end":{"line":244,"column":94}},"111":{"start":{"line":245,"column":28},"end":{"line":245,"column":76}},"112":{"start":{"line":246,"column":4},"end":{"line":246,"column":55}},"113":{"start":{"line":247,"column":4},"end":{"line":247,"column":41}},"114":{"start":{"line":248,"column":4},"end":{"line":248,"column":35}},"115":{"start":{"line":249,"column":4},"end":{"line":249,"column":14}},"116":{"start":{"line":251,"column":0},"end":{"line":251,"column":42}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"authLoginV1","decl":{"start":{"line":20,"column":9},"end":{"line":20,"column":20}},"loc":{"start":{"line":20,"column":38},"end":{"line":41,"column":1}},"line":20},"2":{"name":"(anonymous_2)","decl":{"start":{"line":36,"column":46},"end":{"line":36,"column":47}},"loc":{"start":{"line":36,"column":62},"end":{"line":36,"column":116}},"line":36},"3":{"name":"authRegisterV1","decl":{"start":{"line":52,"column":9},"end":{"line":52,"column":23}},"loc":{"start":{"line":52,"column":62},"end":{"line":157,"column":1}},"line":52},"4":{"name":"(anonymous_4)","decl":{"start":{"line":57,"column":42},"end":{"line":57,"column":43}},"loc":{"start":{"line":57,"column":58},"end":{"line":57,"column":90}},"line":57},"5":{"name":"(anonymous_5)","decl":{"start":{"line":88,"column":40},"end":{"line":88,"column":41}},"loc":{"start":{"line":88,"column":56},"end":{"line":88,"column":82}},"line":88},"6":{"name":"authLogoutV1","decl":{"start":{"line":164,"column":9},"end":{"line":164,"column":21}},"loc":{"start":{"line":164,"column":29},"end":{"line":175,"column":1}},"line":164},"7":{"name":"passwordResetRequestV1","decl":{"start":{"line":181,"column":9},"end":{"line":181,"column":31}},"loc":{"start":{"line":181,"column":39},"end":{"line":228,"column":1}},"line":181},"8":{"name":"(anonymous_8)","decl":{"start":{"line":202,"column":38},"end":{"line":202,"column":39}},"loc":{"start":{"line":202,"column":55},"end":{"line":210,"column":5}},"line":202},"9":{"name":"(anonymous_9)","decl":{"start":{"line":211,"column":46},"end":{"line":211,"column":47}},"loc":{"start":{"line":211,"column":59},"end":{"line":211,"column":103}},"line":211},"10":{"name":"passwordResetV1","decl":{"start":{"line":235,"column":9},"end":{"line":235,"column":24}},"loc":{"start":{"line":235,"column":49},"end":{"line":250,"column":1}},"line":235},"11":{"name":"(anonymous_11)","decl":{"start":{"line":237,"column":46},"end":{"line":237,"column":47}},"loc":{"start":{"line":237,"column":62},"end":{"line":237,"column":102}},"line":237}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":26,"column":8},"end":{"line":31,"column":9}},"type":"if","locations":[{"start":{"line":26,"column":8},"end":{"line":31,"column":9}},{"start":{"line":26,"column":8},"end":{"line":31,"column":9}}],"line":26},"4":{"loc":{"start":{"line":26,"column":12},"end":{"line":26,"column":71}},"type":"binary-expr","locations":[{"start":{"line":26,"column":12},"end":{"line":26,"column":32}},{"start":{"line":26,"column":36},"end":{"line":26,"column":71}}],"line":26},"5":{"loc":{"start":{"line":29,"column":13},"end":{"line":31,"column":9}},"type":"if","locations":[{"start":{"line":29,"column":13},"end":{"line":31,"column":9}},{"start":{"line":29,"column":13},"end":{"line":31,"column":9}}],"line":29},"6":{"loc":{"start":{"line":29,"column":17},"end":{"line":29,"column":76}},"type":"binary-expr","locations":[{"start":{"line":29,"column":17},"end":{"line":29,"column":37}},{"start":{"line":29,"column":41},"end":{"line":29,"column":76}}],"line":29},"7":{"loc":{"start":{"line":33,"column":4},"end":{"line":35,"column":5}},"type":"if","locations":[{"start":{"line":33,"column":4},"end":{"line":35,"column":5}},{"start":{"line":33,"column":4},"end":{"line":35,"column":5}}],"line":33},"8":{"loc":{"start":{"line":54,"column":4},"end":{"line":56,"column":5}},"type":"if","locations":[{"start":{"line":54,"column":4},"end":{"line":56,"column":5}},{"start":{"line":54,"column":4},"end":{"line":56,"column":5}}],"line":54},"9":{"loc":{"start":{"line":58,"column":4},"end":{"line":60,"column":5}},"type":"if","locations":[{"start":{"line":58,"column":4},"end":{"line":60,"column":5}},{"start":{"line":58,"column":4},"end":{"line":60,"column":5}}],"line":58},"10":{"loc":{"start":{"line":61,"column":4},"end":{"line":63,"column":5}},"type":"if","locations":[{"start":{"line":61,"column":4},"end":{"line":63,"column":5}},{"start":{"line":61,"column":4},"end":{"line":63,"column":5}}],"line":61},"11":{"loc":{"start":{"line":64,"column":4},"end":{"line":69,"column":5}},"type":"if","locations":[{"start":{"line":64,"column":4},"end":{"line":69,"column":5}},{"start":{"line":64,"column":4},"end":{"line":69,"column":5}}],"line":64},"12":{"loc":{"start":{"line":67,"column":9},"end":{"line":69,"column":5}},"type":"if","locations":[{"start":{"line":67,"column":9},"end":{"line":69,"column":5}},{"start":{"line":67,"column":9},"end":{"line":69,"column":5}}],"line":67},"13":{"loc":{"start":{"line":70,"column":4},"end":{"line":75,"column":5}},"type":"if","locations":[{"start":{"line":70,"column":4},"end":{"line":75,"column":5}},{"start":{"line":70,"column":4},"end":{"line":75,"column":5}}],"line":70},"14":{"loc":{"start":{"line":73,"column":9},"end":{"line":75,"column":5}},"type":"if","locations":[{"start":{"line":73,"column":9},"end":{"line":75,"column":5}},{"start":{"line":73,"column":9},"end":{"line":75,"column":5}}],"line":73},"15":{"loc":{"start":{"line":85,"column":4},"end":{"line":87,"column":5}},"type":"if","locations":[{"start":{"line":85,"column":4},"end":{"line":87,"column":5}},{"start":{"line":85,"column":4},"end":{"line":87,"column":5}}],"line":85},"16":{"loc":{"start":{"line":95,"column":4},"end":{"line":118,"column":5}},"type":"if","locations":[{"start":{"line":95,"column":4},"end":{"line":118,"column":5}},{"start":{"line":95,"column":4},"end":{"line":118,"column":5}}],"line":95},"17":{"loc":{"start":{"line":120,"column":24},"end":{"line":120,"column":62}},"type":"binary-expr","locations":[{"start":{"line":120,"column":24},"end":{"line":120,"column":40}},{"start":{"line":120,"column":44},"end":{"line":120,"column":62}}],"line":120},"18":{"loc":{"start":{"line":121,"column":15},"end":{"line":121,"column":44}},"type":"binary-expr","locations":[{"start":{"line":121,"column":15},"end":{"line":121,"column":29}},{"start":{"line":121,"column":33},"end":{"line":121,"column":44}}],"line":121},"19":{"loc":{"start":{"line":168,"column":4},"end":{"line":170,"column":5}},"type":"if","locations":[{"start":{"line":168,"column":4},"end":{"line":170,"column":5}},{"start":{"line":168,"column":4},"end":{"line":170,"column":5}}],"line":168},"20":{"loc":{"start":{"line":184,"column":4},"end":{"line":186,"column":5}},"type":"if","locations":[{"start":{"line":184,"column":4},"end":{"line":186,"column":5}},{"start":{"line":184,"column":4},"end":{"line":186,"column":5}}],"line":184},"21":{"loc":{"start":{"line":204,"column":8},"end":{"line":209,"column":9}},"type":"if","locations":[{"start":{"line":204,"column":8},"end":{"line":209,"column":9}}],"line":204},"22":{"loc":{"start":{"line":214,"column":4},"end":{"line":222,"column":5}},"type":"if","locations":[{"start":{"line":214,"column":4},"end":{"line":222,"column":5}},{"start":{"line":214,"column":4},"end":{"line":222,"column":5}}],"line":214},"23":{"loc":{"start":{"line":238,"column":4},"end":{"line":240,"column":5}},"type":"if","locations":[{"start":{"line":238,"column":4},"end":{"line":240,"column":5}},{"start":{"line":238,"column":4},"end":{"line":240,"column":5}}],"line":238},"24":{"loc":{"start":{"line":241,"column":4},"end":{"line":243,"column":5}},"type":"if","locations":[{"start":{"line":241,"column":4},"end":{"line":243,"column":5}},{"start":{"line":241,"column":4},"end":{"line":243,"column":5}}],"line":241}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":7,"11":7,"12":7,"13":7,"14":7,"15":7,"16":7,"17":5,"18":2,"19":1,"20":6,"21":1,"22":5,"23":5,"24":5,"25":5,"26":5,"27":5,"28":1,"29":715,"30":715,"31":3,"32":712,"33":501,"34":712,"35":2,"36":710,"37":2,"38":708,"39":1,"40":707,"41":1,"42":706,"43":1,"44":705,"45":1,"46":704,"47":704,"48":704,"49":704,"50":704,"51":704,"52":704,"53":704,"54":4,"55":704,"56":499,"57":704,"58":704,"59":704,"60":5,"61":704,"62":704,"63":704,"64":334,"65":334,"66":704,"67":704,"68":704,"69":704,"70":704,"71":704,"72":1,"73":8,"74":8,"75":8,"76":8,"77":3,"78":5,"79":5,"80":5,"81":5,"82":1,"83":6,"84":6,"85":6,"86":1,"87":5,"88":5,"89":5,"90":5,"91":5,"92":5,"93":5,"94":1,"95":5,"96":4,"97":1,"98":5,"99":5,"100":5,"101":5,"102":1,"103":4,"104":4,"105":3,"106":4,"107":1,"108":3,"109":1,"110":2,"111":2,"112":2,"113":2,"114":2,"115":2,"116":1},"f":{"0":2,"1":7,"2":5,"3":715,"4":501,"5":499,"6":8,"7":6,"8":5,"9":1,"10":4,"11":3},"b":{"0":[1,1,1],"1":[0,2],"2":[2,2],"3":[5,2],"4":[7,6],"5":[1,1],"6":[2,1],"7":[1,5],"8":[3,712],"9":[2,710],"10":[2,708],"11":[1,707],"12":[1,706],"13":[1,705],"14":[1,704],"15":[4,700],"16":[334,370],"17":[704,704],"18":[704,704],"19":[3,5],"20":[1,5],"21":[5],"22":[4,1],"23":[1,3],"24":[1,2]},"inputSourceMap":{"version":3,"file":"/Users/binvog/Documents/UNSW 2023T1/COMP1531/Indiv_projectbackend/iter4-project-backend/src/auth.ts","sources":["/Users/binvog/Documents/UNSW 2023T1/COMP1531/Indiv_projectbackend/iter4-project-backend/src/auth.ts"],"names":[],"mappings":"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","sourcesContent":["import validator from 'validator';\nimport HTTPError from 'http-errors';\nimport { port } from './config.json';\nimport {\n  findTokenIndex,\n  getUserByToken,\n  makeToken,\n  HashingString,\n  getUserIndexByToken,\n  findUserbyEmail,\n  findUserIndex,\n  downloadImage,\n  getCurrentTime,\n} from './functionHelper';\nimport { AuthReturn, errorMessage, userData } from './interfaces';\nimport { getData, setData } from './dataStore';\nconst nodemailer = require('nodemailer');\n\n/**\n * Logs the user and then assigns a token to the user\n * @param {string} email - the email address\n * @param {string} password - the password\n * @returns { error : string } error - different error strings for different situations\n * @returns { token: string, authUserId : number } token - the token for the user, authUserId - the authUserId for the user\n */\nexport function authLoginV1(\n  email: string,\n  password: string\n): AuthReturn | errorMessage {\n  const dataStore = getData();\n\n  let correctUser: userData;\n  const encryptedPassword = HashingString(password);\n  for (const user of dataStore.users) {\n    if (email === user.email && encryptedPassword === user.password) {\n      correctUser = user;\n    } else if (email === user.email && encryptedPassword !== user.password) {\n      throw HTTPError(400, 'Password is not correct');\n    }\n  }\n  if (correctUser === undefined) {\n    throw HTTPError(400, 'Email does not belong to a valid user');\n  }\n  const userIndex = dataStore.users.findIndex(\n    (item) => item.authUserId === correctUser.authUserId\n  );\n\n  const token = HashingString(makeToken());\n\n  dataStore.users[userIndex].token.push({ token: token });\n  setData(dataStore);\n  return { authUserId: correctUser.authUserId, token: token };\n}\n\n/**\n * @param {string} email - the email address\n * @param {string} password - the password\n * @param {string} nameFirst - the firstname\n * @param {string} nameLast - the lastname\n * @returns { error : string } error - different error strings for different situations\n * @returns { token: string, authUserId : number } token - the token for the user, authUserId - the authUserId for the user\n *\n */\nexport function authRegisterV1(\n  email: string,\n  password: string,\n  nameFirst: string,\n  nameLast: string\n): AuthReturn | errorMessage {\n  const dataStore = getData();\n\n  if (!validator.isEmail(email)) {\n    throw HTTPError(400, 'Email is not valid');\n  }\n\n  const emailfound = dataStore.users.find((item) => item.email === email);\n  if (emailfound !== undefined) {\n    throw HTTPError(400, 'Email already exists');\n  }\n\n  if (password.length < 6) {\n    throw HTTPError(400, 'Password is too short');\n  }\n\n  if (nameFirst.length > 50) {\n    throw HTTPError(400, 'Your first name is too long');\n  } else if (nameFirst.length < 1) {\n    throw HTTPError(400, 'Your first name is too short');\n  }\n\n  if (nameLast.length > 50) {\n    throw HTTPError(400, 'Your last name is too long');\n  } else if (nameLast.length < 1) {\n    throw HTTPError(400, 'Your last name is too short');\n  }\n\n  const authId = Math.floor(Math.random() * 10000000);\n\n  // hash password\n  const hashPassword = HashingString(password);\n\n  // Create a random token that is a string and it is unique every time\n  const token = makeToken();\n\n  let handlestring = nameFirst + nameLast;\n\n  handlestring = handlestring.toLowerCase();\n  const regpattern = /[^a-z0-9]/g;\n  handlestring = handlestring.replace(regpattern, '');\n\n  if (handlestring.length > 20) {\n    handlestring = handlestring.substring(0, 20);\n  }\n\n  const handleMap = dataStore.users.map((user) => user.handleStr);\n  const originalHandle = handlestring;\n  for (let i = 0; handleMap.includes(handlestring); i++) {\n    handlestring = `${originalHandle}${i}`;\n  }\n\n  const timeStamp = getCurrentTime();\n\n  let isGlobalOwner = 2;\n  if (dataStore.users.length === 0) {\n    isGlobalOwner = 1;\n    dataStore.stats = {\n      channelsExist: [\n        {\n          numChannelsExist: 0,\n          timeStamp: timeStamp,\n        },\n      ],\n      dmsExist: [\n        {\n          numDmsExist: 0,\n          timeStamp: timeStamp,\n        },\n      ],\n      messagesExist: [\n        {\n          numMessagesExist: 0,\n          timeStamp: timeStamp,\n        },\n      ],\n      utilizationRate: 0,\n    };\n  }\n\n  downloadImage();\n\n  const PORT: number = parseInt(process.env.PORT || port);\n  const HOST: string = process.env.IP || 'localhost';\n\n  dataStore.users.push({\n    authUserId: authId,\n    handleStr: handlestring,\n    email: email,\n    password: hashPassword,\n    nameFirst: nameFirst,\n    nameLast: nameLast,\n    isGlobalOwner: isGlobalOwner,\n    profileImgUrl: `http://${HOST}:${PORT}/img/default.jpg`,\n    token: [{ token: token }],\n    stats: {\n      channelsJoined: [\n        {\n          numChannelsJoined: 0,\n          timeStamp: timeStamp,\n        },\n      ],\n      dmsJoined: [\n        {\n          numDmsJoined: 0,\n          timeStamp: timeStamp,\n        },\n      ],\n      messagesSent: [\n        {\n          numMessagesSent: 0,\n          timeStamp: timeStamp,\n        },\n      ],\n      involvementRate: 0,\n    },\n    notifications: [],\n  });\n\n  setData(dataStore);\n\n  return { token: token, authUserId: authId };\n}\n/**\n * Logs out the user and then removes the token from the user\n * @param {string} token - the user's token\n * @returns { error : string } error - different error strings for different situations\n */\nexport function authLogoutV1(token: string): Record<string, never> {\n  const data = getData();\n  const user = getUserByToken(token);\n  const userIndex = getUserIndexByToken(token);\n  if (user === undefined) {\n    throw HTTPError(403, 'Token is not valid');\n  }\n\n  const tokenIndex = findTokenIndex(user, token);\n  data.users[userIndex].token.splice(tokenIndex, 1);\n  setData(data);\n  return {};\n}\n\n/**\n * Sends a reset password code to the user's email\n * @param {string} email - the user's email\n */\nexport function passwordResetRequestV1(email: string) {\n  const data = getData();\n  const user = findUserbyEmail(email);\n\n  if (user === undefined) {\n    return {};\n  }\n\n  const resetCode = Math.floor(Math.random() * 10000000).toString();\n\n  const transporter = nodemailer.createTransport({\n    service: 'gmail',\n    auth: {\n      user: 'memesresetpass@gmail.com',\n      pass: 'flntujulglazqoju',\n    },\n  });\n\n  const mailOptions = {\n    from: 'memesresetpass@gmail.com',\n    to: email,\n    subject: 'Password reset request',\n    text: 'Your reset code is ' + resetCode,\n  };\n\n  // ignoring the if for coverage as it is not possible to test\n  transporter.sendMail(mailOptions, function (error: string) {\n    /* istanbul ignore if */\n    if (error) {\n      console.log(error);\n    } else {\n      console.log('Email sent');\n    }\n  });\n\n  const codeIndex = data.resetCodes.findIndex(\n    (a) => a.authUserId === user.authUserId\n  );\n\n  // If the user hasnt requested a password reset before, just push the resetCode\n  // if the user has requested a password reset before, change the previous resetCode\n  if (codeIndex === -1) {\n    data.resetCodes.push({\n      authUserId: user.authUserId,\n      resetCode: resetCode,\n    });\n  } else {\n    data.resetCodes[codeIndex].resetCode = resetCode;\n  }\n\n  // log out the user from all devices\n  const userIndex = findUserIndex(user.authUserId);\n  data.users[userIndex].token = [];\n\n  setData(data);\n  return {};\n}\n\n/**\n * Resets the user's password if the reset password code is correct\n * @param {string} resetCode - the reset code given from the email\n * @param {string} newPassword - the new password\n */\nexport function passwordResetV1(resetCode: string, newPassword: string) {\n  const data = getData();\n\n  const codeIndex = data.resetCodes.findIndex(\n    (user) => user.resetCode === resetCode\n  );\n\n  if (codeIndex === -1) {\n    throw HTTPError(400, 'Invalid reset code');\n  }\n\n  if (newPassword.length < 6) {\n    throw HTTPError(400, 'Password is too short');\n  }\n\n  const userIndex = findUserIndex(data.resetCodes[codeIndex].authUserId);\n  const encryptedPassword = HashingString(newPassword);\n\n  data.users[userIndex].password = encryptedPassword;\n\n  data.resetCodes.splice(codeIndex, 1);\n  setData(data);\n  return {};\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5450caeeda0e27b6b6a25baf24a28bd4587e5448","contentHash":"f9248382f8fde23601c64b62a7b6bd97c1bd9c522fd0f445522852f558693aa3"},"/Users/binvog/Documents/UNSW 2023T1/COMP1531/Indiv_projectbackend/iter4-project-backend/src/functionHelper.ts":{"path":"/Users/binvog/Documents/UNSW 2023T1/COMP1531/Indiv_projectbackend/iter4-project-backend/src/functionHelper.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":895}},"4":{"start":{"line":7,"column":18},"end":{"line":7,"column":40}},"5":{"start":{"line":8,"column":21},"end":{"line":8,"column":61}},"6":{"start":{"line":9,"column":13},"end":{"line":9,"column":28}},"7":{"start":{"line":10,"column":20},"end":{"line":10,"column":59}},"8":{"start":{"line":23,"column":15},"end":{"line":23,"column":41}},"9":{"start":{"line":24,"column":4},"end":{"line":24,"column":82}},"10":{"start":{"line":24,"column":45},"end":{"line":24,"column":78}},"11":{"start":{"line":26,"column":0},"end":{"line":26,"column":30}},"12":{"start":{"line":36,"column":15},"end":{"line":36,"column":41}},"13":{"start":{"line":37,"column":4},"end":{"line":37,"column":82}},"14":{"start":{"line":37,"column":45},"end":{"line":37,"column":78}},"15":{"start":{"line":39,"column":0},"end":{"line":39,"column":34}},"16":{"start":{"line":51,"column":15},"end":{"line":51,"column":41}},"17":{"start":{"line":52,"column":4},"end":{"line":52,"column":81}},"18":{"start":{"line":52,"column":42},"end":{"line":52,"column":77}},"19":{"start":{"line":54,"column":0},"end":{"line":54,"column":24}},"20":{"start":{"line":64,"column":15},"end":{"line":64,"column":41}},"21":{"start":{"line":65,"column":4},"end":{"line":65,"column":77}},"22":{"start":{"line":65,"column":42},"end":{"line":65,"column":73}},"23":{"start":{"line":67,"column":0},"end":{"line":67,"column":28}},"24":{"start":{"line":75,"column":4},"end":{"line":80,"column":5}},"25":{"start":{"line":76,"column":8},"end":{"line":76,"column":82}},"26":{"start":{"line":76,"column":60},"end":{"line":76,"column":78}},"27":{"start":{"line":79,"column":8},"end":{"line":79,"column":20}},"28":{"start":{"line":82,"column":0},"end":{"line":82,"column":42}},"29":{"start":{"line":90,"column":15},"end":{"line":90,"column":41}},"30":{"start":{"line":91,"column":4},"end":{"line":91,"column":99}},"31":{"start":{"line":91,"column":56},"end":{"line":91,"column":95}},"32":{"start":{"line":93,"column":0},"end":{"line":93,"column":42}},"33":{"start":{"line":100,"column":15},"end":{"line":100,"column":41}},"34":{"start":{"line":101,"column":4},"end":{"line":101,"column":73}},"35":{"start":{"line":101,"column":45},"end":{"line":101,"column":69}},"36":{"start":{"line":103,"column":0},"end":{"line":103,"column":32}},"37":{"start":{"line":111,"column":18},"end":{"line":111,"column":40}},"38":{"start":{"line":112,"column":23},"end":{"line":112,"column":47}},"39":{"start":{"line":113,"column":4},"end":{"line":113,"column":41}},"40":{"start":{"line":115,"column":0},"end":{"line":115,"column":42}},"41":{"start":{"line":121,"column":16},"end":{"line":121,"column":32}},"42":{"start":{"line":122,"column":4},"end":{"line":122,"column":33}},"43":{"start":{"line":123,"column":4},"end":{"line":123,"column":17}},"44":{"start":{"line":125,"column":0},"end":{"line":125,"column":30}},"45":{"start":{"line":132,"column":15},"end":{"line":132,"column":41}},"46":{"start":{"line":133,"column":21},"end":{"line":135,"column":6}},"47":{"start":{"line":134,"column":8},"end":{"line":134,"column":72}},"48":{"start":{"line":134,"column":43},"end":{"line":134,"column":68}},"49":{"start":{"line":136,"column":4},"end":{"line":136,"column":22}},"50":{"start":{"line":138,"column":0},"end":{"line":138,"column":40}},"51":{"start":{"line":140,"column":15},"end":{"line":140,"column":41}},"52":{"start":{"line":141,"column":21},"end":{"line":143,"column":6}},"53":{"start":{"line":142,"column":8},"end":{"line":142,"column":72}},"54":{"start":{"line":142,"column":43},"end":{"line":142,"column":68}},"55":{"start":{"line":144,"column":4},"end":{"line":144,"column":22}},"56":{"start":{"line":146,"column":0},"end":{"line":146,"column":50}},"57":{"start":{"line":154,"column":15},"end":{"line":154,"column":41}},"58":{"start":{"line":155,"column":23},"end":{"line":157,"column":6}},"59":{"start":{"line":156,"column":8},"end":{"line":156,"column":103}},"60":{"start":{"line":156,"column":59},"end":{"line":156,"column":99}},"61":{"start":{"line":158,"column":4},"end":{"line":158,"column":24}},"62":{"start":{"line":160,"column":0},"end":{"line":160,"column":56}},"63":{"start":{"line":162,"column":15},"end":{"line":162,"column":41}},"64":{"start":{"line":163,"column":18},"end":{"line":165,"column":6}},"65":{"start":{"line":164,"column":8},"end":{"line":164,"column":98}},"66":{"start":{"line":164,"column":54},"end":{"line":164,"column":94}},"67":{"start":{"line":166,"column":4},"end":{"line":166,"column":19}},"68":{"start":{"line":168,"column":0},"end":{"line":168,"column":46}},"69":{"start":{"line":170,"column":23},"end":{"line":170,"column":45}},"70":{"start":{"line":171,"column":26},"end":{"line":171,"column":97}},"71":{"start":{"line":171,"column":76},"end":{"line":171,"column":94}},"72":{"start":{"line":172,"column":4},"end":{"line":172,"column":44}},"73":{"start":{"line":174,"column":0},"end":{"line":174,"column":40}},"74":{"start":{"line":176,"column":4},"end":{"line":176,"column":76}},"75":{"start":{"line":176,"column":55},"end":{"line":176,"column":72}},"76":{"start":{"line":178,"column":0},"end":{"line":178,"column":40}},"77":{"start":{"line":180,"column":4},"end":{"line":180,"column":82}},"78":{"start":{"line":180,"column":50},"end":{"line":180,"column":78}},"79":{"start":{"line":182,"column":0},"end":{"line":182,"column":40}},"80":{"start":{"line":184,"column":23},"end":{"line":184,"column":45}},"81":{"start":{"line":185,"column":4},"end":{"line":185,"column":93}},"82":{"start":{"line":185,"column":65},"end":{"line":185,"column":89}},"83":{"start":{"line":187,"column":0},"end":{"line":187,"column":40}},"84":{"start":{"line":189,"column":4},"end":{"line":189,"column":96}},"85":{"start":{"line":189,"column":56},"end":{"line":189,"column":92}},"86":{"start":{"line":191,"column":0},"end":{"line":191,"column":62}},"87":{"start":{"line":193,"column":4},"end":{"line":193,"column":91}},"88":{"start":{"line":193,"column":51},"end":{"line":193,"column":87}},"89":{"start":{"line":195,"column":0},"end":{"line":195,"column":52}},"90":{"start":{"line":197,"column":15},"end":{"line":197,"column":41}},"91":{"start":{"line":198,"column":4},"end":{"line":198,"column":68}},"92":{"start":{"line":198,"column":40},"end":{"line":198,"column":64}},"93":{"start":{"line":200,"column":0},"end":{"line":200,"column":32}},"94":{"start":{"line":202,"column":15},"end":{"line":202,"column":41}},"95":{"start":{"line":203,"column":4},"end":{"line":203,"column":88}},"96":{"start":{"line":203,"column":50},"end":{"line":203,"column":84}},"97":{"start":{"line":205,"column":0},"end":{"line":205,"column":38}},"98":{"start":{"line":207,"column":14},"end":{"line":207,"column":37}},"99":{"start":{"line":208,"column":28},"end":{"line":208,"column":100}},"100":{"start":{"line":209,"column":4},"end":{"line":209,"column":29}},"101":{"start":{"line":211,"column":0},"end":{"line":211,"column":38}},"102":{"start":{"line":213,"column":15},"end":{"line":213,"column":41}},"103":{"start":{"line":214,"column":4},"end":{"line":214,"column":77}},"104":{"start":{"line":214,"column":45},"end":{"line":214,"column":73}},"105":{"start":{"line":216,"column":0},"end":{"line":216,"column":42}},"106":{"start":{"line":219,"column":4},"end":{"line":239,"column":5}},"107":{"start":{"line":220,"column":20},"end":{"line":220,"column":26}},"108":{"start":{"line":221,"column":8},"end":{"line":225,"column":9}},"109":{"start":{"line":222,"column":12},"end":{"line":223,"column":99}},"110":{"start":{"line":224,"column":12},"end":{"line":224,"column":33}},"111":{"start":{"line":226,"column":19},"end":{"line":226,"column":34}},"112":{"start":{"line":227,"column":17},"end":{"line":227,"column":30}},"113":{"start":{"line":228,"column":18},"end":{"line":228,"column":48}},"114":{"start":{"line":229,"column":23},"end":{"line":229,"column":52}},"115":{"start":{"line":230,"column":8},"end":{"line":232,"column":9}},"116":{"start":{"line":231,"column":12},"end":{"line":231,"column":19}},"117":{"start":{"line":233,"column":18},"end":{"line":233,"column":59}},"118":{"start":{"line":234,"column":18},"end":{"line":234,"column":31}},"119":{"start":{"line":235,"column":8},"end":{"line":235,"column":67}},"120":{"start":{"line":241,"column":0},"end":{"line":241,"column":38}},"121":{"start":{"line":243,"column":15},"end":{"line":243,"column":41}},"122":{"start":{"line":244,"column":4},"end":{"line":255,"column":7}},"123":{"start":{"line":245,"column":8},"end":{"line":249,"column":11}},"124":{"start":{"line":246,"column":12},"end":{"line":248,"column":13}},"125":{"start":{"line":247,"column":16},"end":{"line":247,"column":47}},"126":{"start":{"line":250,"column":8},"end":{"line":254,"column":11}},"127":{"start":{"line":251,"column":12},"end":{"line":253,"column":13}},"128":{"start":{"line":252,"column":16},"end":{"line":252,"column":45}},"129":{"start":{"line":256,"column":4},"end":{"line":267,"column":7}},"130":{"start":{"line":257,"column":8},"end":{"line":261,"column":11}},"131":{"start":{"line":258,"column":12},"end":{"line":260,"column":13}},"132":{"start":{"line":259,"column":16},"end":{"line":259,"column":47}},"133":{"start":{"line":262,"column":8},"end":{"line":266,"column":11}},"134":{"start":{"line":263,"column":12},"end":{"line":265,"column":13}},"135":{"start":{"line":264,"column":16},"end":{"line":264,"column":42}},"136":{"start":{"line":268,"column":4},"end":{"line":268,"column":35}},"137":{"start":{"line":270,"column":0},"end":{"line":270,"column":38}},"138":{"start":{"line":282,"column":15},"end":{"line":282,"column":41}},"139":{"start":{"line":283,"column":4},"end":{"line":283,"column":66}},"140":{"start":{"line":283,"column":39},"end":{"line":283,"column":62}},"141":{"start":{"line":285,"column":0},"end":{"line":285,"column":20}},"142":{"start":{"line":298,"column":13},"end":{"line":298,"column":25}},"143":{"start":{"line":299,"column":23},"end":{"line":299,"column":42}},"144":{"start":{"line":300,"column":4},"end":{"line":300,"column":41}},"145":{"start":{"line":302,"column":0},"end":{"line":302,"column":32}},"146":{"start":{"line":312,"column":15},"end":{"line":312,"column":41}},"147":{"start":{"line":313,"column":4},"end":{"line":313,"column":66}},"148":{"start":{"line":313,"column":39},"end":{"line":313,"column":62}},"149":{"start":{"line":315,"column":0},"end":{"line":315,"column":24}},"150":{"start":{"line":317,"column":4},"end":{"line":317,"column":41}},"151":{"start":{"line":319,"column":0},"end":{"line":319,"column":40}},"152":{"start":{"line":327,"column":15},"end":{"line":327,"column":41}},"153":{"start":{"line":328,"column":20},"end":{"line":328,"column":36}},"154":{"start":{"line":329,"column":20},"end":{"line":329,"column":45}},"155":{"start":{"line":330,"column":20},"end":{"line":330,"column":47}},"156":{"start":{"line":333,"column":28},"end":{"line":333,"column":29}},"157":{"start":{"line":334,"column":4},"end":{"line":338,"column":5}},"158":{"start":{"line":335,"column":8},"end":{"line":337,"column":35}},"159":{"start":{"line":340,"column":4},"end":{"line":348,"column":5}},"160":{"start":{"line":341,"column":8},"end":{"line":341,"column":28}},"161":{"start":{"line":349,"column":4},"end":{"line":352,"column":7}},"162":{"start":{"line":353,"column":4},"end":{"line":353,"column":35}},"163":{"start":{"line":354,"column":4},"end":{"line":354,"column":34}},"164":{"start":{"line":356,"column":0},"end":{"line":356,"column":46}},"165":{"start":{"line":359,"column":15},"end":{"line":359,"column":41}},"166":{"start":{"line":360,"column":20},"end":{"line":360,"column":36}},"167":{"start":{"line":361,"column":20},"end":{"line":361,"column":45}},"168":{"start":{"line":362,"column":20},"end":{"line":362,"column":47}},"169":{"start":{"line":365,"column":23},"end":{"line":365,"column":24}},"170":{"start":{"line":366,"column":4},"end":{"line":369,"column":5}},"171":{"start":{"line":367,"column":8},"end":{"line":368,"column":77}},"172":{"start":{"line":371,"column":4},"end":{"line":379,"column":5}},"173":{"start":{"line":372,"column":8},"end":{"line":372,"column":23}},"174":{"start":{"line":380,"column":4},"end":{"line":383,"column":7}},"175":{"start":{"line":384,"column":4},"end":{"line":384,"column":35}},"176":{"start":{"line":385,"column":4},"end":{"line":385,"column":34}},"177":{"start":{"line":387,"column":0},"end":{"line":387,"column":36}},"178":{"start":{"line":390,"column":15},"end":{"line":390,"column":41}},"179":{"start":{"line":391,"column":20},"end":{"line":391,"column":36}},"180":{"start":{"line":392,"column":20},"end":{"line":392,"column":45}},"181":{"start":{"line":393,"column":20},"end":{"line":393,"column":47}},"182":{"start":{"line":394,"column":13},"end":{"line":394,"column":48}},"183":{"start":{"line":394,"column":68},"end":{"line":394,"column":111}},"184":{"start":{"line":395,"column":26},"end":{"line":395,"column":61}},"185":{"start":{"line":396,"column":4},"end":{"line":399,"column":7}},"186":{"start":{"line":400,"column":4},"end":{"line":400,"column":24}},"187":{"start":{"line":401,"column":4},"end":{"line":405,"column":5}},"188":{"start":{"line":402,"column":8},"end":{"line":404,"column":34}},"189":{"start":{"line":406,"column":4},"end":{"line":406,"column":22}},"190":{"start":{"line":407,"column":4},"end":{"line":410,"column":7}},"191":{"start":{"line":411,"column":4},"end":{"line":411,"column":35}},"192":{"start":{"line":412,"column":4},"end":{"line":412,"column":34}},"193":{"start":{"line":414,"column":0},"end":{"line":414,"column":52}},"194":{"start":{"line":417,"column":15},"end":{"line":417,"column":41}},"195":{"start":{"line":418,"column":20},"end":{"line":418,"column":45}},"196":{"start":{"line":419,"column":20},"end":{"line":419,"column":47}},"197":{"start":{"line":420,"column":25},"end":{"line":420,"column":35}},"198":{"start":{"line":421,"column":28},"end":{"line":423,"column":11}},"199":{"start":{"line":424,"column":23},"end":{"line":426,"column":11}},"200":{"start":{"line":427,"column":26},"end":{"line":429,"column":11}},"201":{"start":{"line":430,"column":27},"end":{"line":432,"column":11}},"202":{"start":{"line":433,"column":22},"end":{"line":435,"column":11}},"203":{"start":{"line":436,"column":27},"end":{"line":438,"column":11}},"204":{"start":{"line":439,"column":20},"end":{"line":439,"column":70}},"205":{"start":{"line":440,"column":22},"end":{"line":440,"column":71}},"206":{"start":{"line":441,"column":4},"end":{"line":442,"column":69}},"207":{"start":{"line":443,"column":4},"end":{"line":443,"column":35}},"208":{"start":{"line":445,"column":0},"end":{"line":445,"column":46}},"209":{"start":{"line":447,"column":15},"end":{"line":447,"column":41}},"210":{"start":{"line":449,"column":28},"end":{"line":449,"column":29}},"211":{"start":{"line":450,"column":4},"end":{"line":460,"column":7}},"212":{"start":{"line":451,"column":32},"end":{"line":453,"column":15}},"213":{"start":{"line":454,"column":27},"end":{"line":456,"column":15}},"214":{"start":{"line":457,"column":8},"end":{"line":459,"column":9}},"215":{"start":{"line":458,"column":12},"end":{"line":458,"column":32}},"216":{"start":{"line":461,"column":19},"end":{"line":461,"column":36}},"217":{"start":{"line":462,"column":4},"end":{"line":463,"column":71}},"218":{"start":{"line":464,"column":4},"end":{"line":464,"column":35}},"219":{"start":{"line":466,"column":0},"end":{"line":466,"column":46}},"220":{"start":{"line":468,"column":15},"end":{"line":468,"column":41}},"221":{"start":{"line":471,"column":22},"end":{"line":471,"column":56}},"222":{"start":{"line":473,"column":4},"end":{"line":495,"column":5}},"223":{"start":{"line":474,"column":30},"end":{"line":474,"column":39}},"224":{"start":{"line":475,"column":8},"end":{"line":494,"column":11}},"225":{"start":{"line":476,"column":34},"end":{"line":476,"column":122}},"226":{"start":{"line":476,"column":73},"end":{"line":476,"column":119}},"227":{"start":{"line":477,"column":12},"end":{"line":479,"column":13}},"228":{"start":{"line":478,"column":16},"end":{"line":478,"column":23}},"229":{"start":{"line":480,"column":29},"end":{"line":480,"column":67}},"230":{"start":{"line":481,"column":12},"end":{"line":483,"column":13}},"231":{"start":{"line":482,"column":16},"end":{"line":482,"column":23}},"232":{"start":{"line":484,"column":12},"end":{"line":486,"column":13}},"233":{"start":{"line":485,"column":16},"end":{"line":485,"column":23}},"234":{"start":{"line":487,"column":31},"end":{"line":491,"column":13}},"235":{"start":{"line":492,"column":12},"end":{"line":492,"column":73}},"236":{"start":{"line":493,"column":12},"end":{"line":493,"column":44}},"237":{"start":{"line":496,"column":4},"end":{"line":496,"column":35}},"238":{"start":{"line":498,"column":0},"end":{"line":498,"column":34}},"239":{"start":{"line":500,"column":15},"end":{"line":500,"column":41}},"240":{"start":{"line":503,"column":22},"end":{"line":503,"column":56}},"241":{"start":{"line":505,"column":4},"end":{"line":527,"column":5}},"242":{"start":{"line":506,"column":30},"end":{"line":506,"column":39}},"243":{"start":{"line":507,"column":8},"end":{"line":526,"column":11}},"244":{"start":{"line":508,"column":34},"end":{"line":508,"column":122}},"245":{"start":{"line":508,"column":73},"end":{"line":508,"column":119}},"246":{"start":{"line":509,"column":12},"end":{"line":511,"column":13}},"247":{"start":{"line":510,"column":16},"end":{"line":510,"column":23}},"248":{"start":{"line":512,"column":29},"end":{"line":512,"column":67}},"249":{"start":{"line":513,"column":12},"end":{"line":515,"column":13}},"250":{"start":{"line":514,"column":16},"end":{"line":514,"column":23}},"251":{"start":{"line":516,"column":12},"end":{"line":518,"column":13}},"252":{"start":{"line":517,"column":16},"end":{"line":517,"column":23}},"253":{"start":{"line":519,"column":31},"end":{"line":523,"column":13}},"254":{"start":{"line":524,"column":12},"end":{"line":524,"column":73}},"255":{"start":{"line":525,"column":12},"end":{"line":525,"column":44}},"256":{"start":{"line":528,"column":4},"end":{"line":528,"column":35}},"257":{"start":{"line":530,"column":0},"end":{"line":530,"column":44}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"isChannel","decl":{"start":{"line":22,"column":9},"end":{"line":22,"column":18}},"loc":{"start":{"line":22,"column":30},"end":{"line":25,"column":1}},"line":22},"2":{"name":"(anonymous_2)","decl":{"start":{"line":24,"column":30},"end":{"line":24,"column":31}},"loc":{"start":{"line":24,"column":43},"end":{"line":24,"column":80}},"line":24},"3":{"name":"findChannel","decl":{"start":{"line":35,"column":9},"end":{"line":35,"column":20}},"loc":{"start":{"line":35,"column":32},"end":{"line":38,"column":1}},"line":35},"4":{"name":"(anonymous_4)","decl":{"start":{"line":37,"column":30},"end":{"line":37,"column":31}},"loc":{"start":{"line":37,"column":43},"end":{"line":37,"column":80}},"line":37},"5":{"name":"isUser","decl":{"start":{"line":50,"column":9},"end":{"line":50,"column":15}},"loc":{"start":{"line":50,"column":28},"end":{"line":53,"column":1}},"line":50},"6":{"name":"(anonymous_6)","decl":{"start":{"line":52,"column":27},"end":{"line":52,"column":28}},"loc":{"start":{"line":52,"column":40},"end":{"line":52,"column":79}},"line":52},"7":{"name":"findUser","decl":{"start":{"line":63,"column":9},"end":{"line":63,"column":17}},"loc":{"start":{"line":63,"column":26},"end":{"line":66,"column":1}},"line":63},"8":{"name":"(anonymous_8)","decl":{"start":{"line":65,"column":27},"end":{"line":65,"column":28}},"loc":{"start":{"line":65,"column":40},"end":{"line":65,"column":75}},"line":65},"9":{"name":"getAllMemberIds","decl":{"start":{"line":74,"column":9},"end":{"line":74,"column":24}},"loc":{"start":{"line":74,"column":36},"end":{"line":81,"column":1}},"line":74},"10":{"name":"(anonymous_10)","decl":{"start":{"line":76,"column":40},"end":{"line":76,"column":41}},"loc":{"start":{"line":76,"column":58},"end":{"line":76,"column":80}},"line":76},"11":{"name":"getChannelIndex","decl":{"start":{"line":89,"column":9},"end":{"line":89,"column":24}},"loc":{"start":{"line":89,"column":36},"end":{"line":92,"column":1}},"line":89},"12":{"name":"(anonymous_12)","decl":{"start":{"line":91,"column":35},"end":{"line":91,"column":36}},"loc":{"start":{"line":91,"column":54},"end":{"line":91,"column":97}},"line":91},"13":{"name":"getDmIndex","decl":{"start":{"line":99,"column":9},"end":{"line":99,"column":19}},"loc":{"start":{"line":99,"column":26},"end":{"line":102,"column":1}},"line":99},"14":{"name":"(anonymous_14)","decl":{"start":{"line":101,"column":29},"end":{"line":101,"column":30}},"loc":{"start":{"line":101,"column":43},"end":{"line":101,"column":71}},"line":101},"15":{"name":"isChannelMember","decl":{"start":{"line":110,"column":9},"end":{"line":110,"column":24}},"loc":{"start":{"line":110,"column":44},"end":{"line":114,"column":1}},"line":110},"16":{"name":"makeToken","decl":{"start":{"line":120,"column":9},"end":{"line":120,"column":18}},"loc":{"start":{"line":120,"column":21},"end":{"line":124,"column":1}},"line":120},"17":{"name":"getUserByToken","decl":{"start":{"line":131,"column":9},"end":{"line":131,"column":23}},"loc":{"start":{"line":131,"column":31},"end":{"line":137,"column":1}},"line":131},"18":{"name":"(anonymous_18)","decl":{"start":{"line":133,"column":37},"end":{"line":133,"column":38}},"loc":{"start":{"line":133,"column":50},"end":{"line":135,"column":5}},"line":133},"19":{"name":"(anonymous_19)","decl":{"start":{"line":134,"column":28},"end":{"line":134,"column":29}},"loc":{"start":{"line":134,"column":41},"end":{"line":134,"column":70}},"line":134},"20":{"name":"getUserIndexByToken","decl":{"start":{"line":139,"column":9},"end":{"line":139,"column":28}},"loc":{"start":{"line":139,"column":36},"end":{"line":145,"column":1}},"line":139},"21":{"name":"(anonymous_21)","decl":{"start":{"line":141,"column":42},"end":{"line":141,"column":43}},"loc":{"start":{"line":141,"column":55},"end":{"line":143,"column":5}},"line":141},"22":{"name":"(anonymous_22)","decl":{"start":{"line":142,"column":28},"end":{"line":142,"column":29}},"loc":{"start":{"line":142,"column":41},"end":{"line":142,"column":70}},"line":142},"23":{"name":"findChannelByMessageId","decl":{"start":{"line":153,"column":9},"end":{"line":153,"column":31}},"loc":{"start":{"line":153,"column":43},"end":{"line":159,"column":1}},"line":153},"24":{"name":"(anonymous_24)","decl":{"start":{"line":155,"column":42},"end":{"line":155,"column":43}},"loc":{"start":{"line":155,"column":61},"end":{"line":157,"column":5}},"line":155},"25":{"name":"(anonymous_25)","decl":{"start":{"line":156,"column":37},"end":{"line":156,"column":38}},"loc":{"start":{"line":156,"column":57},"end":{"line":156,"column":101}},"line":156},"26":{"name":"findDMbyMessageId","decl":{"start":{"line":161,"column":9},"end":{"line":161,"column":26}},"loc":{"start":{"line":161,"column":38},"end":{"line":167,"column":1}},"line":161},"27":{"name":"(anonymous_27)","decl":{"start":{"line":163,"column":31},"end":{"line":163,"column":32}},"loc":{"start":{"line":163,"column":45},"end":{"line":165,"column":5}},"line":163},"28":{"name":"(anonymous_28)","decl":{"start":{"line":164,"column":32},"end":{"line":164,"column":33}},"loc":{"start":{"line":164,"column":52},"end":{"line":164,"column":96}},"line":164},"29":{"name":"isChannelOwner","decl":{"start":{"line":169,"column":9},"end":{"line":169,"column":23}},"loc":{"start":{"line":169,"column":43},"end":{"line":173,"column":1}},"line":169},"30":{"name":"(anonymous_30)","decl":{"start":{"line":171,"column":56},"end":{"line":171,"column":57}},"loc":{"start":{"line":171,"column":74},"end":{"line":171,"column":96}},"line":171},"31":{"name":"getAllOwnerIds","decl":{"start":{"line":175,"column":9},"end":{"line":175,"column":23}},"loc":{"start":{"line":175,"column":33},"end":{"line":177,"column":1}},"line":175},"32":{"name":"(anonymous_32)","decl":{"start":{"line":176,"column":36},"end":{"line":176,"column":37}},"loc":{"start":{"line":176,"column":53},"end":{"line":176,"column":74}},"line":176},"33":{"name":"findTokenIndex","decl":{"start":{"line":179,"column":9},"end":{"line":179,"column":23}},"loc":{"start":{"line":179,"column":37},"end":{"line":181,"column":1}},"line":179},"34":{"name":"(anonymous_34)","decl":{"start":{"line":180,"column":32},"end":{"line":180,"column":33}},"loc":{"start":{"line":180,"column":48},"end":{"line":180,"column":80}},"line":180},"35":{"name":"findOwnerIndex","decl":{"start":{"line":183,"column":9},"end":{"line":183,"column":23}},"loc":{"start":{"line":183,"column":40},"end":{"line":186,"column":1}},"line":183},"36":{"name":"(anonymous_36)","decl":{"start":{"line":185,"column":47},"end":{"line":185,"column":48}},"loc":{"start":{"line":185,"column":63},"end":{"line":185,"column":91}},"line":185},"37":{"name":"findMessageIndexInChannel","decl":{"start":{"line":188,"column":9},"end":{"line":188,"column":34}},"loc":{"start":{"line":188,"column":55},"end":{"line":190,"column":1}},"line":188},"38":{"name":"(anonymous_38)","decl":{"start":{"line":189,"column":38},"end":{"line":189,"column":39}},"loc":{"start":{"line":189,"column":54},"end":{"line":189,"column":94}},"line":189},"39":{"name":"findMessageIndexInDM","decl":{"start":{"line":192,"column":9},"end":{"line":192,"column":29}},"loc":{"start":{"line":192,"column":45},"end":{"line":194,"column":1}},"line":192},"40":{"name":"(anonymous_40)","decl":{"start":{"line":193,"column":33},"end":{"line":193,"column":34}},"loc":{"start":{"line":193,"column":49},"end":{"line":193,"column":89}},"line":193},"41":{"name":"findDMbyId","decl":{"start":{"line":196,"column":9},"end":{"line":196,"column":19}},"loc":{"start":{"line":196,"column":26},"end":{"line":199,"column":1}},"line":196},"42":{"name":"(anonymous_42)","decl":{"start":{"line":198,"column":24},"end":{"line":198,"column":25}},"loc":{"start":{"line":198,"column":38},"end":{"line":198,"column":66}},"line":198},"43":{"name":"findUserIndex","decl":{"start":{"line":201,"column":9},"end":{"line":201,"column":22}},"loc":{"start":{"line":201,"column":31},"end":{"line":204,"column":1}},"line":201},"44":{"name":"(anonymous_44)","decl":{"start":{"line":203,"column":32},"end":{"line":203,"column":33}},"loc":{"start":{"line":203,"column":48},"end":{"line":203,"column":86}},"line":203},"45":{"name":"HashingString","decl":{"start":{"line":206,"column":9},"end":{"line":206,"column":22}},"loc":{"start":{"line":206,"column":31},"end":{"line":210,"column":1}},"line":206},"46":{"name":"findUserbyEmail","decl":{"start":{"line":212,"column":9},"end":{"line":212,"column":24}},"loc":{"start":{"line":212,"column":32},"end":{"line":215,"column":1}},"line":212},"47":{"name":"(anonymous_47)","decl":{"start":{"line":214,"column":27},"end":{"line":214,"column":28}},"loc":{"start":{"line":214,"column":43},"end":{"line":214,"column":75}},"line":214},"48":{"name":"downloadImage","decl":{"start":{"line":218,"column":9},"end":{"line":218,"column":22}},"loc":{"start":{"line":218,"column":37},"end":{"line":240,"column":1}},"line":218},"49":{"name":"updateAllData","decl":{"start":{"line":242,"column":9},"end":{"line":242,"column":22}},"loc":{"start":{"line":242,"column":53},"end":{"line":269,"column":1}},"line":242},"50":{"name":"(anonymous_50)","decl":{"start":{"line":244,"column":26},"end":{"line":244,"column":27}},"loc":{"start":{"line":244,"column":45},"end":{"line":255,"column":5}},"line":244},"51":{"name":"(anonymous_51)","decl":{"start":{"line":245,"column":37},"end":{"line":245,"column":38}},"loc":{"start":{"line":245,"column":60},"end":{"line":249,"column":9}},"line":245},"52":{"name":"(anonymous_52)","decl":{"start":{"line":250,"column":35},"end":{"line":250,"column":36}},"loc":{"start":{"line":250,"column":56},"end":{"line":254,"column":9}},"line":250},"53":{"name":"(anonymous_53)","decl":{"start":{"line":256,"column":20},"end":{"line":256,"column":21}},"loc":{"start":{"line":256,"column":34},"end":{"line":267,"column":5}},"line":256},"54":{"name":"(anonymous_54)","decl":{"start":{"line":257,"column":32},"end":{"line":257,"column":33}},"loc":{"start":{"line":257,"column":55},"end":{"line":261,"column":9}},"line":257},"55":{"name":"(anonymous_55)","decl":{"start":{"line":262,"column":30},"end":{"line":262,"column":31}},"loc":{"start":{"line":262,"column":48},"end":{"line":266,"column":9}},"line":262},"56":{"name":"isDm","decl":{"start":{"line":281,"column":9},"end":{"line":281,"column":13}},"loc":{"start":{"line":281,"column":20},"end":{"line":284,"column":1}},"line":281},"57":{"name":"(anonymous_57)","decl":{"start":{"line":283,"column":24},"end":{"line":283,"column":25}},"loc":{"start":{"line":283,"column":37},"end":{"line":283,"column":64}},"line":283},"58":{"name":"isDmMember","decl":{"start":{"line":297,"column":9},"end":{"line":297,"column":19}},"loc":{"start":{"line":297,"column":34},"end":{"line":301,"column":1}},"line":297},"59":{"name":"findDm","decl":{"start":{"line":311,"column":9},"end":{"line":311,"column":15}},"loc":{"start":{"line":311,"column":22},"end":{"line":314,"column":1}},"line":311},"60":{"name":"(anonymous_60)","decl":{"start":{"line":313,"column":24},"end":{"line":313,"column":25}},"loc":{"start":{"line":313,"column":37},"end":{"line":313,"column":64}},"line":313},"61":{"name":"getCurrentTime","decl":{"start":{"line":316,"column":9},"end":{"line":316,"column":23}},"loc":{"start":{"line":316,"column":26},"end":{"line":318,"column":1}},"line":316},"62":{"name":"updateChannelInfo","decl":{"start":{"line":325,"column":9},"end":{"line":325,"column":26}},"loc":{"start":{"line":325,"column":45},"end":{"line":355,"column":1}},"line":325},"63":{"name":"updateDmInfo","decl":{"start":{"line":357,"column":9},"end":{"line":357,"column":21}},"loc":{"start":{"line":357,"column":41},"end":{"line":386,"column":1}},"line":357},"64":{"name":"incrementMessageStat","decl":{"start":{"line":388,"column":9},"end":{"line":388,"column":29}},"loc":{"start":{"line":388,"column":42},"end":{"line":413,"column":1}},"line":388},"65":{"name":"updateInvolvement","decl":{"start":{"line":415,"column":9},"end":{"line":415,"column":26}},"loc":{"start":{"line":415,"column":39},"end":{"line":444,"column":1}},"line":415},"66":{"name":"updateUtilization","decl":{"start":{"line":446,"column":9},"end":{"line":446,"column":26}},"loc":{"start":{"line":446,"column":29},"end":{"line":465,"column":1}},"line":446},"67":{"name":"(anonymous_67)","decl":{"start":{"line":450,"column":23},"end":{"line":450,"column":24}},"loc":{"start":{"line":450,"column":39},"end":{"line":460,"column":5}},"line":450},"68":{"name":"sendNotifDm","decl":{"start":{"line":467,"column":9},"end":{"line":467,"column":20}},"loc":{"start":{"line":467,"column":54},"end":{"line":497,"column":1}},"line":467},"69":{"name":"(anonymous_69)","decl":{"start":{"line":475,"column":28},"end":{"line":475,"column":29}},"loc":{"start":{"line":475,"column":50},"end":{"line":494,"column":9}},"line":475},"70":{"name":"(anonymous_70)","decl":{"start":{"line":476,"column":55},"end":{"line":476,"column":56}},"loc":{"start":{"line":476,"column":71},"end":{"line":476,"column":121}},"line":476},"71":{"name":"sendNotifChannel","decl":{"start":{"line":499,"column":9},"end":{"line":499,"column":25}},"loc":{"start":{"line":499,"column":64},"end":{"line":529,"column":1}},"line":499},"72":{"name":"(anonymous_72)","decl":{"start":{"line":507,"column":28},"end":{"line":507,"column":29}},"loc":{"start":{"line":507,"column":50},"end":{"line":526,"column":9}},"line":507},"73":{"name":"(anonymous_73)","decl":{"start":{"line":508,"column":55},"end":{"line":508,"column":56}},"loc":{"start":{"line":508,"column":71},"end":{"line":508,"column":121}},"line":508}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":75,"column":4},"end":{"line":80,"column":5}},"type":"if","locations":[{"start":{"line":75,"column":4},"end":{"line":80,"column":5}},{"start":{"line":75,"column":4},"end":{"line":80,"column":5}}],"line":75},"4":{"loc":{"start":{"line":221,"column":8},"end":{"line":225,"column":9}},"type":"if","locations":[{"start":{"line":221,"column":8},"end":{"line":225,"column":9}},{"start":{"line":221,"column":8},"end":{"line":225,"column":9}}],"line":221},"5":{"loc":{"start":{"line":221,"column":12},"end":{"line":221,"column":54}},"type":"binary-expr","locations":[{"start":{"line":221,"column":12},"end":{"line":221,"column":30}},{"start":{"line":221,"column":34},"end":{"line":221,"column":54}}],"line":221},"6":{"loc":{"start":{"line":230,"column":8},"end":{"line":232,"column":9}},"type":"if","locations":[{"start":{"line":230,"column":8},"end":{"line":232,"column":9}},{"start":{"line":230,"column":8},"end":{"line":232,"column":9}}],"line":230},"7":{"loc":{"start":{"line":230,"column":12},"end":{"line":230,"column":61}},"type":"binary-expr","locations":[{"start":{"line":230,"column":12},"end":{"line":230,"column":35}},{"start":{"line":230,"column":39},"end":{"line":230,"column":61}}],"line":230},"8":{"loc":{"start":{"line":246,"column":12},"end":{"line":248,"column":13}},"type":"if","locations":[{"start":{"line":246,"column":12},"end":{"line":248,"column":13}},{"start":{"line":246,"column":12},"end":{"line":248,"column":13}}],"line":246},"9":{"loc":{"start":{"line":251,"column":12},"end":{"line":253,"column":13}},"type":"if","locations":[{"start":{"line":251,"column":12},"end":{"line":253,"column":13}},{"start":{"line":251,"column":12},"end":{"line":253,"column":13}}],"line":251},"10":{"loc":{"start":{"line":258,"column":12},"end":{"line":260,"column":13}},"type":"if","locations":[{"start":{"line":258,"column":12},"end":{"line":260,"column":13}},{"start":{"line":258,"column":12},"end":{"line":260,"column":13}}],"line":258},"11":{"loc":{"start":{"line":263,"column":12},"end":{"line":265,"column":13}},"type":"if","locations":[{"start":{"line":263,"column":12},"end":{"line":265,"column":13}},{"start":{"line":263,"column":12},"end":{"line":265,"column":13}}],"line":263},"12":{"loc":{"start":{"line":334,"column":4},"end":{"line":338,"column":5}},"type":"if","locations":[{"start":{"line":334,"column":4},"end":{"line":338,"column":5}},{"start":{"line":334,"column":4},"end":{"line":338,"column":5}}],"line":334},"13":{"loc":{"start":{"line":340,"column":4},"end":{"line":348,"column":5}},"type":"if","locations":[{"start":{"line":340,"column":4},"end":{"line":348,"column":5}}],"line":340},"14":{"loc":{"start":{"line":366,"column":4},"end":{"line":369,"column":5}},"type":"if","locations":[{"start":{"line":366,"column":4},"end":{"line":369,"column":5}},{"start":{"line":366,"column":4},"end":{"line":369,"column":5}}],"line":366},"15":{"loc":{"start":{"line":371,"column":4},"end":{"line":379,"column":5}},"type":"if","locations":[{"start":{"line":371,"column":4},"end":{"line":379,"column":5}}],"line":371},"16":{"loc":{"start":{"line":394,"column":68},"end":{"line":394,"column":111}},"type":"cond-expr","locations":[{"start":{"line":394,"column":84},"end":{"line":394,"column":106}},{"start":{"line":394,"column":109},"end":{"line":394,"column":111}}],"line":394},"17":{"loc":{"start":{"line":401,"column":4},"end":{"line":405,"column":5}},"type":"if","locations":[{"start":{"line":401,"column":4},"end":{"line":405,"column":5}},{"start":{"line":401,"column":4},"end":{"line":405,"column":5}}],"line":401},"18":{"loc":{"start":{"line":421,"column":28},"end":{"line":423,"column":11}},"type":"cond-expr","locations":[{"start":{"line":422,"column":10},"end":{"line":422,"column":65}},{"start":{"line":423,"column":10},"end":{"line":423,"column":11}}],"line":421},"19":{"loc":{"start":{"line":424,"column":23},"end":{"line":426,"column":11}},"type":"cond-expr","locations":[{"start":{"line":425,"column":10},"end":{"line":425,"column":55}},{"start":{"line":426,"column":10},"end":{"line":426,"column":11}}],"line":424},"20":{"loc":{"start":{"line":427,"column":26},"end":{"line":429,"column":11}},"type":"cond-expr","locations":[{"start":{"line":428,"column":10},"end":{"line":428,"column":61}},{"start":{"line":429,"column":10},"end":{"line":429,"column":11}}],"line":427},"21":{"loc":{"start":{"line":430,"column":27},"end":{"line":432,"column":11}},"type":"cond-expr","locations":[{"start":{"line":431,"column":10},"end":{"line":431,"column":68}},{"start":{"line":432,"column":10},"end":{"line":432,"column":11}}],"line":430},"22":{"loc":{"start":{"line":433,"column":22},"end":{"line":435,"column":11}},"type":"cond-expr","locations":[{"start":{"line":434,"column":10},"end":{"line":434,"column":58}},{"start":{"line":435,"column":10},"end":{"line":435,"column":11}}],"line":433},"23":{"loc":{"start":{"line":436,"column":27},"end":{"line":438,"column":11}},"type":"cond-expr","locations":[{"start":{"line":437,"column":10},"end":{"line":437,"column":68}},{"start":{"line":438,"column":10},"end":{"line":438,"column":11}}],"line":436},"24":{"loc":{"start":{"line":442,"column":8},"end":{"line":442,"column":68}},"type":"cond-expr","locations":[{"start":{"line":442,"column":28},"end":{"line":442,"column":29}},{"start":{"line":442,"column":32},"end":{"line":442,"column":68}}],"line":442},"25":{"loc":{"start":{"line":451,"column":32},"end":{"line":453,"column":15}},"type":"cond-expr","locations":[{"start":{"line":452,"column":14},"end":{"line":452,"column":70}},{"start":{"line":453,"column":14},"end":{"line":453,"column":15}}],"line":451},"26":{"loc":{"start":{"line":454,"column":27},"end":{"line":456,"column":15}},"type":"cond-expr","locations":[{"start":{"line":455,"column":14},"end":{"line":455,"column":60}},{"start":{"line":456,"column":14},"end":{"line":456,"column":15}}],"line":454},"27":{"loc":{"start":{"line":457,"column":8},"end":{"line":459,"column":9}},"type":"if","locations":[{"start":{"line":457,"column":8},"end":{"line":459,"column":9}},{"start":{"line":457,"column":8},"end":{"line":459,"column":9}}],"line":457},"28":{"loc":{"start":{"line":457,"column":12},"end":{"line":457,"column":53}},"type":"binary-expr","locations":[{"start":{"line":457,"column":12},"end":{"line":457,"column":33}},{"start":{"line":457,"column":37},"end":{"line":457,"column":53}}],"line":457},"29":{"loc":{"start":{"line":463,"column":8},"end":{"line":463,"column":70}},"type":"cond-expr","locations":[{"start":{"line":463,"column":25},"end":{"line":463,"column":26}},{"start":{"line":463,"column":29},"end":{"line":463,"column":70}}],"line":463},"30":{"loc":{"start":{"line":473,"column":4},"end":{"line":495,"column":5}},"type":"if","locations":[{"start":{"line":473,"column":4},"end":{"line":495,"column":5}},{"start":{"line":473,"column":4},"end":{"line":495,"column":5}}],"line":473},"31":{"loc":{"start":{"line":477,"column":12},"end":{"line":479,"column":13}},"type":"if","locations":[{"start":{"line":477,"column":12},"end":{"line":479,"column":13}},{"start":{"line":477,"column":12},"end":{"line":479,"column":13}}],"line":477},"32":{"loc":{"start":{"line":481,"column":12},"end":{"line":483,"column":13}},"type":"if","locations":[{"start":{"line":481,"column":12},"end":{"line":483,"column":13}},{"start":{"line":481,"column":12},"end":{"line":483,"column":13}}],"line":481},"33":{"loc":{"start":{"line":484,"column":12},"end":{"line":486,"column":13}},"type":"if","locations":[{"start":{"line":484,"column":12},"end":{"line":486,"column":13}},{"start":{"line":484,"column":12},"end":{"line":486,"column":13}}],"line":484},"34":{"loc":{"start":{"line":505,"column":4},"end":{"line":527,"column":5}},"type":"if","locations":[{"start":{"line":505,"column":4},"end":{"line":527,"column":5}},{"start":{"line":505,"column":4},"end":{"line":527,"column":5}}],"line":505},"35":{"loc":{"start":{"line":509,"column":12},"end":{"line":511,"column":13}},"type":"if","locations":[{"start":{"line":509,"column":12},"end":{"line":511,"column":13}},{"start":{"line":509,"column":12},"end":{"line":511,"column":13}}],"line":509},"36":{"loc":{"start":{"line":513,"column":12},"end":{"line":515,"column":13}},"type":"if","locations":[{"start":{"line":513,"column":12},"end":{"line":515,"column":13}},{"start":{"line":513,"column":12},"end":{"line":515,"column":13}}],"line":513},"37":{"loc":{"start":{"line":516,"column":12},"end":{"line":518,"column":13}},"type":"if","locations":[{"start":{"line":516,"column":12},"end":{"line":518,"column":13}},{"start":{"line":516,"column":12},"end":{"line":518,"column":13}}],"line":516}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":94,"9":94,"10":160,"11":1,"12":590,"13":590,"14":782,"15":1,"16":24,"17":24,"18":43,"19":1,"20":256,"21":256,"22":477,"23":1,"24":826,"25":816,"26":1304,"27":10,"28":1,"29":452,"30":452,"31":534,"32":1,"33":194,"34":194,"35":211,"36":1,"37":77,"38":77,"39":77,"40":1,"41":709,"42":709,"43":709,"44":1,"45":1580,"46":1580,"47":2221,"48":2217,"49":1580,"50":1,"51":8,"52":8,"53":8,"54":6,"55":8,"56":1,"57":114,"58":114,"59":110,"60":98,"61":114,"62":1,"63":114,"64":114,"65":83,"66":58,"67":114,"68":1,"69":31,"70":31,"71":37,"72":31,"73":1,"74":55,"75":55,"76":1,"77":5,"78":5,"79":1,"80":2,"81":2,"82":3,"83":1,"84":55,"85":56,"86":1,"87":39,"88":39,"89":1,"90":155,"91":155,"92":164,"93":1,"94":2891,"95":2891,"96":4244,"97":1,"98":1427,"99":1427,"100":1427,"101":1,"102":6,"103":6,"104":6,"105":1,"106":711,"107":711,"108":711,"109":704,"110":704,"111":711,"112":711,"113":711,"114":711,"115":711,"116":704,"117":7,"118":7,"119":7,"120":1,"121":6,"122":6,"123":1,"124":2,"125":1,"126":1,"127":2,"128":1,"129":6,"130":2,"131":2,"132":1,"133":2,"134":4,"135":2,"136":6,"137":1,"138":41,"139":41,"140":59,"141":1,"142":38,"143":38,"144":38,"145":1,"146":74,"147":74,"148":93,"149":1,"150":2588,"151":1,"152":468,"153":468,"154":468,"155":468,"156":468,"157":468,"158":468,"159":468,"160":460,"161":468,"162":468,"163":468,"164":1,"165":404,"166":404,"167":404,"168":404,"169":404,"170":404,"171":404,"172":404,"173":393,"174":404,"175":404,"176":404,"177":1,"178":434,"179":434,"180":434,"181":434,"182":434,"183":434,"184":434,"185":434,"186":434,"187":434,"188":434,"189":434,"190":434,"191":434,"192":434,"193":1,"194":1321,"195":1321,"196":1321,"197":1321,"198":1321,"199":1321,"200":1321,"201":1321,"202":1321,"203":1321,"204":1321,"205":1321,"206":1321,"207":1321,"208":1,"209":13,"210":13,"211":13,"212":18,"213":18,"214":18,"215":10,"216":13,"217":13,"218":13,"219":1,"220":148,"221":148,"222":148,"223":3,"224":3,"225":8,"226":13,"227":8,"228":2,"229":6,"230":6,"231":0,"232":6,"233":0,"234":6,"235":6,"236":6,"237":148,"238":1,"239":291,"240":291,"241":291,"242":7,"243":7,"244":16,"245":25,"246":16,"247":2,"248":14,"249":14,"250":1,"251":13,"252":1,"253":12,"254":12,"255":12,"256":291,"257":1},"f":{"0":2,"1":94,"2":160,"3":590,"4":782,"5":24,"6":43,"7":256,"8":477,"9":826,"10":1304,"11":452,"12":534,"13":194,"14":211,"15":77,"16":709,"17":1580,"18":2221,"19":2217,"20":8,"21":8,"22":6,"23":114,"24":110,"25":98,"26":114,"27":83,"28":58,"29":31,"30":37,"31":55,"32":55,"33":5,"34":5,"35":2,"36":3,"37":55,"38":56,"39":39,"40":39,"41":155,"42":164,"43":2891,"44":4244,"45":1427,"46":6,"47":6,"48":711,"49":6,"50":1,"51":2,"52":2,"53":2,"54":2,"55":4,"56":41,"57":59,"58":38,"59":74,"60":93,"61":2588,"62":468,"63":404,"64":434,"65":1321,"66":13,"67":18,"68":148,"69":8,"70":13,"71":291,"72":16,"73":25},"b":{"0":[1,1,1],"1":[0,2],"2":[2,2],"3":[816,10],"4":[704,7],"5":[711,704],"6":[704,7],"7":[711,711],"8":[1,1],"9":[1,1],"10":[1,1],"11":[2,2],"12":[468,0],"13":[460],"14":[404,0],"15":[393],"16":[0,434],"17":[434,0],"18":[1321,0],"19":[1321,0],"20":[1321,0],"21":[1321,0],"22":[1321,0],"23":[1321,0],"24":[2,1319],"25":[18,0],"26":[18,0],"27":[10,8],"28":[18,13],"29":[0,13],"30":[3,145],"31":[2,6],"32":[0,6],"33":[0,6],"34":[7,284],"35":[2,14],"36":[1,13],"37":[1,12]},"inputSourceMap":{"version":3,"file":"/Users/binvog/Documents/UNSW 2023T1/COMP1531/Indiv_projectbackend/iter4-project-backend/src/functionHelper.ts","sources":["/Users/binvog/Documents/UNSW 2023T1/COMP1531/Indiv_projectbackend/iter4-project-backend/src/functionHelper.ts"],"names":[],"mappings":"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","sourcesContent":["import { getData, setData } from './dataStore';\nimport request from 'sync-request';\nimport { channelData, dmData, userData } from './interfaces';\nimport { v4 as uuidv4 } from 'uuid';\nimport HTTPError from 'http-errors';\n// import { data } from './dataStore';\n\n/**\n * Determines whether a channel is a valid channel\n * by checking through channels array in the\n * dataStore.js\n *\n * @param {number} channelId - The authenticated channel Id\n * @returns {boolean} - true if the channel is in the dataStore,\n *                    | false if the channel isnt in the dataStore\n *\n */\nexport function isChannel(channelId: number): boolean {\n  const data = getData();\n  return data.channels.some((a) => a.channelId === channelId);\n}\n\n/**\n * Finds the channel object based on the given channelId\n *\n * @param {number} channelId - The authenticated channel Id\n * @returns {undefined} - if the function cannot find the channel\n * @returns {channel}  - returns channel object if the channel is found\n *\n */\nexport function findChannel(channelId: number): channelData | undefined {\n  const data = getData();\n  return data.channels.find((a) => a.channelId === channelId);\n}\n\n/**\n * Determines whether a user is a valid user\n * by checking through users array in the\n * dataStore.js\n *\n * @param {number} userId - the authenticated userId\n * @returns {boolean} - true if the channel is in dataStore\n *                    = false if it is not\n *\n */\nexport function isUser(authUserId: number): boolean {\n  const data = getData();\n  return data.users.some((a) => a.authUserId === authUserId);\n}\n\n/**\n * Finds the user object based on the given userId\n *\n * @param {number} userId - the authenticated user Id\n * @returns {undefined} - returns undefined if the user isnt in the dataStore\n * @returns {userData | undefined} - returns user object if the user is in the dataStore\n *\n */\nexport function findUser(userId: number): userData | undefined {\n  const data = getData();\n  return data.users.find((a) => a.authUserId === userId);\n}\n\n/**\n * Returns an array of member IDs for the specified channel.\n *\n * @param {object} channel - The channel object to retrieve member IDs from.\n * @returns {(Array.<number>|null)} - An array of member IDs, or null if the channel does not contain any.\n */\nexport function getAllMemberIds(\n  dataPoint: channelData | dmData\n): Array<number> {\n  if (dataPoint) {\n    return dataPoint.allMembers.map((member) => member.uId);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Returns the index of the channel with the specified ID.\n *\n * @param {number} channelId - The ID of the channel to retrieve the index of.\n * @returns {number} - The index of the channel with the specified ID, or -1 if no matching channel is found.\n */\nexport function getChannelIndex(channelId: number): number {\n  const data = getData();\n  return data.channels.findIndex((channel) => channel.channelId === channelId);\n}\n\n/**\n * Returns the index of the DM with the specified ID.\n * @param {number} dmId - The ID of the DM to retrieve the index of.\n * @returns {number} - The index of the DM with the specified ID, or -1 if no matching DM is found.\n */\nexport function getDmIndex(dmId: number): number {\n  const data = getData();\n  return data.dm.findIndex((dm) => dm.dmId === dmId);\n}\n\n/**\n * Checks if a user is a member of a given channel.\n * @param {number} channelId - The ID of the channel to check.\n * @param {number} userId - The ID of the user to check.\n * @returns {boolean} - Returns true if the user is a member of the channel, and false otherwise.\n */\nexport function isChannelMember(channelId: number, userId: number): boolean {\n  const channel = findChannel(channelId);\n  const allMemberIds = getAllMemberIds(channel);\n  return allMemberIds.includes(userId);\n}\n\n/**\n *\n * @returns {string} - returns a random string of 36 characters using uuidv4\n */\nexport function makeToken() {\n  let token = uuidv4();\n  token = HashingString(token);\n  return token;\n}\n\n/**\n * Returns the user object that corresponds to the provided token.\n * @param {string} token - The token to search for.\n * @returns {userData|undefined} - The user object if found, or undefined if not.\n */\nexport function getUserByToken(token: string) {\n  const data = getData();\n  const tokenFound = data.users.find((c) =>\n    c.token.find((t) => t.token === token)\n  );\n  return tokenFound;\n}\n\nexport function getUserIndexByToken(token: string): number {\n  const data = getData();\n  const tokenFound = data.users.findIndex((c) =>\n    c.token.find((t) => t.token === token)\n  );\n  return tokenFound;\n}\n/**\n * Returns the channel that contains the message with the specified ID.\n * @param {number} messageId - The ID of the message to find.\n * @returns {channelData|undefined} - The channel object that contains the message with the specified ID,\n *                                    or undefined if no channel contains the message.\n */\nexport function findChannelByMessageId(\n  messageId: number\n): channelData | undefined {\n  const data = getData();\n  const channelFound = data.channels.find((channel) =>\n    channel.messages.find((messages) => messages.messageId === messageId)\n  );\n  return channelFound;\n}\n\nexport function findDMbyMessageId(messageId: number): dmData | undefined {\n  const data = getData();\n  const dmFound = data.dm.find((dm) =>\n    dm.messages.find((messages) => messages.messageId === messageId)\n  );\n  return dmFound;\n}\n\nexport function isChannelOwner(userId: number, channelId: number): boolean {\n  const channelFound = findChannel(channelId);\n  const ownerMembersIds = channelFound.ownerMembers.map((member) => member.uId);\n  return ownerMembersIds.includes(userId);\n}\n\nexport function getAllOwnerIds(channel: channelData | dmData): Array<number> {\n  return channel.ownerMembers.map((owner) => owner.uId);\n}\n\nexport function findTokenIndex(user: userData, token: string): number {\n  return user.token.findIndex((item) => item.token === token);\n}\n\nexport function findOwnerIndex(channelId: number, uId: number): number {\n  const channelFound = findChannel(channelId);\n  return channelFound.ownerMembers.findIndex((item) => item.uId === uId);\n}\n\nexport function findMessageIndexInChannel(\n  channel: channelData,\n  messageId: number\n): number {\n  return channel.messages.findIndex((item) => item.messageId === messageId);\n}\n\nexport function findMessageIndexInDM(dm: dmData, messageId: number): number {\n  return dm.messages.findIndex((item) => item.messageId === messageId);\n}\n\nexport function findDMbyId(dmId: number): dmData | undefined {\n  const data = getData();\n  return data.dm.find((dm) => dm.dmId === dmId);\n}\n\nexport function findUserIndex(userId: number): number {\n  const data = getData();\n  return data.users.findIndex((user) => user.authUserId === userId);\n}\n\nexport function HashingString(string: string): string {\n  const jwt = require('jsonwebtoken');\n  const encryptedPassword = jwt.sign(\n    string,\n    'KEVINHINDIEALMINAELSHIBO2394850-92840)_(*%&)_($#&()*'\n  );\n  return encryptedPassword;\n}\n\nexport function findUserbyEmail(email: string) {\n  const data = getData();\n  return data.users.find((user) => user.email === email);\n}\n// make a function where user passes in imgUrl and stores in /img/ folder\nexport function downloadImage(imgUrl?: string, name?: string) {\n  try {\n    let image = imgUrl;\n    if (name === undefined && imgUrl === undefined) {\n      image =\n        'https://static.wikia.nocookie.net/joke-battles/images/b/b5/The_Screaming_Cat.jpg';\n      name = 'default.jpg';\n    }\n\n    const path = require('path');\n    const fs = require('fs');\n\n    const dir = path.join(__dirname, '../img');\n\n    const filePath = path.join(dir, 'default.jpg');\n\n    if (fs.existsSync(filePath) && name === 'default.jpg') {\n      return;\n    }\n\n    const res = request('GET', image);\n    const img = res.getBody();\n\n    fs.writeFileSync(path.join(dir, name), img, { flag: 'w' });\n  } catch (error) /* istanbul ignore next */ {\n    console.error(`Error downloading image: ${error}`);\n  }\n}\n\nexport function updateAllData(\n  dataPoint: string,\n  authUserId: number,\n  flags: string\n) {\n  const data = getData();\n\n  data.channels.forEach((channel) => {\n    channel.ownerMembers.forEach((ownerMember) => {\n      if (ownerMember.uId === authUserId) {\n        ownerMember[flags] = dataPoint;\n      }\n    });\n    channel.allMembers.forEach((allMember) => {\n      if (allMember.uId === authUserId) {\n        allMember[flags] = dataPoint;\n      }\n    });\n  });\n\n  data.dm.forEach((dm) => {\n    dm.ownerMembers.forEach((ownerMember) => {\n      if (ownerMember.uId === authUserId) {\n        ownerMember[flags] = dataPoint;\n      }\n    });\n    dm.allMembers.forEach((member) => {\n      if (member.uId === authUserId) {\n        member[flags] = dataPoint;\n      }\n    });\n  });\n\n  setData(data);\n}\n\n/**\n * Determines whether a dm is a valid dm\n * by checking through dms array in the\n * dataStore.js\n *\n * @param {number} dmId - The authenticated channel Id\n * @returns {boolean} - true if the dm is in the dataStore,\n *                    | false if the dm isnt in the dataStore\n *\n */\nexport function isDm(dmId: number): boolean {\n  const data = getData();\n  return data.dm.some((a) => a.dmId === dmId);\n}\n\n/**\n * Determines whether a user is a valid dm member\n * by checking through dms array in the\n * dataStore.js\n *\n * @param {number} dmId - The authenticated dm Id\n * @param {number} userId - The authenticated user Id\n * @returns {boolean} - true if the user is a member of the dm\n *                    | false if the user isn't a member of the dm\n *\n */\nexport function isDmMember(dmId: number, userId: number): boolean {\n  const dm = findDm(dmId);\n  const allMemberIds = getAllMemberIds(dm);\n  return allMemberIds.includes(userId);\n}\n\n/**\n * Finds the dm object based on the given dmId\n *\n * @param {number} dmId - The authenticated dm Id\n * @returns {undefined} - if the function cannot find the dm\n * @returns {channel}  - returns dm object if the dm is found\n *\n */\nexport function findDm(dmId: number): dmData | undefined {\n  const data = getData();\n  return data.dm.find((a) => a.dmId === dmId);\n}\n\nexport function getCurrentTime(): number {\n  return Math.floor(Date.now() / 1000);\n}\n\n/**\n *\n * @param token - token of the user to update\n * @param flag - 0 for increment, 1 for decrement\n */\nexport function updateChannelInfo(authUserId: number, flag: number) {\n  // find the user and increment the number of channels they are in\n  const data = getData();\n  const timeStamp = getCurrentTime();\n  const userIndex = findUserIndex(authUserId);\n  const userStats = data.users[userIndex].stats;\n  // get the latest numChannelsJoined in the array and increment it\n  // if it is still blank then set it to 1\n  let numChannelsJoined = 0;\n  if (userStats.channelsJoined.length > 0) {\n    numChannelsJoined =\n      userStats.channelsJoined[userStats.channelsJoined.length - 1]\n        .numChannelsJoined;\n  }\n\n  /* istanbul ignore else */\n  if (flag === 0) {\n    numChannelsJoined++;\n  } else if (flag === 1 && numChannelsJoined > 0) {\n    numChannelsJoined--;\n  } else {\n    throw HTTPError(400, 'Cannot decrement below 0');\n  }\n\n  data.users[userIndex].stats.channelsJoined.push({\n    timeStamp: timeStamp,\n    numChannelsJoined: numChannelsJoined,\n  });\n\n  setData(data);\n\n  updateInvolvement(authUserId);\n}\n\nexport function updateDmInfo(authUserId: number, flags: number) {\n  // find the user and increment the number of channels they are in\n  const data = getData();\n  const timeStamp = getCurrentTime();\n  const userIndex = findUserIndex(authUserId);\n  const userStats = data.users[userIndex].stats;\n  // get the latest numChannelsJoined in the array and increment it\n  // if it is still blank then set it to 1\n  let numDmsJoined = 0;\n  if (userStats.dmsJoined.length > 0) {\n    numDmsJoined =\n      userStats.dmsJoined[userStats.dmsJoined.length - 1].numDmsJoined;\n  }\n\n  /* istanbul ignore else */\n  if (flags === 0) {\n    numDmsJoined++;\n  } else if (flags === 1 && numDmsJoined > 0) {\n    numDmsJoined--;\n  } else {\n    throw HTTPError(400, 'Cannot decrement below 0');\n  }\n\n  data.users[userIndex].stats.dmsJoined.push({\n    timeStamp: timeStamp,\n    numDmsJoined: numDmsJoined,\n  });\n\n  setData(data);\n\n  updateInvolvement(authUserId);\n}\n\nexport function incrementMessageStat(authUserId: number) {\n  // find the user and increment the number of channels they are in\n  const data = getData();\n  const timeStamp = getCurrentTime();\n  const userIndex = findUserIndex(authUserId);\n  const userStats = data.users[userIndex].stats;\n\n  const [lastMessageSent = { numMessagesSent: 0 }] =\n    userStats.messagesSent.slice(-1);\n\n  let numMessagesSent = lastMessageSent.numMessagesSent + 1;\n\n  data.users[userIndex].stats.messagesSent.push({\n    timeStamp: timeStamp,\n    numMessagesSent: numMessagesSent,\n  });\n\n  numMessagesSent = 0;\n  if (data.stats.messagesExist.length > 0) {\n    numMessagesSent =\n      data.stats.messagesExist[data.stats.messagesExist.length - 1]\n        .numMessagesExist;\n  }\n\n  numMessagesSent++;\n\n  data.stats.messagesExist.push({\n    timeStamp: timeStamp,\n    numMessagesExist: numMessagesSent,\n  });\n\n  setData(data);\n\n  updateInvolvement(authUserId);\n}\n\nexport function updateInvolvement(authUserId: number) {\n  // find the user and increment the number of channels they are in\n  const data = getData();\n  const userIndex = findUserIndex(authUserId);\n  const userStats = data.users[userIndex].stats;\n  const workspaceStats = data.stats;\n\n  const numChannelsJoined = userStats.channelsJoined.length\n    ? userStats.channelsJoined.slice(-1)[0].numChannelsJoined\n    : 0;\n\n  const numDmsJoined = userStats.dmsJoined.length\n    ? userStats.dmsJoined.slice(-1)[0].numDmsJoined\n    : 0;\n\n  const numMessagesSent = userStats.messagesSent.length\n    ? userStats.messagesSent.slice(-1)[0].numMessagesSent\n    : 0;\n\n  const numChannelsExist = workspaceStats.channelsExist.length\n    ? workspaceStats.channelsExist.slice(-1)[0].numChannelsExist\n    : 0;\n\n  const numDmsExist = workspaceStats.dmsExist.length\n    ? workspaceStats.dmsExist.slice(-1)[0].numDmsExist\n    : 0;\n\n  const numMessagesExist = workspaceStats.messagesExist.length\n    ? workspaceStats.messagesExist.slice(-1)[0].numMessagesExist\n    : 0;\n\n  const numerator = numChannelsJoined + numDmsJoined + numMessagesSent;\n  const denominator = numChannelsExist + numDmsExist + numMessagesExist;\n\n  data.users[userIndex].stats.involvementRate =\n    denominator === 0 ? 0 : Math.min(numerator / denominator, 1);\n\n  setData(data);\n}\n\nexport function updateUtilization() {\n  const data = getData();\n  // The workspace's utilization, which is a ratio of the number of users who have joined at least one channel/DM to the current total number of users, as defined by this pseudocode: numUsersWhoHaveJoinedAtLeastOneChannelOrDm / numUsers\n\n  let usersOneChannelDm = 0;\n\n  data.users.forEach((user) => {\n    const numChannelsJoined = user.stats.channelsJoined.length\n      ? user.stats.channelsJoined.slice(-1)[0].numChannelsJoined\n      : 0;\n\n    const numDmsJoined = user.stats.dmsJoined.length\n      ? user.stats.dmsJoined.slice(-1)[0].numDmsJoined\n      : 0;\n\n    if (numChannelsJoined > 0 || numDmsJoined > 0) {\n      usersOneChannelDm++;\n    }\n  });\n\n  const numUsers = data.users.length;\n\n  data.stats.utilizationRate =\n    numUsers === 0 ? 0 : Math.min(usersOneChannelDm / numUsers, 1);\n\n  setData(data);\n}\n\nexport function sendNotifDm(\n  user: userData,\n  message: string,\n  allMemberIds: number[],\n  dm: dmData\n) {\n  const data = getData();\n\n  // send notification if there are users tagged\n  // tagged: \"{User’s handle} tagged you in {channel/DM name}: {first 20 characters of the message}\"\n  const taggedUsers = message.match(/@([a-zA-Z0-9_]+)/g);\n  // avoid duplicate notifications\n  if (taggedUsers !== null) {\n    const notifiedUsers = new Set(); // keep track of notified users\n    taggedUsers.forEach((taggedUser) => {\n      const taggedUserIndex = data.users.findIndex(\n        (user) => user.handleStr === taggedUser.slice(1)\n      );\n      if (taggedUserIndex < 0) {\n        return;\n      }\n      const authUserId = data.users[taggedUserIndex].authUserId;\n      if (!allMemberIds.includes(authUserId)) {\n        return;\n      }\n      if (notifiedUsers.has(authUserId)) {\n        return; // skip notifying the same user again\n      }\n      const notification = {\n        channelId: -1,\n        dmId: dm.dmId,\n        notificationMessage: `${user.handleStr} tagged you in ${\n          dm.name\n        }: ${message.slice(0, 20)}`,\n      };\n      data.users[taggedUserIndex].notifications.push(notification);\n      notifiedUsers.add(authUserId); // add the user to the set of notified users\n    });\n  }\n\n  setData(data);\n}\n\nexport function sendNotifChannel(\n  user: userData,\n  message: string,\n  allMemberIds: number[],\n  channel: channelData\n) {\n  const data = getData();\n\n  // send notification if there are users tagged\n  // tagged: \"{User’s handle} tagged you in {channel/DM name}: {first 20 characters of the message}\"\n  const taggedUsers = message.match(/@([a-zA-Z0-9_]+)/g);\n  // avoid duplicate notifications\n  if (taggedUsers !== null) {\n    const notifiedUsers = new Set(); // keep track of notified users\n    taggedUsers.forEach((taggedUser) => {\n      const taggedUserIndex = data.users.findIndex(\n        (user) => user.handleStr === taggedUser.slice(1)\n      );\n      if (taggedUserIndex < 0) {\n        return;\n      }\n      const authUserId = data.users[taggedUserIndex].authUserId;\n      if (!allMemberIds.includes(authUserId)) {\n        return;\n      }\n      if (notifiedUsers.has(authUserId)) {\n        return; // skip notifying the same user again\n      }\n      const notification = {\n        channelId: channel.channelId,\n        dmId: -1,\n        notificationMessage: `${user.handleStr} tagged you in ${\n          channel.name\n        }: ${message.slice(0, 20)}`,\n      };\n      data.users[taggedUserIndex].notifications.push(notification);\n      notifiedUsers.add(authUserId); // add the user to the set of notified users\n    });\n  }\n\n  setData(data);\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f8e4d2b1e5771e58922dfe4b3edd879c9b52848b","contentHash":"c41fed58458215c191b593b1ac2aecc3eede0db43ac69036676c84dde4acd109"},"/Users/binvog/Documents/UNSW 2023T1/COMP1531/Indiv_projectbackend/iter4-project-backend/src/dataStore.ts":{"path":"/Users/binvog/Documents/UNSW 2023T1/COMP1531/Indiv_projectbackend/iter4-project-backend/src/dataStore.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":58}},"4":{"start":{"line":7,"column":11},"end":{"line":7,"column":41}},"5":{"start":{"line":8,"column":0},"end":{"line":20,"column":2}},"6":{"start":{"line":37,"column":21},"end":{"line":37,"column":72}},"7":{"start":{"line":38,"column":4},"end":{"line":38,"column":42}},"8":{"start":{"line":39,"column":4},"end":{"line":39,"column":24}},"9":{"start":{"line":41,"column":0},"end":{"line":41,"column":26}},"10":{"start":{"line":47,"column":4},"end":{"line":47,"column":27}},"11":{"start":{"line":48,"column":4},"end":{"line":48,"column":79}},"12":{"start":{"line":50,"column":0},"end":{"line":50,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"getData","decl":{"start":{"line":36,"column":9},"end":{"line":36,"column":16}},"loc":{"start":{"line":36,"column":19},"end":{"line":40,"column":1}},"line":36},"2":{"name":"setData","decl":{"start":{"line":46,"column":9},"end":{"line":46,"column":16}},"loc":{"start":{"line":46,"column":26},"end":{"line":49,"column":1}},"line":46}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":12568,"7":12568,"8":12568,"9":1,"10":5649,"11":5649,"12":1},"f":{"0":1,"1":12568,"2":5649},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/binvog/Documents/UNSW 2023T1/COMP1531/Indiv_projectbackend/iter4-project-backend/src/dataStore.ts","sources":["/Users/binvog/Documents/UNSW 2023T1/COMP1531/Indiv_projectbackend/iter4-project-backend/src/dataStore.ts"],"names":[],"mappings":";;;;;;AAAA,0CAAoB;AAUT,QAAA,IAAI,GAOX;IACF,KAAK,EAAE,EAAE;IACT,QAAQ,EAAE,EAAE;IACZ,EAAE,EAAE,EAAE;IACN,KAAK,EAAE;QACL,aAAa,EAAE,EAAE;QACjB,QAAQ,EAAE,EAAE;QACZ,aAAa,EAAE,EAAE;QACjB,eAAe,EAAE,CAAC;KACnB;IACD,MAAM,EAAE,sDAAsD;IAC9D,UAAU,EAAE,EAAE;CACf,CAAC;AAEF,iEAAiE;AAEjE;;;;;;;;;;;;EAYE;AAEF,+BAA+B;AAC/B,SAAgB,OAAO;IACrB,IAAM,UAAU,GAAG,YAAE,CAAC,YAAY,CAAC,gBAAgB,EAAE,MAAM,CAAC,CAAC;IAC7D,YAAI,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;IAC9B,OAAO,YAAI,CAAC;AACd,CAAC;AAJD,0BAIC;AAED,8EAA8E;AAC9E,iEAAiE;AACjE,oJAAoJ;AACpJ,6DAA6D;AAC7D,SAAgB,OAAO,CAAC,OAAgB;IACtC,YAAI,GAAG,OAAO,CAAC;IACf,YAAE,CAAC,aAAa,CAAC,gBAAgB,EAAE,IAAI,CAAC,SAAS,CAAC,YAAI,CAAC,CAAC,CAAC;AAC3D,CAAC;AAHD,0BAGC","sourcesContent":["import fs from 'fs';\nimport {\n  newData,\n  userData,\n  channelData,\n  dmData,\n  resetCode,\n  statsData,\n} from './interfaces';\n\nexport let data: {\n  users: userData[];\n  channels: channelData[];\n  dm: dmData[];\n  stats: statsData;\n  secret: string;\n  resetCodes: resetCode[];\n} = {\n  users: [],\n  channels: [],\n  dm: [],\n  stats: {\n    channelsExist: [],\n    dmsExist: [],\n    messagesExist: [],\n    utilizationRate: 0,\n  },\n  secret: 'KEVINHINDIEALMINAELSHIBO2394850-92840)_(*%&)_($#&()*',\n  resetCodes: [],\n};\n\n// YOU SHOULDNT NEED TO MODIFY THE FUNCTIONS BELOW IN ITERATION 1\n\n/*\nExample usage\n    let store = getData()\n    console.log(store) # Prints { 'names': ['Hayden', 'Tam', 'Rani', 'Giuliana', 'Rando'] }\n\n    names = store.names\n\n    names.pop()\n    names.push('Jake')\n\n    console.log(store) # Prints { 'names': ['Hayden', 'Tam', 'Rani', 'Giuliana', 'Jake'] }\n    setData(store)\n*/\n\n// Use get() to access the data\nexport function getData(): newData {\n  const dataString = fs.readFileSync('dataStore.json', 'utf8');\n  data = JSON.parse(dataString);\n  return data;\n}\n\n// Use set(newData) to pass in the entire data object, with modifications made\n// - Only needs to be used if you replace the data store entirely\n// - Javascript uses pass-by-reference for objects... read more here: https://stackoverflow.com/questions/13104494/does-javascript-pass-by-reference\n// Hint: this function might be useful to edit in iteration 2\nexport function setData(newData: newData) {\n  data = newData;\n  fs.writeFileSync('dataStore.json', JSON.stringify(data));\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"87b00764c148773992e10a6947b397cd0115ddba","contentHash":"5ce5cb4e2480c91c3dc794c1da6a77efce4ba4f6a7b3957c7156d8a441e6410d"},"/Users/binvog/Documents/UNSW 2023T1/COMP1531/Indiv_projectbackend/iter4-project-backend/src/channels.ts":{"path":"/Users/binvog/Documents/UNSW 2023T1/COMP1531/Indiv_projectbackend/iter4-project-backend/src/channels.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":87}},"4":{"start":{"line":7,"column":18},"end":{"line":7,"column":40}},"5":{"start":{"line":8,"column":23},"end":{"line":8,"column":50}},"6":{"start":{"line":9,"column":20},"end":{"line":9,"column":59}},"7":{"start":{"line":26,"column":15},"end":{"line":26,"column":41}},"8":{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},"9":{"start":{"line":29,"column":8},"end":{"line":29,"column":69}},"10":{"start":{"line":31,"column":15},"end":{"line":31,"column":58}},"11":{"start":{"line":33,"column":4},"end":{"line":35,"column":5}},"12":{"start":{"line":34,"column":8},"end":{"line":34,"column":63}},"13":{"start":{"line":36,"column":16},"end":{"line":36,"column":49}},"14":{"start":{"line":39,"column":4},"end":{"line":72,"column":7}},"15":{"start":{"line":73,"column":4},"end":{"line":76,"column":7}},"16":{"start":{"line":77,"column":4},"end":{"line":77,"column":35}},"17":{"start":{"line":79,"column":4},"end":{"line":79,"column":64}},"18":{"start":{"line":80,"column":4},"end":{"line":82,"column":6}},"19":{"start":{"line":84,"column":0},"end":{"line":84,"column":44}},"20":{"start":{"line":99,"column":15},"end":{"line":99,"column":41}},"21":{"start":{"line":100,"column":15},"end":{"line":100,"column":58}},"22":{"start":{"line":101,"column":4},"end":{"line":103,"column":5}},"23":{"start":{"line":102,"column":8},"end":{"line":102,"column":63}},"24":{"start":{"line":105,"column":27},"end":{"line":105,"column":42}},"25":{"start":{"line":106,"column":23},"end":{"line":106,"column":39}},"26":{"start":{"line":107,"column":4},"end":{"line":115,"column":7}},"27":{"start":{"line":108,"column":30},"end":{"line":108,"column":116}},"28":{"start":{"line":108,"column":74},"end":{"line":108,"column":113}},"29":{"start":{"line":109,"column":8},"end":{"line":114,"column":9}},"30":{"start":{"line":110,"column":12},"end":{"line":113,"column":15}},"31":{"start":{"line":116,"column":4},"end":{"line":116,"column":24}},"32":{"start":{"line":118,"column":0},"end":{"line":118,"column":40}},"33":{"start":{"line":126,"column":15},"end":{"line":126,"column":41}},"34":{"start":{"line":128,"column":15},"end":{"line":128,"column":58}},"35":{"start":{"line":129,"column":4},"end":{"line":131,"column":5}},"36":{"start":{"line":130,"column":8},"end":{"line":130,"column":63}},"37":{"start":{"line":132,"column":4},"end":{"line":137,"column":6}},"38":{"start":{"line":133,"column":51},"end":{"line":136,"column":11}},"39":{"start":{"line":139,"column":0},"end":{"line":139,"column":46}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"channelsCreateV1","decl":{"start":{"line":24,"column":9},"end":{"line":24,"column":25}},"loc":{"start":{"line":24,"column":49},"end":{"line":83,"column":1}},"line":24},"2":{"name":"channelsListV1","decl":{"start":{"line":98,"column":9},"end":{"line":98,"column":23}},"loc":{"start":{"line":98,"column":31},"end":{"line":117,"column":1}},"line":98},"3":{"name":"(anonymous_3)","decl":{"start":{"line":107,"column":26},"end":{"line":107,"column":27}},"loc":{"start":{"line":107,"column":45},"end":{"line":115,"column":5}},"line":107},"4":{"name":"(anonymous_4)","decl":{"start":{"line":108,"column":54},"end":{"line":108,"column":55}},"loc":{"start":{"line":108,"column":72},"end":{"line":108,"column":115}},"line":108},"5":{"name":"channelsListAllV1","decl":{"start":{"line":125,"column":9},"end":{"line":125,"column":26}},"loc":{"start":{"line":125,"column":34},"end":{"line":138,"column":1}},"line":125},"6":{"name":"(anonymous_6)","decl":{"start":{"line":133,"column":36},"end":{"line":133,"column":37}},"loc":{"start":{"line":133,"column":49},"end":{"line":136,"column":13}},"line":133}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},"type":"if","locations":[{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},{"start":{"line":28,"column":4},"end":{"line":30,"column":5}}],"line":28},"4":{"loc":{"start":{"line":28,"column":8},"end":{"line":28,"column":43}},"type":"binary-expr","locations":[{"start":{"line":28,"column":8},"end":{"line":28,"column":23}},{"start":{"line":28,"column":27},"end":{"line":28,"column":43}}],"line":28},"5":{"loc":{"start":{"line":33,"column":4},"end":{"line":35,"column":5}},"type":"if","locations":[{"start":{"line":33,"column":4},"end":{"line":35,"column":5}},{"start":{"line":33,"column":4},"end":{"line":35,"column":5}}],"line":33},"6":{"loc":{"start":{"line":101,"column":4},"end":{"line":103,"column":5}},"type":"if","locations":[{"start":{"line":101,"column":4},"end":{"line":103,"column":5}},{"start":{"line":101,"column":4},"end":{"line":103,"column":5}}],"line":101},"7":{"loc":{"start":{"line":109,"column":8},"end":{"line":114,"column":9}},"type":"if","locations":[{"start":{"line":109,"column":8},"end":{"line":114,"column":9}},{"start":{"line":109,"column":8},"end":{"line":114,"column":9}}],"line":109},"8":{"loc":{"start":{"line":129,"column":4},"end":{"line":131,"column":5}},"type":"if","locations":[{"start":{"line":129,"column":4},"end":{"line":131,"column":5}},{"start":{"line":129,"column":4},"end":{"line":131,"column":5}}],"line":129}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":391,"8":391,"9":2,"10":389,"11":389,"12":1,"13":388,"14":388,"15":388,"16":388,"17":388,"18":388,"19":1,"20":4,"21":4,"22":4,"23":1,"24":3,"25":3,"26":3,"27":6,"28":6,"29":6,"30":3,"31":3,"32":1,"33":4,"34":4,"35":4,"36":1,"37":3,"38":3,"39":1},"f":{"0":1,"1":391,"2":4,"3":6,"4":6,"5":4,"6":3},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[2,389],"4":[391,390],"5":[1,388],"6":[1,3],"7":[3,3],"8":[1,3]},"inputSourceMap":{"version":3,"file":"/Users/binvog/Documents/UNSW 2023T1/COMP1531/Indiv_projectbackend/iter4-project-backend/src/channels.ts","sources":["/Users/binvog/Documents/UNSW 2023T1/COMP1531/Indiv_projectbackend/iter4-project-backend/src/channels.ts"],"names":[],"mappings":"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","sourcesContent":["import { getData, setData } from './dataStore';\nimport {\n  getCurrentTime,\n  getUserByToken,\n  updateChannelInfo,\n} from './functionHelper';\nimport {\n  channelsCreateReturn,\n  channelsListReturn,\n  errorMessage,\n} from './interfaces';\nimport HTTPError from 'http-errors';\n/**\n * Creates a new channel with the given name,\n * that is either a public or private channel.\n * Then, pushes the created channel into\n * data.channels\n *\n * @param {string} token - the authenticated user token\n * @param {string} name - the channel's name\n * @param {boolean} isPublic - determines whether the channel is public or private\n * @returns {error: 'error message'} - if the channel's name' length is less than or more than 20\n *                                   = if the given userId is invalid\n * @returns {{channelId: number}} - returns the channelId object\n *\n */\nexport function channelsCreateV1(\n  token: string,\n  name: string,\n  isPublic: boolean\n): channelsCreateReturn | errorMessage {\n  // Gets the data from database\n  const data = getData();\n  // Returns error if name's length is less than 1 or more than 20\n  if (name.length < 1 || name.length > 20) {\n    throw HTTPError(400, 'Invalid name length');\n  }\n  const user = getUserByToken(token);\n  // Returns error if the given token is invalid\n  if (user === undefined) {\n    throw HTTPError(403, 'Invalid token');\n  }\n  const newId = Math.floor(Math.random() * 10000);\n  // Finds the user data\n  // Pushes the new channel's data into data\n  data.channels.push({\n    channelId: newId,\n    name: name,\n    isPublic: isPublic,\n    ownerMembers: [\n      {\n        uId: user.authUserId,\n        handleStr: user.handleStr,\n        email: user.email,\n        nameFirst: user.nameFirst,\n        nameLast: user.nameLast,\n        profileImgUrl: user.profileImgUrl,\n      },\n    ],\n    allMembers: [\n      {\n        uId: user.authUserId,\n        handleStr: user.handleStr,\n        email: user.email,\n        nameFirst: user.nameFirst,\n        nameLast: user.nameLast,\n        profileImgUrl: user.profileImgUrl,\n      },\n    ],\n    messages: [],\n    standUp: {\n      standUpActive: false,\n      standUpLength: 0,\n      standUpMessage: [],\n      standUpOwner: -1,\n    },\n    start: 0,\n    end: 0,\n  });\n\n  data.stats.channelsExist.push({\n    numChannelsExist: data.channels.length,\n    timeStamp: getCurrentTime(),\n  });\n\n  setData(data);\n\n  // updates user stats\n  updateChannelInfo(user.authUserId, 0);\n  return {\n    channelId: newId,\n  };\n}\n\n/**\n * Provides an array of all channels that an authorised\n * user is a member of by accessing the channel information\n * from data.channels. Then it returns the channelId\n * and name.\n *\n * @param {string} token - the authenticated user token\n *\n * @returns {error: 'error message'} - if the given authUserId is invalid\n * @returns {{channelId: number, name: string}} - returns the details of the channel\n * when successful\n *\n */\nexport function channelsListV1(\n  token: string\n): channelsListReturn | errorMessage {\n  const data = getData();\n  const user = getUserByToken(token);\n  if (user === undefined) {\n    throw HTTPError(403, 'Invalid token');\n  }\n\n  // need to access our data and pull out all of the channels linked to user\n  const authUserIdToFind = user.authUserId;\n  const userChannels: channelsListReturn = { channels: [] };\n\n  data.channels.forEach((channel) => {\n    const isUserInChannel = channel.allMembers.some(\n      (member) => member.uId === authUserIdToFind\n    );\n    if (isUserInChannel === true) {\n      userChannels.channels.push({\n        channelId: channel.channelId,\n        name: channel.name,\n      });\n    }\n  });\n  return userChannels;\n}\n\n/**\n *\n * @param {string} token - The authentication token of the user making the request.\n * @returns {channelsListReturn | errorMessage} Returns an object containing an array\n *                                              of channel objects with their IDs and names, or an error message if the token is invalid.\n */\nexport function channelsListAllV1(\n  token: string\n): channelsListReturn | errorMessage {\n  const data = getData();\n  // invalid token\n  const user = getUserByToken(token);\n  if (user === undefined) {\n    throw HTTPError(403, 'Invalid token');\n  }\n  return {\n    channels: data.channels.map((a) => ({\n      channelId: a.channelId,\n      name: a.name,\n    })),\n  };\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"eb5c95551c39aba6dbc666122f7837798688b660","contentHash":"495ac09b56297703b6f3475cb71f5d62e2af4753cccff0ca3105f94e0245e85b"},"/Users/binvog/Documents/UNSW 2023T1/COMP1531/Indiv_projectbackend/iter4-project-backend/src/channel.ts":{"path":"/Users/binvog/Documents/UNSW 2023T1/COMP1531/Indiv_projectbackend/iter4-project-backend/src/channel.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":196}},"4":{"start":{"line":7,"column":18},"end":{"line":7,"column":40}},"5":{"start":{"line":8,"column":23},"end":{"line":8,"column":50}},"6":{"start":{"line":9,"column":20},"end":{"line":9,"column":59}},"7":{"start":{"line":10,"column":16},"end":{"line":10,"column":36}},"8":{"start":{"line":25,"column":15},"end":{"line":25,"column":58}},"9":{"start":{"line":26,"column":18},"end":{"line":26,"column":62}},"10":{"start":{"line":27,"column":23},"end":{"line":27,"column":69}},"11":{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},"12":{"start":{"line":29,"column":8},"end":{"line":29,"column":68}},"13":{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},"14":{"start":{"line":32,"column":8},"end":{"line":32,"column":67}},"15":{"start":{"line":34,"column":25},"end":{"line":34,"column":48}},"16":{"start":{"line":35,"column":14},"end":{"line":35,"column":29}},"17":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"18":{"start":{"line":38,"column":8},"end":{"line":38,"column":85}},"19":{"start":{"line":41,"column":4},"end":{"line":43,"column":5}},"20":{"start":{"line":42,"column":8},"end":{"line":42,"column":96}},"21":{"start":{"line":44,"column":4},"end":{"line":54,"column":5}},"22":{"start":{"line":44,"column":18},"end":{"line":44,"column":19}},"23":{"start":{"line":44,"column":26},"end":{"line":44,"column":42}},"24":{"start":{"line":45,"column":22},"end":{"line":45,"column":28}},"25":{"start":{"line":46,"column":8},"end":{"line":53,"column":9}},"26":{"start":{"line":47,"column":12},"end":{"line":52,"column":13}},"27":{"start":{"line":48,"column":16},"end":{"line":48,"column":59}},"28":{"start":{"line":51,"column":16},"end":{"line":51,"column":60}},"29":{"start":{"line":56,"column":4},"end":{"line":56,"column":31}},"30":{"start":{"line":57,"column":4},"end":{"line":70,"column":5}},"31":{"start":{"line":58,"column":8},"end":{"line":62,"column":10}},"32":{"start":{"line":65,"column":8},"end":{"line":69,"column":10}},"33":{"start":{"line":72,"column":0},"end":{"line":72,"column":46}},"34":{"start":{"line":89,"column":15},"end":{"line":89,"column":41}},"35":{"start":{"line":91,"column":15},"end":{"line":91,"column":58}},"36":{"start":{"line":93,"column":18},"end":{"line":93,"column":62}},"37":{"start":{"line":94,"column":23},"end":{"line":94,"column":69}},"38":{"start":{"line":95,"column":4},"end":{"line":97,"column":5}},"39":{"start":{"line":96,"column":8},"end":{"line":96,"column":68}},"40":{"start":{"line":98,"column":4},"end":{"line":100,"column":5}},"41":{"start":{"line":99,"column":8},"end":{"line":99,"column":67}},"42":{"start":{"line":101,"column":14},"end":{"line":101,"column":29}},"43":{"start":{"line":102,"column":4},"end":{"line":104,"column":5}},"44":{"start":{"line":103,"column":8},"end":{"line":103,"column":76}},"45":{"start":{"line":106,"column":4},"end":{"line":108,"column":5}},"46":{"start":{"line":107,"column":8},"end":{"line":107,"column":71}},"47":{"start":{"line":109,"column":21},"end":{"line":109,"column":69}},"48":{"start":{"line":110,"column":4},"end":{"line":117,"column":7}},"49":{"start":{"line":118,"column":4},"end":{"line":118,"column":35}},"50":{"start":{"line":120,"column":4},"end":{"line":120,"column":64}},"51":{"start":{"line":121,"column":4},"end":{"line":121,"column":14}},"52":{"start":{"line":123,"column":0},"end":{"line":123,"column":38}},"53":{"start":{"line":139,"column":15},"end":{"line":139,"column":41}},"54":{"start":{"line":141,"column":15},"end":{"line":141,"column":58}},"55":{"start":{"line":142,"column":4},"end":{"line":144,"column":5}},"56":{"start":{"line":143,"column":8},"end":{"line":143,"column":63}},"57":{"start":{"line":145,"column":4},"end":{"line":147,"column":5}},"58":{"start":{"line":146,"column":8},"end":{"line":146,"column":93}},"59":{"start":{"line":148,"column":4},"end":{"line":150,"column":5}},"60":{"start":{"line":149,"column":8},"end":{"line":149,"column":84}},"61":{"start":{"line":151,"column":18},"end":{"line":151,"column":62}},"62":{"start":{"line":153,"column":23},"end":{"line":153,"column":69}},"63":{"start":{"line":154,"column":4},"end":{"line":156,"column":5}},"64":{"start":{"line":155,"column":8},"end":{"line":155,"column":77}},"65":{"start":{"line":157,"column":4},"end":{"line":160,"column":5}},"66":{"start":{"line":159,"column":8},"end":{"line":159,"column":78}},"67":{"start":{"line":162,"column":22},"end":{"line":162,"column":57}},"68":{"start":{"line":163,"column":21},"end":{"line":163,"column":69}},"69":{"start":{"line":165,"column":4},"end":{"line":172,"column":7}},"70":{"start":{"line":174,"column":23},"end":{"line":178,"column":5}},"71":{"start":{"line":179,"column":27},"end":{"line":179,"column":67}},"72":{"start":{"line":180,"column":4},"end":{"line":180,"column":66}},"73":{"start":{"line":181,"column":4},"end":{"line":181,"column":35}},"74":{"start":{"line":183,"column":4},"end":{"line":183,"column":52}},"75":{"start":{"line":184,"column":4},"end":{"line":184,"column":14}},"76":{"start":{"line":186,"column":0},"end":{"line":186,"column":42}},"77":{"start":{"line":209,"column":15},"end":{"line":209,"column":58}},"78":{"start":{"line":210,"column":4},"end":{"line":216,"column":5}},"79":{"start":{"line":211,"column":8},"end":{"line":211,"column":93}},"80":{"start":{"line":213,"column":9},"end":{"line":216,"column":5}},"81":{"start":{"line":215,"column":8},"end":{"line":215,"column":63}},"82":{"start":{"line":218,"column":4},"end":{"line":220,"column":5}},"83":{"start":{"line":219,"column":8},"end":{"line":219,"column":85}},"84":{"start":{"line":221,"column":21},"end":{"line":221,"column":65}},"85":{"start":{"line":222,"column":4},"end":{"line":227,"column":6}},"86":{"start":{"line":229,"column":0},"end":{"line":229,"column":44}},"87":{"start":{"line":245,"column":15},"end":{"line":245,"column":41}},"88":{"start":{"line":246,"column":15},"end":{"line":246,"column":58}},"89":{"start":{"line":247,"column":4},"end":{"line":249,"column":5}},"90":{"start":{"line":248,"column":8},"end":{"line":248,"column":93}},"91":{"start":{"line":250,"column":4},"end":{"line":252,"column":5}},"92":{"start":{"line":251,"column":8},"end":{"line":251,"column":63}},"93":{"start":{"line":253,"column":4},"end":{"line":255,"column":5}},"94":{"start":{"line":254,"column":8},"end":{"line":254,"column":99}},"95":{"start":{"line":257,"column":18},"end":{"line":257,"column":62}},"96":{"start":{"line":258,"column":24},"end":{"line":258,"column":81}},"97":{"start":{"line":259,"column":22},"end":{"line":259,"column":50}},"98":{"start":{"line":260,"column":4},"end":{"line":262,"column":5}},"99":{"start":{"line":261,"column":8},"end":{"line":261,"column":94}},"100":{"start":{"line":263,"column":23},"end":{"line":263,"column":104}},"101":{"start":{"line":263,"column":65},"end":{"line":263,"column":101}},"102":{"start":{"line":264,"column":25},"end":{"line":264,"column":133}},"103":{"start":{"line":264,"column":94},"end":{"line":264,"column":130}},"104":{"start":{"line":265,"column":26},"end":{"line":265,"column":132}},"105":{"start":{"line":265,"column":93},"end":{"line":265,"column":129}},"106":{"start":{"line":266,"column":4},"end":{"line":268,"column":5}},"107":{"start":{"line":267,"column":8},"end":{"line":267,"column":75}},"108":{"start":{"line":269,"column":4},"end":{"line":269,"column":70}},"109":{"start":{"line":270,"column":4},"end":{"line":270,"column":35}},"110":{"start":{"line":272,"column":4},"end":{"line":272,"column":64}},"111":{"start":{"line":273,"column":4},"end":{"line":273,"column":14}},"112":{"start":{"line":275,"column":0},"end":{"line":275,"column":40}},"113":{"start":{"line":284,"column":15},"end":{"line":284,"column":41}},"114":{"start":{"line":285,"column":15},"end":{"line":285,"column":58}},"115":{"start":{"line":286,"column":19},"end":{"line":286,"column":54}},"116":{"start":{"line":288,"column":4},"end":{"line":290,"column":5}},"117":{"start":{"line":289,"column":8},"end":{"line":289,"column":93}},"118":{"start":{"line":291,"column":4},"end":{"line":293,"column":5}},"119":{"start":{"line":292,"column":8},"end":{"line":292,"column":61}},"120":{"start":{"line":294,"column":4},"end":{"line":296,"column":5}},"121":{"start":{"line":295,"column":8},"end":{"line":295,"column":63}},"122":{"start":{"line":297,"column":4},"end":{"line":299,"column":5}},"123":{"start":{"line":298,"column":8},"end":{"line":298,"column":85}},"124":{"start":{"line":300,"column":4},"end":{"line":302,"column":5}},"125":{"start":{"line":301,"column":8},"end":{"line":301,"column":85}},"126":{"start":{"line":303,"column":4},"end":{"line":305,"column":5}},"127":{"start":{"line":304,"column":8},"end":{"line":304,"column":101}},"128":{"start":{"line":306,"column":4},"end":{"line":308,"column":5}},"129":{"start":{"line":307,"column":8},"end":{"line":307,"column":92}},"130":{"start":{"line":310,"column":23},"end":{"line":310,"column":93}},"131":{"start":{"line":310,"column":57},"end":{"line":310,"column":90}},"132":{"start":{"line":311,"column":4},"end":{"line":318,"column":7}},"133":{"start":{"line":319,"column":4},"end":{"line":319,"column":35}},"134":{"start":{"line":320,"column":4},"end":{"line":320,"column":14}},"135":{"start":{"line":322,"column":0},"end":{"line":322,"column":46}},"136":{"start":{"line":331,"column":15},"end":{"line":331,"column":41}},"137":{"start":{"line":332,"column":15},"end":{"line":332,"column":58}},"138":{"start":{"line":333,"column":19},"end":{"line":333,"column":54}},"139":{"start":{"line":334,"column":23},"end":{"line":334,"column":93}},"140":{"start":{"line":334,"column":57},"end":{"line":334,"column":90}},"141":{"start":{"line":335,"column":4},"end":{"line":337,"column":5}},"142":{"start":{"line":336,"column":8},"end":{"line":336,"column":93}},"143":{"start":{"line":339,"column":4},"end":{"line":341,"column":5}},"144":{"start":{"line":340,"column":8},"end":{"line":340,"column":61}},"145":{"start":{"line":343,"column":4},"end":{"line":345,"column":5}},"146":{"start":{"line":344,"column":8},"end":{"line":344,"column":63}},"147":{"start":{"line":347,"column":4},"end":{"line":349,"column":5}},"148":{"start":{"line":348,"column":8},"end":{"line":348,"column":81}},"149":{"start":{"line":351,"column":4},"end":{"line":353,"column":5}},"150":{"start":{"line":352,"column":8},"end":{"line":352,"column":85}},"151":{"start":{"line":355,"column":4},"end":{"line":357,"column":5}},"152":{"start":{"line":356,"column":8},"end":{"line":356,"column":97}},"153":{"start":{"line":360,"column":4},"end":{"line":362,"column":5}},"154":{"start":{"line":361,"column":8},"end":{"line":361,"column":92}},"155":{"start":{"line":364,"column":4},"end":{"line":366,"column":5}},"156":{"start":{"line":365,"column":8},"end":{"line":365,"column":86}},"157":{"start":{"line":368,"column":21},"end":{"line":368,"column":89}},"158":{"start":{"line":369,"column":4},"end":{"line":369,"column":52}},"159":{"start":{"line":370,"column":4},"end":{"line":370,"column":35}},"160":{"start":{"line":371,"column":4},"end":{"line":371,"column":14}},"161":{"start":{"line":373,"column":0},"end":{"line":373,"column":52}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"channelMessagesV1","decl":{"start":{"line":24,"column":9},"end":{"line":24,"column":26}},"loc":{"start":{"line":24,"column":52},"end":{"line":71,"column":1}},"line":24},"2":{"name":"channelJoinV1","decl":{"start":{"line":88,"column":9},"end":{"line":88,"column":22}},"loc":{"start":{"line":88,"column":41},"end":{"line":122,"column":1}},"line":88},"3":{"name":"channelInviteV1","decl":{"start":{"line":138,"column":9},"end":{"line":138,"column":24}},"loc":{"start":{"line":138,"column":48},"end":{"line":185,"column":1}},"line":138},"4":{"name":"channelDetailsV1","decl":{"start":{"line":204,"column":9},"end":{"line":204,"column":25}},"loc":{"start":{"line":204,"column":44},"end":{"line":228,"column":1}},"line":204},"5":{"name":"channelLeaveV1","decl":{"start":{"line":244,"column":9},"end":{"line":244,"column":23}},"loc":{"start":{"line":244,"column":42},"end":{"line":274,"column":1}},"line":244},"6":{"name":"(anonymous_6)","decl":{"start":{"line":263,"column":47},"end":{"line":263,"column":48}},"loc":{"start":{"line":263,"column":63},"end":{"line":263,"column":103}},"line":263},"7":{"name":"(anonymous_7)","decl":{"start":{"line":264,"column":76},"end":{"line":264,"column":77}},"loc":{"start":{"line":264,"column":92},"end":{"line":264,"column":132}},"line":264},"8":{"name":"(anonymous_8)","decl":{"start":{"line":265,"column":75},"end":{"line":265,"column":76}},"loc":{"start":{"line":265,"column":91},"end":{"line":265,"column":131}},"line":265},"9":{"name":"channelAddOwnerV1","decl":{"start":{"line":283,"column":9},"end":{"line":283,"column":26}},"loc":{"start":{"line":283,"column":50},"end":{"line":321,"column":1}},"line":283},"10":{"name":"(anonymous_10)","decl":{"start":{"line":310,"column":42},"end":{"line":310,"column":43}},"loc":{"start":{"line":310,"column":55},"end":{"line":310,"column":92}},"line":310},"11":{"name":"channelRemoveOwnerV1","decl":{"start":{"line":330,"column":9},"end":{"line":330,"column":29}},"loc":{"start":{"line":330,"column":53},"end":{"line":372,"column":1}},"line":330},"12":{"name":"(anonymous_12)","decl":{"start":{"line":334,"column":42},"end":{"line":334,"column":43}},"loc":{"start":{"line":334,"column":55},"end":{"line":334,"column":92}},"line":334}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},"type":"if","locations":[{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},{"start":{"line":28,"column":4},"end":{"line":30,"column":5}}],"line":28},"4":{"loc":{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},"type":"if","locations":[{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},{"start":{"line":31,"column":4},"end":{"line":33,"column":5}}],"line":31},"5":{"loc":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},{"start":{"line":37,"column":4},"end":{"line":39,"column":5}}],"line":37},"6":{"loc":{"start":{"line":41,"column":4},"end":{"line":43,"column":5}},"type":"if","locations":[{"start":{"line":41,"column":4},"end":{"line":43,"column":5}},{"start":{"line":41,"column":4},"end":{"line":43,"column":5}}],"line":41},"7":{"loc":{"start":{"line":46,"column":8},"end":{"line":53,"column":9}},"type":"if","locations":[{"start":{"line":46,"column":8},"end":{"line":53,"column":9}},{"start":{"line":46,"column":8},"end":{"line":53,"column":9}}],"line":46},"8":{"loc":{"start":{"line":47,"column":12},"end":{"line":52,"column":13}},"type":"if","locations":[{"start":{"line":47,"column":12},"end":{"line":52,"column":13}},{"start":{"line":47,"column":12},"end":{"line":52,"column":13}}],"line":47},"9":{"loc":{"start":{"line":57,"column":4},"end":{"line":70,"column":5}},"type":"if","locations":[{"start":{"line":57,"column":4},"end":{"line":70,"column":5}},{"start":{"line":57,"column":4},"end":{"line":70,"column":5}}],"line":57},"10":{"loc":{"start":{"line":95,"column":4},"end":{"line":97,"column":5}},"type":"if","locations":[{"start":{"line":95,"column":4},"end":{"line":97,"column":5}},{"start":{"line":95,"column":4},"end":{"line":97,"column":5}}],"line":95},"11":{"loc":{"start":{"line":98,"column":4},"end":{"line":100,"column":5}},"type":"if","locations":[{"start":{"line":98,"column":4},"end":{"line":100,"column":5}},{"start":{"line":98,"column":4},"end":{"line":100,"column":5}}],"line":98},"12":{"loc":{"start":{"line":102,"column":4},"end":{"line":104,"column":5}},"type":"if","locations":[{"start":{"line":102,"column":4},"end":{"line":104,"column":5}},{"start":{"line":102,"column":4},"end":{"line":104,"column":5}}],"line":102},"13":{"loc":{"start":{"line":106,"column":4},"end":{"line":108,"column":5}},"type":"if","locations":[{"start":{"line":106,"column":4},"end":{"line":108,"column":5}},{"start":{"line":106,"column":4},"end":{"line":108,"column":5}}],"line":106},"14":{"loc":{"start":{"line":106,"column":8},"end":{"line":106,"column":62}},"type":"binary-expr","locations":[{"start":{"line":106,"column":8},"end":{"line":106,"column":34}},{"start":{"line":106,"column":38},"end":{"line":106,"column":62}}],"line":106},"15":{"loc":{"start":{"line":142,"column":4},"end":{"line":144,"column":5}},"type":"if","locations":[{"start":{"line":142,"column":4},"end":{"line":144,"column":5}},{"start":{"line":142,"column":4},"end":{"line":144,"column":5}}],"line":142},"16":{"loc":{"start":{"line":145,"column":4},"end":{"line":147,"column":5}},"type":"if","locations":[{"start":{"line":145,"column":4},"end":{"line":147,"column":5}},{"start":{"line":145,"column":4},"end":{"line":147,"column":5}}],"line":145},"17":{"loc":{"start":{"line":148,"column":4},"end":{"line":150,"column":5}},"type":"if","locations":[{"start":{"line":148,"column":4},"end":{"line":150,"column":5}},{"start":{"line":148,"column":4},"end":{"line":150,"column":5}}],"line":148},"18":{"loc":{"start":{"line":154,"column":4},"end":{"line":156,"column":5}},"type":"if","locations":[{"start":{"line":154,"column":4},"end":{"line":156,"column":5}},{"start":{"line":154,"column":4},"end":{"line":156,"column":5}}],"line":154},"19":{"loc":{"start":{"line":157,"column":4},"end":{"line":160,"column":5}},"type":"if","locations":[{"start":{"line":157,"column":4},"end":{"line":160,"column":5}},{"start":{"line":157,"column":4},"end":{"line":160,"column":5}}],"line":157},"20":{"loc":{"start":{"line":157,"column":8},"end":{"line":158,"column":56}},"type":"binary-expr","locations":[{"start":{"line":157,"column":8},"end":{"line":157,"column":50}},{"start":{"line":158,"column":8},"end":{"line":158,"column":56}}],"line":157},"21":{"loc":{"start":{"line":210,"column":4},"end":{"line":216,"column":5}},"type":"if","locations":[{"start":{"line":210,"column":4},"end":{"line":216,"column":5}},{"start":{"line":210,"column":4},"end":{"line":216,"column":5}}],"line":210},"22":{"loc":{"start":{"line":213,"column":9},"end":{"line":216,"column":5}},"type":"if","locations":[{"start":{"line":213,"column":9},"end":{"line":216,"column":5}},{"start":{"line":213,"column":9},"end":{"line":216,"column":5}}],"line":213},"23":{"loc":{"start":{"line":218,"column":4},"end":{"line":220,"column":5}},"type":"if","locations":[{"start":{"line":218,"column":4},"end":{"line":220,"column":5}},{"start":{"line":218,"column":4},"end":{"line":220,"column":5}}],"line":218},"24":{"loc":{"start":{"line":247,"column":4},"end":{"line":249,"column":5}},"type":"if","locations":[{"start":{"line":247,"column":4},"end":{"line":249,"column":5}},{"start":{"line":247,"column":4},"end":{"line":249,"column":5}}],"line":247},"25":{"loc":{"start":{"line":250,"column":4},"end":{"line":252,"column":5}},"type":"if","locations":[{"start":{"line":250,"column":4},"end":{"line":252,"column":5}},{"start":{"line":250,"column":4},"end":{"line":252,"column":5}}],"line":250},"26":{"loc":{"start":{"line":253,"column":4},"end":{"line":255,"column":5}},"type":"if","locations":[{"start":{"line":253,"column":4},"end":{"line":255,"column":5}},{"start":{"line":253,"column":4},"end":{"line":255,"column":5}}],"line":253},"27":{"loc":{"start":{"line":260,"column":4},"end":{"line":262,"column":5}},"type":"if","locations":[{"start":{"line":260,"column":4},"end":{"line":262,"column":5}},{"start":{"line":260,"column":4},"end":{"line":262,"column":5}}],"line":260},"28":{"loc":{"start":{"line":260,"column":8},"end":{"line":260,"column":56}},"type":"binary-expr","locations":[{"start":{"line":260,"column":8},"end":{"line":260,"column":21}},{"start":{"line":260,"column":25},"end":{"line":260,"column":56}}],"line":260},"29":{"loc":{"start":{"line":266,"column":4},"end":{"line":268,"column":5}},"type":"if","locations":[{"start":{"line":266,"column":4},"end":{"line":268,"column":5}},{"start":{"line":266,"column":4},"end":{"line":268,"column":5}}],"line":266},"30":{"loc":{"start":{"line":288,"column":4},"end":{"line":290,"column":5}},"type":"if","locations":[{"start":{"line":288,"column":4},"end":{"line":290,"column":5}},{"start":{"line":288,"column":4},"end":{"line":290,"column":5}}],"line":288},"31":{"loc":{"start":{"line":291,"column":4},"end":{"line":293,"column":5}},"type":"if","locations":[{"start":{"line":291,"column":4},"end":{"line":293,"column":5}},{"start":{"line":291,"column":4},"end":{"line":293,"column":5}}],"line":291},"32":{"loc":{"start":{"line":294,"column":4},"end":{"line":296,"column":5}},"type":"if","locations":[{"start":{"line":294,"column":4},"end":{"line":296,"column":5}},{"start":{"line":294,"column":4},"end":{"line":296,"column":5}}],"line":294},"33":{"loc":{"start":{"line":297,"column":4},"end":{"line":299,"column":5}},"type":"if","locations":[{"start":{"line":297,"column":4},"end":{"line":299,"column":5}},{"start":{"line":297,"column":4},"end":{"line":299,"column":5}}],"line":297},"34":{"loc":{"start":{"line":300,"column":4},"end":{"line":302,"column":5}},"type":"if","locations":[{"start":{"line":300,"column":4},"end":{"line":302,"column":5}},{"start":{"line":300,"column":4},"end":{"line":302,"column":5}}],"line":300},"35":{"loc":{"start":{"line":303,"column":4},"end":{"line":305,"column":5}},"type":"if","locations":[{"start":{"line":303,"column":4},"end":{"line":305,"column":5}},{"start":{"line":303,"column":4},"end":{"line":305,"column":5}}],"line":303},"36":{"loc":{"start":{"line":306,"column":4},"end":{"line":308,"column":5}},"type":"if","locations":[{"start":{"line":306,"column":4},"end":{"line":308,"column":5}},{"start":{"line":306,"column":4},"end":{"line":308,"column":5}}],"line":306},"37":{"loc":{"start":{"line":306,"column":8},"end":{"line":306,"column":101}},"type":"binary-expr","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":73}},{"start":{"line":306,"column":77},"end":{"line":306,"column":101}}],"line":306},"38":{"loc":{"start":{"line":335,"column":4},"end":{"line":337,"column":5}},"type":"if","locations":[{"start":{"line":335,"column":4},"end":{"line":337,"column":5}},{"start":{"line":335,"column":4},"end":{"line":337,"column":5}}],"line":335},"39":{"loc":{"start":{"line":339,"column":4},"end":{"line":341,"column":5}},"type":"if","locations":[{"start":{"line":339,"column":4},"end":{"line":341,"column":5}},{"start":{"line":339,"column":4},"end":{"line":341,"column":5}}],"line":339},"40":{"loc":{"start":{"line":343,"column":4},"end":{"line":345,"column":5}},"type":"if","locations":[{"start":{"line":343,"column":4},"end":{"line":345,"column":5}},{"start":{"line":343,"column":4},"end":{"line":345,"column":5}}],"line":343},"41":{"loc":{"start":{"line":347,"column":4},"end":{"line":349,"column":5}},"type":"if","locations":[{"start":{"line":347,"column":4},"end":{"line":349,"column":5}},{"start":{"line":347,"column":4},"end":{"line":349,"column":5}}],"line":347},"42":{"loc":{"start":{"line":351,"column":4},"end":{"line":353,"column":5}},"type":"if","locations":[{"start":{"line":351,"column":4},"end":{"line":353,"column":5}},{"start":{"line":351,"column":4},"end":{"line":353,"column":5}}],"line":351},"43":{"loc":{"start":{"line":355,"column":4},"end":{"line":357,"column":5}},"type":"if","locations":[{"start":{"line":355,"column":4},"end":{"line":357,"column":5}},{"start":{"line":355,"column":4},"end":{"line":357,"column":5}}],"line":355},"44":{"loc":{"start":{"line":360,"column":4},"end":{"line":362,"column":5}},"type":"if","locations":[{"start":{"line":360,"column":4},"end":{"line":362,"column":5}},{"start":{"line":360,"column":4},"end":{"line":362,"column":5}}],"line":360},"45":{"loc":{"start":{"line":360,"column":8},"end":{"line":360,"column":101}},"type":"binary-expr","locations":[{"start":{"line":360,"column":8},"end":{"line":360,"column":73}},{"start":{"line":360,"column":77},"end":{"line":360,"column":101}}],"line":360},"46":{"loc":{"start":{"line":364,"column":4},"end":{"line":366,"column":5}},"type":"if","locations":[{"start":{"line":364,"column":4},"end":{"line":366,"column":5}},{"start":{"line":364,"column":4},"end":{"line":366,"column":5}}],"line":364}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":25,"9":25,"10":25,"11":25,"12":1,"13":24,"14":1,"15":23,"16":23,"17":23,"18":1,"19":22,"20":1,"21":21,"22":21,"23":21,"24":314,"25":314,"26":3,"27":2,"28":1,"29":21,"30":21,"31":19,"32":2,"33":1,"34":76,"35":76,"36":76,"37":76,"38":76,"39":2,"40":74,"41":2,"42":72,"43":72,"44":2,"45":70,"46":3,"47":67,"48":67,"49":67,"50":67,"51":67,"52":1,"53":16,"54":16,"55":16,"56":3,"57":13,"58":2,"59":11,"60":2,"61":9,"62":9,"63":9,"64":2,"65":7,"66":2,"67":5,"68":5,"69":5,"70":5,"71":5,"72":5,"73":5,"74":5,"75":5,"76":1,"77":22,"78":22,"79":1,"80":21,"81":1,"82":20,"83":3,"84":17,"85":17,"86":1,"87":15,"88":15,"89":15,"90":2,"91":13,"92":2,"93":11,"94":2,"95":9,"96":9,"97":9,"98":9,"99":1,"100":8,"101":11,"102":8,"103":8,"104":8,"105":10,"106":8,"107":6,"108":8,"109":8,"110":8,"111":8,"112":1,"113":19,"114":19,"115":19,"116":19,"117":2,"118":17,"119":2,"120":15,"121":2,"122":13,"123":2,"124":11,"125":1,"126":10,"127":2,"128":8,"129":2,"130":6,"131":12,"132":6,"133":6,"134":6,"135":1,"136":18,"137":18,"138":18,"139":18,"140":39,"141":18,"142":2,"143":16,"144":2,"145":14,"146":2,"147":12,"148":2,"149":10,"150":3,"151":7,"152":1,"153":6,"154":1,"155":5,"156":3,"157":2,"158":2,"159":2,"160":2,"161":1},"f":{"0":1,"1":25,"2":76,"3":16,"4":22,"5":15,"6":11,"7":8,"8":10,"9":19,"10":12,"11":18,"12":39},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[1,24],"4":[1,23],"5":[1,22],"6":[1,21],"7":[3,311],"8":[2,1],"9":[19,2],"10":[2,74],"11":[2,72],"12":[2,70],"13":[3,67],"14":[70,7],"15":[3,13],"16":[2,11],"17":[2,9],"18":[2,7],"19":[2,5],"20":[7,7],"21":[1,21],"22":[1,20],"23":[3,17],"24":[2,13],"25":[2,11],"26":[2,9],"27":[1,8],"28":[9,1],"29":[6,2],"30":[2,17],"31":[2,15],"32":[2,13],"33":[2,11],"34":[1,10],"35":[2,8],"36":[2,6],"37":[8,3],"38":[2,16],"39":[2,14],"40":[2,12],"41":[2,10],"42":[3,7],"43":[1,6],"44":[1,5],"45":[6,3],"46":[3,2]},"inputSourceMap":{"version":3,"file":"/Users/binvog/Documents/UNSW 2023T1/COMP1531/Indiv_projectbackend/iter4-project-backend/src/channel.ts","sources":["/Users/binvog/Documents/UNSW 2023T1/COMP1531/Indiv_projectbackend/iter4-project-backend/src/channel.ts"],"names":[],"mappings":";;;;;;AAAA,yCAA+C;AAC/C,mDAa0B;AAE1B,4DAAoC;AACpC,qCAA4C;AAE5C;;;;;;;;;;;;GAYG;AACH,SAAgB,iBAAiB,CAC/B,KAAa,EACb,SAAiB,EACjB,KAAa;IAEb,IAAM,IAAI,GAAG,IAAA,+BAAc,EAAC,KAAK,CAAC,CAAC;IAEnC,IAAM,OAAO,GAAG,IAAA,4BAAW,EAAC,SAAS,CAAC,CAAC;IAEvC,IAAM,YAAY,GAAG,IAAA,gCAAe,EAAC,OAAO,CAAC,CAAC;IAE9C,IAAI,IAAI,KAAK,SAAS,EAAE;QACtB,MAAM,IAAA,qBAAS,EAAC,GAAG,EAAE,oBAAoB,CAAC,CAAC;KAC5C;IAED,IAAI,OAAO,KAAK,SAAS,EAAE;QACzB,MAAM,IAAA,qBAAS,EAAC,GAAG,EAAE,mBAAmB,CAAC,CAAC;KAC3C;IACD,IAAM,cAAc,GAAG,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC;IAC/C,IAAM,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC;IAC5B,mDAAmD;IACnD,IAAI,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,KAAK,EAAE;QACxC,MAAM,IAAA,qBAAS,EAAC,GAAG,EAAE,qCAAqC,CAAC,CAAC;KAC7D;IACD,0DAA0D;IAC1D,IAAI,KAAK,GAAG,cAAc,EAAE;QAC1B,MAAM,IAAA,qBAAS,EAAC,GAAG,EAAE,gDAAgD,CAAC,CAAC;KACxE;IAED,KAAsB,UAAgB,EAAhB,KAAA,OAAO,CAAC,QAAQ,EAAhB,cAAgB,EAAhB,IAAgB,EAAE;QAAnC,IAAM,OAAO,SAAA;QAChB,IAAI,OAAO,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;YAC/B,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;gBACpD,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,iBAAiB,GAAG,IAAI,CAAC;aAC5C;iBAAM;gBACL,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,iBAAiB,GAAG,KAAK,CAAC;aAC7C;SACF;KACF;IACD,kBAAkB;IAClB,OAAO,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;IAE3B,IAAI,KAAK,GAAG,EAAE,GAAG,cAAc,EAAE;QAC/B,OAAO;YACL,QAAQ,EAAE,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC;YACvC,KAAK,EAAE,KAAK;YACZ,GAAG,EAAE,CAAC,CAAC;SACR,CAAC;KACH;SAAM;QACL,OAAO;YACL,QAAQ,EAAE,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,GAAG,EAAE,CAAC;YACnD,KAAK,EAAE,KAAK;YACZ,GAAG,EAAE,KAAK,GAAG,EAAE;SAChB,CAAC;KACH;AACH,CAAC;AAtDD,8CAsDC;AAED;;;;;;;;;;;;;;GAcG;AAEH,SAAgB,aAAa,CAC3B,KAAa,EACb,SAAiB;IAEjB,IAAM,IAAI,GAAG,IAAA,mBAAO,GAAE,CAAC;IACvB,wCAAwC;IACxC,IAAM,IAAI,GAAG,IAAA,+BAAc,EAAC,KAAK,CAAC,CAAC;IAEnC,mDAAmD;IACnD,IAAM,OAAO,GAAG,IAAA,4BAAW,EAAC,SAAS,CAAC,CAAC;IAEvC,IAAM,YAAY,GAAG,IAAA,gCAAe,EAAC,OAAO,CAAC,CAAC;IAE9C,IAAI,IAAI,KAAK,SAAS,EAAE;QACtB,MAAM,IAAA,qBAAS,EAAC,GAAG,EAAE,oBAAoB,CAAC,CAAC;KAC5C;IAED,IAAI,OAAO,KAAK,SAAS,EAAE;QACzB,MAAM,IAAA,qBAAS,EAAC,GAAG,EAAE,mBAAmB,CAAC,CAAC;KAC3C;IAED,IAAM,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC;IAE5B,IAAI,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE;QACvC,MAAM,IAAA,qBAAS,EAAC,GAAG,EAAE,4BAA4B,CAAC,CAAC;KACpD;IAED,UAAU;IACV,IAAI,OAAO,CAAC,QAAQ,KAAK,KAAK,IAAI,IAAI,CAAC,aAAa,KAAK,CAAC,EAAE;QAC1D,MAAM,IAAA,qBAAS,EAAC,GAAG,EAAE,uBAAuB,CAAC,CAAC;KAC/C;IACD,IAAM,UAAU,GAAG,IAAA,gCAAe,EAAC,SAAS,CAAC,CAAC;IAE9C,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC;QACxC,GAAG,EAAE,IAAI,CAAC,UAAU;QACpB,KAAK,EAAE,IAAI,CAAC,KAAK;QACjB,SAAS,EAAE,IAAI,CAAC,SAAS;QACzB,QAAQ,EAAE,IAAI,CAAC,QAAQ;QACvB,SAAS,EAAE,IAAI,CAAC,SAAS;QACzB,aAAa,EAAE,IAAI,CAAC,aAAa;KAClC,CAAC,CAAC;IAEH,IAAA,mBAAO,EAAC,IAAI,CAAC,CAAC;IAEd,qBAAqB;IACrB,IAAA,kCAAiB,EAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;IAEtC,OAAO,EAAE,CAAC;AACZ,CAAC;AAhDD,sCAgDC;AACD;;;;;;;;;;;;;GAaG;AACH,SAAgB,eAAe,CAAC,KAAa,EAAE,SAAiB,EAAE,GAAW;IAC3E,IAAM,IAAI,GAAG,IAAA,mBAAO,GAAE,CAAC;IAEvB,cAAc;IACd,IAAM,IAAI,GAAG,IAAA,+BAAc,EAAC,KAAK,CAAC,CAAC;IACnC,IAAI,IAAI,KAAK,SAAS,EAAE;QACtB,MAAM,IAAA,qBAAS,EAAC,GAAG,EAAE,eAAe,CAAC,CAAC;KACvC;IACD,IAAI,CAAC,IAAA,0BAAS,EAAC,SAAS,CAAC,EAAE;QACzB,MAAM,IAAA,qBAAS,EAAC,GAAG,EAAE,6CAA6C,CAAC,CAAC;KACrE;IACD,IAAI,CAAC,IAAA,uBAAM,EAAC,GAAG,CAAC,EAAE;QAChB,MAAM,IAAA,qBAAS,EAAC,GAAG,EAAE,oCAAoC,CAAC,CAAC;KAC5D;IACD,IAAM,OAAO,GAAG,IAAA,4BAAW,EAAC,SAAS,CAAC,CAAC;IAEvC,8BAA8B;IAC9B,IAAM,YAAY,GAAG,IAAA,gCAAe,EAAC,OAAO,CAAC,CAAC;IAE9C,IAAI,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE;QACvC,MAAM,IAAA,qBAAS,EAAC,GAAG,EAAE,6BAA6B,CAAC,CAAC;KACrD;IAED,IACE,IAAA,0BAAS,EAAC,SAAS,CAAC;QACpB,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,KAAK,EAChD;QACA,MAAM,IAAA,qBAAS,EAAC,GAAG,EAAE,8BAA8B,CAAC,CAAC;KACtD;IACD,8BAA8B;IAC9B,IAAM,WAAW,GAAG,IAAA,yBAAQ,EAAC,GAAG,CAAC,CAAC;IAClC,IAAM,UAAU,GAAG,IAAA,gCAAe,EAAC,SAAS,CAAC,CAAC;IAE9C,+BAA+B;IAC/B,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC;QACxC,GAAG,EAAE,WAAW,CAAC,UAAU;QAC3B,KAAK,EAAE,WAAW,CAAC,KAAK;QACxB,SAAS,EAAE,WAAW,CAAC,SAAS;QAChC,QAAQ,EAAE,WAAW,CAAC,QAAQ;QAC9B,SAAS,EAAE,WAAW,CAAC,SAAS;QAChC,aAAa,EAAE,WAAW,CAAC,aAAa;KACzC,CAAC,CAAC;IAEH,uCAAuC;IACvC,IAAM,YAAY,GAAG;QACnB,SAAS,EAAE,SAAS;QACpB,IAAI,EAAE,CAAC,CAAC;QACR,mBAAmB,EAAE,UAAG,IAAI,CAAC,SAAS,2BAAiB,OAAO,CAAC,IAAI,CAAE;KACtE,CAAC;IAEF,IAAM,gBAAgB,GAAG,IAAA,8BAAa,EAAC,GAAG,CAAC,CAAC;IAC5C,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAE9D,IAAA,mBAAO,EAAC,IAAI,CAAC,CAAC;IAEd,4BAA4B;IAC5B,IAAA,kCAAiB,EAAC,GAAG,EAAE,CAAC,CAAC,CAAC;IAC1B,OAAO,EAAE,CAAC;AACZ,CAAC;AA1DD,0CA0DC;AAED;;;;;;;;;;;;;;;;GAgBG;AACH,SAAgB,gBAAgB,CAAC,KAAa,EAAE,SAAiB;IAC/D,iDAAiD;IACjD,gBAAgB;IAChB,sBAAsB;IACtB,0BAA0B;IAC1B,IAAM,IAAI,GAAG,IAAA,+BAAc,EAAC,KAAK,CAAC,CAAC;IACnC,IAAI,CAAC,IAAA,0BAAS,EAAC,SAAS,CAAC,EAAE;QACzB,MAAM,IAAA,qBAAS,EAAC,GAAG,EAAE,6CAA6C,CAAC,CAAC;KACrE;SAAM,IAAI,IAAI,KAAK,SAAS,EAAE;QAC7B,qCAAqC;QACrC,MAAM,IAAA,qBAAS,EAAC,GAAG,EAAE,eAAe,CAAC,CAAC;KACvC;IACD,6CAA6C;IAC7C,IAAI,CAAC,IAAA,gCAAe,EAAC,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,EAAE;QAChD,MAAM,IAAA,qBAAS,EAAC,GAAG,EAAE,qCAAqC,CAAC,CAAC;KAC7D;IACD,IAAM,UAAU,GAAG,IAAA,4BAAW,EAAC,SAAS,CAAC,CAAC;IAC1C,OAAO;QACL,IAAI,EAAE,UAAU,CAAC,IAAI;QACrB,QAAQ,EAAE,UAAU,CAAC,QAAQ;QAC7B,YAAY,EAAE,UAAU,CAAC,YAAY;QACrC,UAAU,EAAE,UAAU,CAAC,UAAU;KAClC,CAAC;AACJ,CAAC;AAvBD,4CAuBC;AAED;;;;;;;;;;;;;GAaG;AACH,SAAgB,cAAc,CAAC,KAAa,EAAE,SAAiB;IAC7D,IAAM,IAAI,GAAG,IAAA,mBAAO,GAAE,CAAC;IACvB,IAAM,IAAI,GAAG,IAAA,+BAAc,EAAC,KAAK,CAAC,CAAC;IACnC,IAAI,CAAC,IAAA,0BAAS,EAAC,SAAS,CAAC,EAAE;QACzB,MAAM,IAAA,qBAAS,EAAC,GAAG,EAAE,6CAA6C,CAAC,CAAC;KACrE;IACD,IAAI,IAAI,KAAK,SAAS,EAAE;QACtB,MAAM,IAAA,qBAAS,EAAC,GAAG,EAAE,eAAe,CAAC,CAAC;KACvC;IAED,IAAI,CAAC,IAAA,gCAAe,EAAC,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,EAAE;QAChD,MAAM,IAAA,qBAAS,EAAC,GAAG,EAAE,IAAI,CAAC,UAAU,GAAG,iCAAiC,CAAC,CAAC;KAC3E;IAED,qDAAqD;IACrD,IAAM,OAAO,GAAG,IAAA,4BAAW,EAAC,SAAS,CAAC,CAAC;IACvC,IAAM,aAAa,GAAG,IAAA,yBAAe,EAAC,KAAK,EAAE,SAAS,CAAC,CAAC,QAAQ,CAAC;IACjE,IAAM,WAAW,GAAG,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC;IACjD,IAAI,aAAa,IAAI,WAAW,KAAK,IAAI,CAAC,UAAU,EAAE;QACpD,MAAM,IAAA,qBAAS,EAAC,GAAG,EAAE,8CAA8C,CAAC,CAAC;KACtE;IAED,IAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAC1C,UAAC,IAAI,IAAK,OAAA,IAAI,CAAC,SAAS,KAAK,SAAS,EAA5B,CAA4B,CACvC,CAAC;IACF,IAAM,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,YAAY,CAAC,SAAS,CACvE,UAAC,IAAI,IAAK,OAAA,IAAI,CAAC,GAAG,KAAK,IAAI,CAAC,UAAU,EAA5B,CAA4B,CACvC,CAAC;IACF,IAAM,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,UAAU,CAAC,SAAS,CACtE,UAAC,IAAI,IAAK,OAAA,IAAI,CAAC,GAAG,KAAK,IAAI,CAAC,UAAU,EAA5B,CAA4B,CACvC,CAAC;IACF,IAAI,cAAc,KAAK,CAAC,CAAC,EAAE;QACzB,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;KACpE;IAED,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;IAElE,IAAA,mBAAO,EAAC,IAAI,CAAC,CAAC;IAEd,oBAAoB;IACpB,IAAA,kCAAiB,EAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;IACtC,OAAO,EAAE,CAAC;AACZ,CAAC;AA1CD,wCA0CC;AACD;;;;;;GAMG;AACH,SAAgB,iBAAiB,CAC/B,KAAa,EACb,SAAiB,EACjB,GAAW;IAEX,IAAM,IAAI,GAAG,IAAA,mBAAO,GAAE,CAAC;IACvB,IAAM,IAAI,GAAG,IAAA,+BAAc,EAAC,KAAK,CAAC,CAAC;IACnC,IAAM,QAAQ,GAAG,IAAA,yBAAQ,EAAC,GAAG,CAAC,CAAC;IAE/B,iBAAiB;IACjB,IAAI,CAAC,IAAA,0BAAS,EAAC,SAAS,CAAC,EAAE;QACzB,MAAM,IAAA,qBAAS,EAAC,GAAG,EAAE,6CAA6C,CAAC,CAAC;KACrE;IAED,IAAI,QAAQ,KAAK,SAAS,EAAE;QAC1B,MAAM,IAAA,qBAAS,EAAC,GAAG,EAAE,aAAa,CAAC,CAAC;KACrC;IAED,IAAI,IAAI,KAAK,SAAS,EAAE;QACtB,MAAM,IAAA,qBAAS,EAAC,GAAG,EAAE,eAAe,CAAC,CAAC;KACvC;IAED,IAAI,CAAC,IAAA,gCAAe,EAAC,SAAS,EAAE,GAAG,CAAC,EAAE;QACpC,MAAM,IAAA,qBAAS,EAAC,GAAG,EAAE,qCAAqC,CAAC,CAAC;KAC7D;IAED,IAAI,CAAC,IAAA,gCAAe,EAAC,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,EAAE;QAChD,MAAM,IAAA,qBAAS,EAAC,GAAG,EAAE,qCAAqC,CAAC,CAAC;KAC7D;IAED,IAAI,IAAA,+BAAc,EAAC,GAAG,EAAE,SAAS,CAAC,EAAE;QAClC,MAAM,IAAA,qBAAS,EAAC,GAAG,EAAE,IAAI,CAAC,UAAU,GAAG,mCAAmC,CAAC,CAAC;KAC7E;IAED,IAAI,CAAC,IAAA,+BAAc,EAAC,IAAI,CAAC,UAAU,EAAE,SAAS,CAAC,IAAI,IAAI,CAAC,aAAa,KAAK,CAAC,EAAE;QAC3E,MAAM,IAAA,qBAAS,EAAC,GAAG,EAAE,IAAI,CAAC,UAAU,GAAG,0BAA0B,CAAC,CAAC;KACpE;IAED,iFAAiF;IACjF,IAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAC,CAAC,IAAK,OAAA,CAAC,CAAC,SAAS,KAAK,SAAS,EAAzB,CAAyB,CAAC,CAAC;IAC1E,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC;QAC7B,GAAG,EAAE,QAAQ,CAAC,UAAU;QACxB,KAAK,EAAE,QAAQ,CAAC,KAAK;QACrB,SAAS,EAAE,QAAQ,CAAC,SAAS;QAC7B,QAAQ,EAAE,QAAQ,CAAC,QAAQ;QAC3B,SAAS,EAAE,QAAQ,CAAC,SAAS;QAC7B,aAAa,EAAE,QAAQ,CAAC,aAAa;KACtC,CAAC,CAAC;IACH,IAAA,mBAAO,EAAC,IAAI,CAAC,CAAC;IACd,OAAO,EAAE,CAAC;AACZ,CAAC;AAlDD,8CAkDC;AAED;;;;;;GAMG;AACH,SAAgB,oBAAoB,CAClC,KAAa,EACb,SAAiB,EACjB,GAAW;IAEX,IAAM,IAAI,GAAG,IAAA,mBAAO,GAAE,CAAC;IACvB,IAAM,IAAI,GAAG,IAAA,+BAAc,EAAC,KAAK,CAAC,CAAC;IACnC,IAAM,QAAQ,GAAG,IAAA,yBAAQ,EAAC,GAAG,CAAC,CAAC;IAC/B,IAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAC,CAAC,IAAK,OAAA,CAAC,CAAC,SAAS,KAAK,SAAS,EAAzB,CAAyB,CAAC,CAAC;IAE1E,IAAI,CAAC,IAAA,0BAAS,EAAC,SAAS,CAAC,EAAE;QACzB,MAAM,IAAA,qBAAS,EAAC,GAAG,EAAE,6CAA6C,CAAC,CAAC;KACrE;IACD,cAAc;IACd,IAAI,QAAQ,KAAK,SAAS,EAAE;QAC1B,MAAM,IAAA,qBAAS,EAAC,GAAG,EAAE,aAAa,CAAC,CAAC;KACrC;IACD,gBAAgB;IAChB,IAAI,IAAI,KAAK,SAAS,EAAE;QACtB,MAAM,IAAA,qBAAS,EAAC,GAAG,EAAE,eAAe,CAAC,CAAC;KACvC;IAED,kCAAkC;IAClC,IAAI,CAAC,IAAA,gCAAe,EAAC,SAAS,EAAE,GAAG,CAAC,EAAE;QACpC,MAAM,IAAA,qBAAS,EAAC,GAAG,EAAE,iCAAiC,CAAC,CAAC;KACzD;IAED,4DAA4D;IAC5D,IAAI,CAAC,IAAA,gCAAe,EAAC,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,EAAE;QAChD,MAAM,IAAA,qBAAS,EAAC,GAAG,EAAE,qCAAqC,CAAC,CAAC;KAC7D;IAED,uCAAuC;IACvC,IAAI,CAAC,IAAA,+BAAc,EAAC,GAAG,EAAE,SAAS,CAAC,EAAE;QACnC,MAAM,IAAA,qBAAS,EAAC,GAAG,EAAE,IAAI,CAAC,UAAU,GAAG,+BAA+B,CAAC,CAAC;KACzE;IACD,gEAAgE;IAChE,oBAAoB;IACpB,IAAI,CAAC,IAAA,+BAAc,EAAC,IAAI,CAAC,UAAU,EAAE,SAAS,CAAC,IAAI,IAAI,CAAC,aAAa,KAAK,CAAC,EAAE;QAC3E,MAAM,IAAA,qBAAS,EAAC,GAAG,EAAE,IAAI,CAAC,UAAU,GAAG,0BAA0B,CAAC,CAAC;KACpE;IACD,2CAA2C;IAC3C,IAAI,YAAY,CAAC,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;QAC1C,MAAM,IAAA,qBAAS,EAAC,GAAG,EAAE,IAAI,CAAC,UAAU,GAAG,oBAAoB,CAAC,CAAC;KAC9D;IAED,sDAAsD;IACtD,IAAM,UAAU,GAAG,IAAA,+BAAc,EAAC,SAAS,EAAE,QAAQ,CAAC,UAAU,CAAC,CAAC;IAElE,YAAY,CAAC,YAAY,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;IAChD,IAAA,mBAAO,EAAC,IAAI,CAAC,CAAC;IACd,OAAO,EAAE,CAAC;AACZ,CAAC;AApDD,oDAoDC","sourcesContent":["import { getData, setData } from './dataStore';\nimport {\n  isChannel,\n  isUser,\n  findChannel,\n  findUser,\n  getAllMemberIds,\n  getChannelIndex,\n  isChannelMember,\n  getUserByToken,\n  isChannelOwner,\n  findOwnerIndex,\n  findUserIndex,\n  updateChannelInfo,\n} from './functionHelper';\nimport { messages, errorMessage } from './interfaces';\nimport HTTPError from 'http-errors';\nimport { standupActiveV1 } from './standup';\n\n/**\n *\n * @param {number} authUserId - The authenticated user Id\n * @param {number} channelId - The channel Id to join\n * ...\n *\n * @returns {} - returns {} when successful\n * @returns {error : 'error message'} - returns an error when\n *                                    | channelId is invalid\n *                                    | Member is already in channel\n *                                    | Channel is private and not a global owner\n *                                    | User is invalid\n */\nexport function channelMessagesV1(\n  token: string,\n  channelId: number,\n  start: number\n): messages | errorMessage {\n  const user = getUserByToken(token);\n\n  const channel = findChannel(channelId);\n\n  const allMemberIds = getAllMemberIds(channel);\n\n  if (user === undefined) {\n    throw HTTPError(403, 'Invalid user token');\n  }\n\n  if (channel === undefined) {\n    throw HTTPError(400, 'Channel Not Found');\n  }\n  const channelMessage = channel.messages.length;\n  const uId = user.authUserId;\n  // Error if the user is not a member of the channel\n  if (allMemberIds.includes(uId) === false) {\n    throw HTTPError(403, 'User is not a member of the channel');\n  }\n  // Error if 'start' is greater than the amount of messages\n  if (start > channelMessage) {\n    throw HTTPError(400, '\"Start\" is greater than the amount of messages');\n  }\n\n  for (const message of channel.messages) {\n    if (message.reacts.length !== 0) {\n      if (message.reacts[0].uIds.includes(user.authUserId)) {\n        message.reacts[0].isThisUserReacted = true;\n      } else {\n        message.reacts[0].isThisUserReacted = false;\n      }\n    }\n  }\n  // reverse message\n  channel.messages.reverse();\n\n  if (start + 50 > channelMessage) {\n    return {\n      messages: channel.messages.slice(start),\n      start: start,\n      end: -1,\n    };\n  } else {\n    return {\n      messages: channel.messages.slice(start, start + 50),\n      start: start,\n      end: start + 50,\n    };\n  }\n}\n\n/**\n * Given a channelId of a channel that the authorised user\n * can join, adds them to the channel.\n *\n * @param {string} token - The authenticated token\n * @param {number} channelId - The channel Id to join\n * ...\n *\n * @returns {} - returns {} when successful\n * @returns {error : 'error message'} - returns an error when\n *                                    | channelId is invalid\n *                                    | Member is already in channel\n *                                    | Channel is private and not a global owner\n *                                    | User token is invalid\n */\n\nexport function channelJoinV1(\n  token: string,\n  channelId: number\n): object | errorMessage {\n  const data = getData();\n  // Get the particular user in data store\n  const user = getUserByToken(token);\n\n  // Get the particular channel index from data store\n  const channel = findChannel(channelId);\n\n  const allMemberIds = getAllMemberIds(channel);\n\n  if (user === undefined) {\n    throw HTTPError(403, 'Invalid user token');\n  }\n\n  if (channel === undefined) {\n    throw HTTPError(400, 'Channel Not Found');\n  }\n\n  const uId = user.authUserId;\n\n  if (allMemberIds.includes(uId) === true) {\n    throw HTTPError(400, 'User is already in channel');\n  }\n\n  // channel\n  if (channel.isPublic === false && user.isGlobalOwner === 2) {\n    throw HTTPError(403, 'Channel is not public');\n  }\n  const channelNum = getChannelIndex(channelId);\n\n  data.channels[channelNum].allMembers.push({\n    uId: user.authUserId,\n    email: user.email,\n    nameFirst: user.nameFirst,\n    nameLast: user.nameLast,\n    handleStr: user.handleStr,\n    profileImgUrl: user.profileImgUrl,\n  });\n\n  setData(data);\n\n  // updates user stats\n  updateChannelInfo(user.authUserId, 0);\n\n  return {};\n}\n/**\n *\n * Invites a user to a channel\n * @param {string} token - The authenticated user token\n * @param {number} channelId - The channel Id to join\n * @param {number} uId - The user Id of the invited member\n *\n * @returns {error : 'error message'} - returns an error when\n *                                    | channelId is invalid\n *  *                                 | uId is invalid\n *                                    | User is already in the channel\n *  *                                 | Token refers to a member not in the channel\n *                                    | token is invalid\n */\nexport function channelInviteV1(token: string, channelId: number, uId: number) {\n  const data = getData();\n\n  // Error cases\n  const user = getUserByToken(token);\n  if (user === undefined) {\n    throw HTTPError(403, 'Invalid token');\n  }\n  if (!isChannel(channelId)) {\n    throw HTTPError(400, 'channelId does not refer to a valid channel');\n  }\n  if (!isUser(uId)) {\n    throw HTTPError(400, 'uId does not refer to a valid user');\n  }\n  const channel = findChannel(channelId);\n\n  // Get all uIds in the channel\n  const allMemberIds = getAllMemberIds(channel);\n\n  if (allMemberIds.includes(uId) === true) {\n    throw HTTPError(400, 'User already in the channel');\n  }\n\n  if (\n    isChannel(channelId) &&\n    allMemberIds.includes(user.authUserId) === false\n  ) {\n    throw HTTPError(403, 'You are not a channel member');\n  }\n  // Finds the user based on uId\n  const invitedUser = findUser(uId);\n  const channelNum = getChannelIndex(channelId);\n\n  // Adds the user to the channel\n  data.channels[channelNum].allMembers.push({\n    uId: invitedUser.authUserId,\n    email: invitedUser.email,\n    nameFirst: invitedUser.nameFirst,\n    nameLast: invitedUser.nameLast,\n    handleStr: invitedUser.handleStr,\n    profileImgUrl: invitedUser.profileImgUrl,\n  });\n\n  // if user is invited send notification\n  const notification = {\n    channelId: channelId,\n    dmId: -1,\n    notificationMessage: `${user.handleStr} added you to ${channel.name}`,\n  };\n\n  const userInvitedIndex = findUserIndex(uId);\n  data.users[userInvitedIndex].notifications.push(notification);\n\n  setData(data);\n\n  // update invited user stats\n  updateChannelInfo(uId, 0);\n  return {};\n}\n\n/**\n *\n * Shows the details of the given channel\n * @param {string} token - The authenticated user token\n * @param {number} channelId - The channel Id to join\n *\n * @returns {\n *  name: string,\n *  isPublic: boolean,\n *  ownerMembers: string,\n *  allMembers: string} - returns the details of the channel when successful\n *\n * @returns {error : 'error message'} - returns an error when\n *                                    | channelId is invalid\n *                                    | User is not a member of the channel\n *                                    | User is invalid\n */\nexport function channelDetailsV1(token: string, channelId: number) {\n  // If channelId doesn't refer to a valid channel,\n  // returns error\n  // console.log(token);\n  // console.log(channelId);\n  const user = getUserByToken(token);\n  if (!isChannel(channelId)) {\n    throw HTTPError(400, 'channelId does not refer to a valid channel');\n  } else if (user === undefined) {\n    // If token is invalid, returns error\n    throw HTTPError(403, 'Invalid token');\n  }\n  // If the user is not a member of the channel\n  if (!isChannelMember(channelId, user.authUserId)) {\n    throw HTTPError(403, 'User is not a member of the channel');\n  }\n  const channelObj = findChannel(channelId);\n  return {\n    name: channelObj.name,\n    isPublic: channelObj.isPublic,\n    ownerMembers: channelObj.ownerMembers,\n    allMembers: channelObj.allMembers,\n  };\n}\n\n/**\n * Given a channelId of a channel and token, removing the membership of that member,\n * but remain the information of the authorised user\n *\n * @param {string} token - The authenticated token\n * @param {number} channelId - The channel Id to join\n * ...\n *\n * @returns {} - returns {} when successful\n * @returns {error : 'error message'} - returns an error when\n *                                    | channelId is invalid\n *                                    | user is not the channel member\n *                                    | User token is invalid\n */\nexport function channelLeaveV1(token: string, channelId: number) {\n  const data = getData();\n  const user = getUserByToken(token);\n  if (!isChannel(channelId)) {\n    throw HTTPError(400, 'channelId does not refer to a valid channel');\n  }\n  if (user === undefined) {\n    throw HTTPError(403, 'Invalid token');\n  }\n\n  if (!isChannelMember(channelId, user.authUserId)) {\n    throw HTTPError(403, user.authUserId + ' is not a member of the channel');\n  }\n\n  // if standup active and user is standup, throw error\n  const channel = findChannel(channelId);\n  const standupActive = standupActiveV1(token, channelId).isActive;\n  const standupUser = channel.standUp.standUpOwner;\n  if (standupActive && standupUser === user.authUserId) {\n    throw HTTPError(400, 'Cannot leave channel while standup is active');\n  }\n\n  const channelIndex = data.channels.findIndex(\n    (item) => item.channelId === channelId\n  );\n  const userOwnerIndex = data.channels[channelIndex].ownerMembers.findIndex(\n    (item) => item.uId === user.authUserId\n  );\n  const userMemberIndex = data.channels[channelIndex].allMembers.findIndex(\n    (item) => item.uId === user.authUserId\n  );\n  if (userOwnerIndex !== -1) {\n    data.channels[channelIndex].ownerMembers.splice(userOwnerIndex, 1);\n  }\n\n  data.channels[channelIndex].allMembers.splice(userMemberIndex, 1);\n\n  setData(data);\n\n  // update user stats\n  updateChannelInfo(user.authUserId, 1);\n  return {};\n}\n/**\n *\n * @param {string} token - Token of the user performing the action\n * @param {number} channelId - ID of the channel where the user will be added as owner\n * @param {number} uId - ID of the user to be added as owner\n * @returns {Object | errorMessage} - Empty object if successful, error object otherwise\n */\nexport function channelAddOwnerV1(\n  token: string,\n  channelId: number,\n  uId: number\n): object | errorMessage {\n  const data = getData();\n  const user = getUserByToken(token);\n  const uIdfound = findUser(uId);\n\n  // Error checking\n  if (!isChannel(channelId)) {\n    throw HTTPError(400, 'channelId does not refer to a valid channel');\n  }\n\n  if (uIdfound === undefined) {\n    throw HTTPError(400, 'Invalid uId');\n  }\n\n  if (user === undefined) {\n    throw HTTPError(403, 'Invalid token');\n  }\n\n  if (!isChannelMember(channelId, uId)) {\n    throw HTTPError(400, 'User is not a member of the channel');\n  }\n\n  if (!isChannelMember(channelId, user.authUserId)) {\n    throw HTTPError(403, 'You are not a member of the channel');\n  }\n\n  if (isChannelOwner(uId, channelId)) {\n    throw HTTPError(400, user.authUserId + ' is already owner of this channel');\n  }\n\n  if (!isChannelOwner(user.authUserId, channelId) && user.isGlobalOwner === 2) {\n    throw HTTPError(403, user.authUserId + ' has no owner permission');\n  }\n\n  // owner adds the user with uId to the ownermembers and allmembers of the channel\n  const channelfound = data.channels.find((a) => a.channelId === channelId);\n  channelfound.ownerMembers.push({\n    uId: uIdfound.authUserId,\n    email: uIdfound.email,\n    nameFirst: uIdfound.nameFirst,\n    nameLast: uIdfound.nameLast,\n    handleStr: uIdfound.handleStr,\n    profileImgUrl: uIdfound.profileImgUrl,\n  });\n  setData(data);\n  return {};\n}\n\n/**\n *\n * @param {string} token - The user's authentication token.\n * @param {number} channelId - The ID of the channel.\n * @param {number} uId - The ID of the user to remove as owner.\n * @returns {Object | errorMessage} An empty object if successful, or an object with an \"error\" property if unsuccessful.\n */\nexport function channelRemoveOwnerV1(\n  token: string,\n  channelId: number,\n  uId: number\n): object | errorMessage {\n  const data = getData();\n  const user = getUserByToken(token);\n  const uIdfound = findUser(uId);\n  const channelfound = data.channels.find((a) => a.channelId === channelId);\n\n  if (!isChannel(channelId)) {\n    throw HTTPError(400, 'channelId does not refer to a valid channel');\n  }\n  // invalid uId\n  if (uIdfound === undefined) {\n    throw HTTPError(400, 'Invalid uId');\n  }\n  // invalid token\n  if (user === undefined) {\n    throw HTTPError(403, 'Invalid token');\n  }\n\n  // Check if user is in the channel\n  if (!isChannelMember(channelId, uId)) {\n    throw HTTPError(400, ' is not a member of the channel');\n  }\n\n  // Check if the user executing the command is in the channel\n  if (!isChannelMember(channelId, user.authUserId)) {\n    throw HTTPError(403, 'You are not a member of the channel');\n  }\n\n  // uId user is not owner of the channel\n  if (!isChannelOwner(uId, channelId)) {\n    throw HTTPError(400, user.authUserId + ' is not owner of this channel');\n  }\n  // user with token is neither channel owner nor the global owner\n  // global owner if 1\n  if (!isChannelOwner(user.authUserId, channelId) && user.isGlobalOwner !== 1) {\n    throw HTTPError(403, user.authUserId + ' has no owner permission');\n  }\n  // the owner is the only one in the channel\n  if (channelfound.ownerMembers.length === 1) {\n    throw HTTPError(400, user.authUserId + ' is the only owner');\n  }\n\n  // owner removes the other owner with uId from channel\n  const ownerIndex = findOwnerIndex(channelId, uIdfound.authUserId);\n\n  channelfound.ownerMembers.splice(ownerIndex, 1);\n  setData(data);\n  return {};\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"22da4331126c60a8edafd0e6fd2affc58c672c28","contentHash":"a32e6a8400295b6dfa01e59a545c28b63aa70631ad41b0cdaa60a2302b2ae084"},"/Users/binvog/Documents/UNSW 2023T1/COMP1531/Indiv_projectbackend/iter4-project-backend/src/standup.ts":{"path":"/Users/binvog/Documents/UNSW 2023T1/COMP1531/Indiv_projectbackend/iter4-project-backend/src/standup.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":82}},"4":{"start":{"line":7,"column":18},"end":{"line":7,"column":40}},"5":{"start":{"line":8,"column":20},"end":{"line":8,"column":59}},"6":{"start":{"line":9,"column":23},"end":{"line":9,"column":50}},"7":{"start":{"line":18,"column":15},"end":{"line":18,"column":58}},"8":{"start":{"line":19,"column":18},"end":{"line":19,"column":62}},"9":{"start":{"line":20,"column":23},"end":{"line":20,"column":69}},"10":{"start":{"line":22,"column":4},"end":{"line":24,"column":5}},"11":{"start":{"line":23,"column":8},"end":{"line":23,"column":66}},"12":{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},"13":{"start":{"line":26,"column":8},"end":{"line":26,"column":72}},"14":{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},"15":{"start":{"line":29,"column":8},"end":{"line":29,"column":83}},"16":{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},"17":{"start":{"line":32,"column":8},"end":{"line":32,"column":85}},"18":{"start":{"line":34,"column":23},"end":{"line":34,"column":56}},"19":{"start":{"line":35,"column":4},"end":{"line":37,"column":5}},"20":{"start":{"line":36,"column":8},"end":{"line":36,"column":75}},"21":{"start":{"line":38,"column":21},"end":{"line":38,"column":59}},"22":{"start":{"line":39,"column":23},"end":{"line":39,"column":71}},"23":{"start":{"line":40,"column":15},"end":{"line":40,"column":41}},"24":{"start":{"line":41,"column":4},"end":{"line":41,"column":61}},"25":{"start":{"line":42,"column":4},"end":{"line":42,"column":67}},"26":{"start":{"line":43,"column":4},"end":{"line":43,"column":71}},"27":{"start":{"line":44,"column":4},"end":{"line":44,"column":35}},"28":{"start":{"line":46,"column":4},"end":{"line":61,"column":22}},"29":{"start":{"line":48,"column":8},"end":{"line":60,"column":9}},"30":{"start":{"line":49,"column":12},"end":{"line":49,"column":41}},"31":{"start":{"line":52,"column":25},"end":{"line":52,"column":51}},"32":{"start":{"line":53,"column":33},"end":{"line":53,"column":81}},"33":{"start":{"line":54,"column":26},"end":{"line":54,"column":65}},"34":{"start":{"line":55,"column":12},"end":{"line":55,"column":42}},"35":{"start":{"line":56,"column":12},"end":{"line":56,"column":38}},"36":{"start":{"line":57,"column":12},"end":{"line":57,"column":40}},"37":{"start":{"line":58,"column":12},"end":{"line":58,"column":38}},"38":{"start":{"line":59,"column":12},"end":{"line":59,"column":45}},"39":{"start":{"line":62,"column":4},"end":{"line":62,"column":38}},"40":{"start":{"line":64,"column":0},"end":{"line":64,"column":40}},"41":{"start":{"line":73,"column":15},"end":{"line":73,"column":58}},"42":{"start":{"line":74,"column":18},"end":{"line":74,"column":62}},"43":{"start":{"line":75,"column":23},"end":{"line":75,"column":69}},"44":{"start":{"line":77,"column":4},"end":{"line":79,"column":5}},"45":{"start":{"line":78,"column":8},"end":{"line":78,"column":66}},"46":{"start":{"line":80,"column":4},"end":{"line":82,"column":5}},"47":{"start":{"line":81,"column":8},"end":{"line":81,"column":72}},"48":{"start":{"line":83,"column":4},"end":{"line":85,"column":5}},"49":{"start":{"line":84,"column":8},"end":{"line":84,"column":83}},"50":{"start":{"line":86,"column":23},"end":{"line":86,"column":71}},"51":{"start":{"line":87,"column":15},"end":{"line":87,"column":41}},"52":{"start":{"line":88,"column":18},"end":{"line":88,"column":53}},"53":{"start":{"line":89,"column":4},"end":{"line":92,"column":6}},"54":{"start":{"line":94,"column":0},"end":{"line":94,"column":42}},"55":{"start":{"line":103,"column":15},"end":{"line":103,"column":58}},"56":{"start":{"line":104,"column":18},"end":{"line":104,"column":62}},"57":{"start":{"line":105,"column":23},"end":{"line":105,"column":69}},"58":{"start":{"line":107,"column":4},"end":{"line":109,"column":5}},"59":{"start":{"line":108,"column":8},"end":{"line":108,"column":66}},"60":{"start":{"line":110,"column":4},"end":{"line":112,"column":5}},"61":{"start":{"line":111,"column":8},"end":{"line":111,"column":72}},"62":{"start":{"line":113,"column":4},"end":{"line":115,"column":5}},"63":{"start":{"line":114,"column":8},"end":{"line":114,"column":83}},"64":{"start":{"line":116,"column":4},"end":{"line":118,"column":5}},"65":{"start":{"line":117,"column":8},"end":{"line":117,"column":70}},"66":{"start":{"line":119,"column":4},"end":{"line":121,"column":5}},"67":{"start":{"line":120,"column":8},"end":{"line":120,"column":69}},"68":{"start":{"line":122,"column":23},"end":{"line":122,"column":71}},"69":{"start":{"line":123,"column":15},"end":{"line":123,"column":41}},"70":{"start":{"line":124,"column":23},"end":{"line":124,"column":56}},"71":{"start":{"line":125,"column":18},"end":{"line":125,"column":47}},"72":{"start":{"line":126,"column":4},"end":{"line":128,"column":5}},"73":{"start":{"line":127,"column":8},"end":{"line":127,"column":70}},"74":{"start":{"line":129,"column":21},"end":{"line":142,"column":5}},"75":{"start":{"line":143,"column":4},"end":{"line":143,"column":72}},"76":{"start":{"line":144,"column":4},"end":{"line":144,"column":35}},"77":{"start":{"line":145,"column":4},"end":{"line":145,"column":14}},"78":{"start":{"line":147,"column":0},"end":{"line":147,"column":38}},"79":{"start":{"line":155,"column":23},"end":{"line":155,"column":71}},"80":{"start":{"line":156,"column":15},"end":{"line":156,"column":58}},"81":{"start":{"line":157,"column":15},"end":{"line":157,"column":41}},"82":{"start":{"line":158,"column":18},"end":{"line":158,"column":53}},"83":{"start":{"line":159,"column":4},"end":{"line":161,"column":5}},"84":{"start":{"line":160,"column":8},"end":{"line":160,"column":66}},"85":{"start":{"line":162,"column":4},"end":{"line":168,"column":5}},"86":{"start":{"line":163,"column":8},"end":{"line":163,"column":38}},"87":{"start":{"line":164,"column":8},"end":{"line":164,"column":34}},"88":{"start":{"line":165,"column":8},"end":{"line":165,"column":36}},"89":{"start":{"line":166,"column":8},"end":{"line":166,"column":39}},"90":{"start":{"line":167,"column":8},"end":{"line":167,"column":15}},"91":{"start":{"line":169,"column":18},"end":{"line":169,"column":20}},"92":{"start":{"line":170,"column":24},"end":{"line":170,"column":53}},"93":{"start":{"line":171,"column":4},"end":{"line":182,"column":5}},"94":{"start":{"line":171,"column":17},"end":{"line":171,"column":18}},"95":{"start":{"line":172,"column":28},"end":{"line":172,"column":57}},"96":{"start":{"line":173,"column":21},"end":{"line":173,"column":66}},"97":{"start":{"line":174,"column":34},"end":{"line":174,"column":50}},"98":{"start":{"line":175,"column":29},"end":{"line":175,"column":62}},"99":{"start":{"line":177,"column":8},"end":{"line":177,"column":85}},"100":{"start":{"line":179,"column":8},"end":{"line":181,"column":9}},"101":{"start":{"line":180,"column":12},"end":{"line":180,"column":43}},"102":{"start":{"line":184,"column":21},"end":{"line":197,"column":5}},"103":{"start":{"line":198,"column":4},"end":{"line":198,"column":58}},"104":{"start":{"line":199,"column":4},"end":{"line":199,"column":34}},"105":{"start":{"line":200,"column":4},"end":{"line":200,"column":30}},"106":{"start":{"line":201,"column":4},"end":{"line":201,"column":32}},"107":{"start":{"line":202,"column":4},"end":{"line":202,"column":30}},"108":{"start":{"line":203,"column":4},"end":{"line":203,"column":35}},"109":{"start":{"line":204,"column":4},"end":{"line":204,"column":64}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"standupStartV1","decl":{"start":{"line":17,"column":9},"end":{"line":17,"column":23}},"loc":{"start":{"line":17,"column":50},"end":{"line":63,"column":1}},"line":17},"2":{"name":"(anonymous_2)","decl":{"start":{"line":46,"column":15},"end":{"line":46,"column":16}},"loc":{"start":{"line":46,"column":27},"end":{"line":61,"column":5}},"line":46},"3":{"name":"standupActiveV1","decl":{"start":{"line":72,"column":9},"end":{"line":72,"column":24}},"loc":{"start":{"line":72,"column":43},"end":{"line":93,"column":1}},"line":72},"4":{"name":"standupSendV1","decl":{"start":{"line":102,"column":9},"end":{"line":102,"column":22}},"loc":{"start":{"line":102,"column":50},"end":{"line":146,"column":1}},"line":102},"5":{"name":"standUpEnd","decl":{"start":{"line":154,"column":9},"end":{"line":154,"column":19}},"loc":{"start":{"line":154,"column":38},"end":{"line":205,"column":1}},"line":154}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":22,"column":4},"end":{"line":24,"column":5}},"type":"if","locations":[{"start":{"line":22,"column":4},"end":{"line":24,"column":5}},{"start":{"line":22,"column":4},"end":{"line":24,"column":5}}],"line":22},"4":{"loc":{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},"type":"if","locations":[{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},{"start":{"line":25,"column":4},"end":{"line":27,"column":5}}],"line":25},"5":{"loc":{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},"type":"if","locations":[{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},{"start":{"line":28,"column":4},"end":{"line":30,"column":5}}],"line":28},"6":{"loc":{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},"type":"if","locations":[{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},{"start":{"line":31,"column":4},"end":{"line":33,"column":5}}],"line":31},"7":{"loc":{"start":{"line":35,"column":4},"end":{"line":37,"column":5}},"type":"if","locations":[{"start":{"line":35,"column":4},"end":{"line":37,"column":5}},{"start":{"line":35,"column":4},"end":{"line":37,"column":5}}],"line":35},"8":{"loc":{"start":{"line":77,"column":4},"end":{"line":79,"column":5}},"type":"if","locations":[{"start":{"line":77,"column":4},"end":{"line":79,"column":5}},{"start":{"line":77,"column":4},"end":{"line":79,"column":5}}],"line":77},"9":{"loc":{"start":{"line":80,"column":4},"end":{"line":82,"column":5}},"type":"if","locations":[{"start":{"line":80,"column":4},"end":{"line":82,"column":5}},{"start":{"line":80,"column":4},"end":{"line":82,"column":5}}],"line":80},"10":{"loc":{"start":{"line":83,"column":4},"end":{"line":85,"column":5}},"type":"if","locations":[{"start":{"line":83,"column":4},"end":{"line":85,"column":5}},{"start":{"line":83,"column":4},"end":{"line":85,"column":5}}],"line":83},"11":{"loc":{"start":{"line":107,"column":4},"end":{"line":109,"column":5}},"type":"if","locations":[{"start":{"line":107,"column":4},"end":{"line":109,"column":5}},{"start":{"line":107,"column":4},"end":{"line":109,"column":5}}],"line":107},"12":{"loc":{"start":{"line":110,"column":4},"end":{"line":112,"column":5}},"type":"if","locations":[{"start":{"line":110,"column":4},"end":{"line":112,"column":5}},{"start":{"line":110,"column":4},"end":{"line":112,"column":5}}],"line":110},"13":{"loc":{"start":{"line":113,"column":4},"end":{"line":115,"column":5}},"type":"if","locations":[{"start":{"line":113,"column":4},"end":{"line":115,"column":5}},{"start":{"line":113,"column":4},"end":{"line":115,"column":5}}],"line":113},"14":{"loc":{"start":{"line":116,"column":4},"end":{"line":118,"column":5}},"type":"if","locations":[{"start":{"line":116,"column":4},"end":{"line":118,"column":5}},{"start":{"line":116,"column":4},"end":{"line":118,"column":5}}],"line":116},"15":{"loc":{"start":{"line":119,"column":4},"end":{"line":121,"column":5}},"type":"if","locations":[{"start":{"line":119,"column":4},"end":{"line":121,"column":5}},{"start":{"line":119,"column":4},"end":{"line":121,"column":5}}],"line":119},"16":{"loc":{"start":{"line":126,"column":4},"end":{"line":128,"column":5}},"type":"if","locations":[{"start":{"line":126,"column":4},"end":{"line":128,"column":5}},{"start":{"line":126,"column":4},"end":{"line":128,"column":5}}],"line":126},"17":{"loc":{"start":{"line":126,"column":8},"end":{"line":126,"column":76}},"type":"binary-expr","locations":[{"start":{"line":126,"column":8},"end":{"line":126,"column":41}},{"start":{"line":126,"column":45},"end":{"line":126,"column":76}}],"line":126},"18":{"loc":{"start":{"line":159,"column":4},"end":{"line":161,"column":5}},"type":"if","locations":[{"start":{"line":159,"column":4},"end":{"line":161,"column":5}},{"start":{"line":159,"column":4},"end":{"line":161,"column":5}}],"line":159},"19":{"loc":{"start":{"line":162,"column":4},"end":{"line":168,"column":5}},"type":"if","locations":[{"start":{"line":162,"column":4},"end":{"line":168,"column":5}},{"start":{"line":162,"column":4},"end":{"line":168,"column":5}}],"line":162},"20":{"loc":{"start":{"line":179,"column":8},"end":{"line":181,"column":9}},"type":"if","locations":[{"start":{"line":179,"column":8},"end":{"line":181,"column":9}},{"start":{"line":179,"column":8},"end":{"line":181,"column":9}}],"line":179}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":9,"8":9,"9":9,"10":9,"11":1,"12":8,"13":1,"14":7,"15":1,"16":6,"17":1,"18":5,"19":5,"20":1,"21":4,"22":4,"23":4,"24":4,"25":4,"26":4,"27":4,"28":4,"29":4,"30":4,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":4,"40":1,"41":28,"42":28,"43":28,"44":28,"45":1,"46":27,"47":1,"48":26,"49":1,"50":25,"51":25,"52":25,"53":25,"54":1,"55":12,"56":12,"57":12,"58":12,"59":1,"60":11,"61":1,"62":10,"63":1,"64":9,"65":1,"66":8,"67":1,"68":7,"69":7,"70":7,"71":7,"72":7,"73":1,"74":6,"75":6,"76":6,"77":6,"78":1,"79":4,"80":4,"81":4,"82":4,"83":4,"84":1,"85":3,"86":1,"87":1,"88":1,"89":1,"90":1,"91":2,"92":2,"93":2,"94":2,"95":6,"96":6,"97":6,"98":6,"99":6,"100":6,"101":2,"102":2,"103":2,"104":2,"105":2,"106":2,"107":2,"108":2,"109":2},"f":{"0":1,"1":9,"2":4,"3":28,"4":12,"5":4},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[1,8],"4":[1,7],"5":[1,6],"6":[1,5],"7":[1,4],"8":[1,27],"9":[1,26],"10":[1,25],"11":[1,11],"12":[1,10],"13":[1,9],"14":[1,8],"15":[1,7],"16":[1,6],"17":[7,1],"18":[1,3],"19":[1,2],"20":[2,4]},"inputSourceMap":{"version":3,"file":"/Users/binvog/Documents/UNSW 2023T1/COMP1531/Indiv_projectbackend/iter4-project-backend/src/standup.ts","sources":["/Users/binvog/Documents/UNSW 2023T1/COMP1531/Indiv_projectbackend/iter4-project-backend/src/standup.ts"],"names":[],"mappings":"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","sourcesContent":["import { getData, setData } from './dataStore';\nimport HTTPError from 'http-errors';\nimport {\n  findChannel,\n  findUser,\n  getAllMemberIds,\n  getChannelIndex,\n  getUserByToken,\n  incrementMessageStat,\n} from './functionHelper';\n\n/**\n *\n * @param token - token of user starting standup\n * @param channelId - channel id of channel to start standup in\n * @param length - length of standup in seconds\n * @returns {timeFinish: number} - timeFinish is the time the standup will finish\n */\nexport function standupStartV1(\n  token: string,\n  channelId: number,\n  length: number\n) {\n  const user = getUserByToken(token);\n  const channel = findChannel(channelId);\n  const allMemberIds = getAllMemberIds(channel);\n\n  // Error Checking\n  if (user === undefined) {\n    throw HTTPError(403, 'Token is invalid');\n  }\n  if (channel === undefined) {\n    throw HTTPError(400, 'Channel does not exist');\n  }\n  if (allMemberIds.includes(user.authUserId) === false) {\n    throw HTTPError(403, 'User is not registered in channel');\n  }\n  if (length < 0) {\n    throw HTTPError(400, 'length should be a positive integer');\n  }\n  const standUpDeets = standupActiveV1(token, channelId);\n  if (standUpDeets.isActive) {\n    throw HTTPError(400, 'Standup is already active');\n  }\n\n  const timeFinish = Math.floor(Date.now() / 1000) + length;\n\n  const channelIndex = getChannelIndex(channelId);\n  const data = getData();\n  data.channels[channelIndex].standUp.standUpActive = true;\n  data.channels[channelIndex].standUp.standUpLength = timeFinish;\n  data.channels[channelIndex].standUp.standUpOwner = user.authUserId;\n\n  setData(data);\n\n  // timeout\n  setTimeout(() => {\n    // if token is invalid, do nothing\n    try {\n      standUpEnd(token, channelId);\n    } catch (e) {\n      const data = getData();\n      const channelIndex = getChannelIndex(channelId);\n      const standUp = data.channels[channelIndex].standUp;\n      standUp.standUpActive = false;\n      standUp.standUpLength = 0;\n      standUp.standUpMessage = [];\n      standUp.standUpOwner = -1;\n      setData(data);\n    }\n  }, length * 1000);\n\n  return { timeFinish: timeFinish };\n}\n\n/**\n *\n * @param token - token of user making request\n * @param channelId - channel id of channel to check standup in\n * @returns {isActive: boolean, timeFinish: number} - isActive is true if standup is active, false otherwise,\n *                                                    timeFinish is the time the standup will finish\n */\nexport function standupActiveV1(token: string, channelId: number) {\n  const user = getUserByToken(token);\n  const channel = findChannel(channelId);\n  const allMemberIds = getAllMemberIds(channel);\n\n  // Error Checking\n  if (user === undefined) {\n    throw HTTPError(403, 'Token is invalid');\n  }\n  if (channel === undefined) {\n    throw HTTPError(400, 'Channel does not exist');\n  }\n  if (allMemberIds.includes(user.authUserId) === false) {\n    throw HTTPError(403, 'User is not registered in channel');\n  }\n\n  const channelIndex = getChannelIndex(channelId);\n  const data = getData();\n  const standUp = data.channels[channelIndex].standUp;\n\n  return {\n    isActive: standUp.standUpActive,\n    timeFinish: standUp.standUpLength,\n  };\n}\n\n/**\n *\n * @param token - token of user sending message\n * @param channelId - channel id of channel to send message in\n * @param message - message to send\n * @returns {}\n */\nexport function standupSendV1(\n  token: string,\n  channelId: number,\n  message: string\n) {\n  const user = getUserByToken(token);\n  const channel = findChannel(channelId);\n  const allMemberIds = getAllMemberIds(channel);\n\n  // Error Checking\n  if (user === undefined) {\n    throw HTTPError(403, 'Token is invalid');\n  }\n  if (channel === undefined) {\n    throw HTTPError(400, 'Channel does not exist');\n  }\n  if (allMemberIds.includes(user.authUserId) === false) {\n    throw HTTPError(403, 'User is not registered in channel');\n  }\n  if (message.length < 1) {\n    throw HTTPError(400, 'Message is too short');\n  }\n  if (message.length > 1000) {\n    throw HTTPError(400, 'Message is too long');\n  }\n\n  const channelIndex = getChannelIndex(channelId);\n  const data = getData();\n\n  const standupDeets = standupActiveV1(token, channelId);\n\n  const timeNow = Math.floor(Date.now() / 1000);\n  if (timeNow > standupDeets.timeFinish && standupDeets.isActive === false) {\n    throw HTTPError(400, 'Standup has finished');\n  }\n\n  const newMessage = {\n    messageId: Math.floor(Math.random() * 1000000),\n    uId: user.authUserId,\n    message: message,\n    timeSent: timeNow,\n    isPinned: false,\n    reacts: [\n      {\n        reactId: 1,\n        uIds: [] as number[],\n        isThisUserReacted: false,\n      },\n    ],\n  };\n\n  data.channels[channelIndex].standUp.standUpMessage.push(newMessage);\n  setData(data);\n\n  return {};\n}\n\n/**\n *\n * @param token - token of user\n * @param channelId - id of channel\n * @returns\n */\nfunction standUpEnd(token: string, channelId: number) {\n  const channelIndex = getChannelIndex(channelId);\n  const user = getUserByToken(token);\n  const data = getData();\n  const standUp = data.channels[channelIndex].standUp;\n\n  if (user === undefined) {\n    throw HTTPError(403, 'Token is invalid');\n  }\n\n  if (standUp.standUpMessage.length === 0) {\n    standUp.standUpActive = false;\n    standUp.standUpLength = 0;\n    standUp.standUpMessage = [];\n    setData(data);\n    return;\n  }\n\n  let message = '';\n  const messageLength = standUp.standUpMessage.length;\n  for (let i = 0; i < messageLength; i++) {\n    const messageSender = standUp.standUpMessage[i].uId;\n    const user = findUser(messageSender);\n    const messageSenderHandle = user.handleStr;\n    const messageContent = standUp.standUpMessage[i].message;\n\n    // join the message together\n    message += `${messageSenderHandle}: ${messageContent}\\n`;\n\n    // if the message is the last message, delete the last new line\n    if (i === messageLength - 1) {\n      message = message.slice(0, -1);\n    }\n  }\n  // add new lines in between messages\n\n  const newMessage = {\n    messageId: Math.floor(Math.random() * 1000000),\n    uId: user.authUserId,\n    message: message,\n    timeSent: Math.floor(Date.now() / 1000),\n    isPinned: false,\n    reacts: [\n      {\n        reactId: 1,\n        uIds: [] as number[],\n        isThisUserReacted: false,\n      },\n    ],\n  };\n\n  data.channels[channelIndex].messages.push(newMessage);\n\n  standUp.standUpActive = false;\n  standUp.standUpLength = 0;\n  standUp.standUpMessage = [];\n  standUp.standUpOwner = -1;\n\n  setData(data);\n\n  incrementMessageStat(user.authUserId);\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8a1258354b4489f8db13d37d08c59fef8930570e","contentHash":"334e4fc9b45753e3ff48d8ad78e9006baeb6d6696aac3cb2d1c2ac7466ba3e15"},"/Users/binvog/Documents/UNSW 2023T1/COMP1531/Indiv_projectbackend/iter4-project-backend/src/message.ts":{"path":"/Users/binvog/Documents/UNSW 2023T1/COMP1531/Indiv_projectbackend/iter4-project-backend/src/message.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":340}},"4":{"start":{"line":7,"column":18},"end":{"line":7,"column":40}},"5":{"start":{"line":8,"column":23},"end":{"line":8,"column":50}},"6":{"start":{"line":9,"column":20},"end":{"line":9,"column":59}},"7":{"start":{"line":18,"column":15},"end":{"line":18,"column":41}},"8":{"start":{"line":19,"column":15},"end":{"line":19,"column":58}},"9":{"start":{"line":20,"column":18},"end":{"line":20,"column":62}},"10":{"start":{"line":21,"column":23},"end":{"line":21,"column":69}},"11":{"start":{"line":23,"column":4},"end":{"line":25,"column":5}},"12":{"start":{"line":24,"column":8},"end":{"line":24,"column":66}},"13":{"start":{"line":26,"column":4},"end":{"line":28,"column":5}},"14":{"start":{"line":27,"column":8},"end":{"line":27,"column":72}},"15":{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},"16":{"start":{"line":30,"column":8},"end":{"line":30,"column":83}},"17":{"start":{"line":32,"column":4},"end":{"line":34,"column":5}},"18":{"start":{"line":33,"column":8},"end":{"line":33,"column":70}},"19":{"start":{"line":35,"column":4},"end":{"line":37,"column":5}},"20":{"start":{"line":36,"column":8},"end":{"line":36,"column":69}},"21":{"start":{"line":38,"column":23},"end":{"line":38,"column":71}},"22":{"start":{"line":39,"column":20},"end":{"line":39,"column":55}},"23":{"start":{"line":40,"column":21},"end":{"line":47,"column":5}},"24":{"start":{"line":48,"column":4},"end":{"line":48,"column":58}},"25":{"start":{"line":49,"column":4},"end":{"line":49,"column":35}},"26":{"start":{"line":50,"column":4},"end":{"line":50,"column":64}},"27":{"start":{"line":51,"column":4},"end":{"line":51,"column":81}},"28":{"start":{"line":52,"column":4},"end":{"line":52,"column":36}},"29":{"start":{"line":54,"column":0},"end":{"line":54,"column":38}},"30":{"start":{"line":62,"column":15},"end":{"line":62,"column":41}},"31":{"start":{"line":63,"column":15},"end":{"line":63,"column":58}},"32":{"start":{"line":64,"column":18},"end":{"line":64,"column":73}},"33":{"start":{"line":65,"column":13},"end":{"line":65,"column":63}},"34":{"start":{"line":66,"column":23},"end":{"line":66,"column":25}},"35":{"start":{"line":68,"column":4},"end":{"line":70,"column":5}},"36":{"start":{"line":69,"column":8},"end":{"line":69,"column":66}},"37":{"start":{"line":71,"column":4},"end":{"line":81,"column":5}},"38":{"start":{"line":72,"column":8},"end":{"line":72,"column":72}},"39":{"start":{"line":74,"column":9},"end":{"line":81,"column":5}},"40":{"start":{"line":75,"column":8},"end":{"line":75,"column":91}},"41":{"start":{"line":76,"column":8},"end":{"line":76,"column":24}},"42":{"start":{"line":79,"column":8},"end":{"line":79,"column":81}},"43":{"start":{"line":80,"column":8},"end":{"line":80,"column":19}},"44":{"start":{"line":82,"column":23},"end":{"line":82,"column":67}},"45":{"start":{"line":83,"column":22},"end":{"line":83,"column":65}},"46":{"start":{"line":84,"column":4},"end":{"line":86,"column":5}},"47":{"start":{"line":85,"column":8},"end":{"line":85,"column":83}},"48":{"start":{"line":87,"column":4},"end":{"line":111,"column":5}},"49":{"start":{"line":88,"column":27},"end":{"line":88,"column":83}},"50":{"start":{"line":89,"column":28},"end":{"line":89,"column":78}},"51":{"start":{"line":90,"column":8},"end":{"line":94,"column":9}},"52":{"start":{"line":93,"column":12},"end":{"line":93,"column":108}},"53":{"start":{"line":95,"column":8},"end":{"line":95,"column":69}},"54":{"start":{"line":96,"column":8},"end":{"line":96,"column":39}},"55":{"start":{"line":97,"column":8},"end":{"line":97,"column":18}},"56":{"start":{"line":100,"column":22},"end":{"line":100,"column":63}},"57":{"start":{"line":101,"column":28},"end":{"line":101,"column":67}},"58":{"start":{"line":102,"column":8},"end":{"line":105,"column":9}},"59":{"start":{"line":104,"column":12},"end":{"line":104,"column":91}},"60":{"start":{"line":106,"column":8},"end":{"line":106,"column":58}},"61":{"start":{"line":107,"column":8},"end":{"line":107,"column":39}},"62":{"start":{"line":108,"column":8},"end":{"line":108,"column":18}},"63":{"start":{"line":113,"column":0},"end":{"line":113,"column":42}},"64":{"start":{"line":122,"column":15},"end":{"line":122,"column":41}},"65":{"start":{"line":123,"column":15},"end":{"line":123,"column":58}},"66":{"start":{"line":124,"column":18},"end":{"line":124,"column":73}},"67":{"start":{"line":125,"column":13},"end":{"line":125,"column":63}},"68":{"start":{"line":126,"column":23},"end":{"line":126,"column":25}},"69":{"start":{"line":128,"column":4},"end":{"line":130,"column":5}},"70":{"start":{"line":129,"column":8},"end":{"line":129,"column":66}},"71":{"start":{"line":131,"column":4},"end":{"line":141,"column":5}},"72":{"start":{"line":132,"column":8},"end":{"line":132,"column":72}},"73":{"start":{"line":134,"column":9},"end":{"line":141,"column":5}},"74":{"start":{"line":135,"column":8},"end":{"line":135,"column":91}},"75":{"start":{"line":136,"column":8},"end":{"line":136,"column":24}},"76":{"start":{"line":139,"column":8},"end":{"line":139,"column":81}},"77":{"start":{"line":140,"column":8},"end":{"line":140,"column":19}},"78":{"start":{"line":142,"column":23},"end":{"line":142,"column":67}},"79":{"start":{"line":143,"column":22},"end":{"line":143,"column":65}},"80":{"start":{"line":144,"column":4},"end":{"line":146,"column":5}},"81":{"start":{"line":145,"column":8},"end":{"line":145,"column":83}},"82":{"start":{"line":147,"column":4},"end":{"line":189,"column":5}},"83":{"start":{"line":148,"column":27},"end":{"line":148,"column":83}},"84":{"start":{"line":149,"column":28},"end":{"line":149,"column":78}},"85":{"start":{"line":150,"column":8},"end":{"line":154,"column":9}},"86":{"start":{"line":153,"column":12},"end":{"line":153,"column":108}},"87":{"start":{"line":156,"column":8},"end":{"line":160,"column":9}},"88":{"start":{"line":157,"column":12},"end":{"line":157,"column":73}},"89":{"start":{"line":158,"column":12},"end":{"line":158,"column":43}},"90":{"start":{"line":159,"column":12},"end":{"line":159,"column":22}},"91":{"start":{"line":161,"column":8},"end":{"line":163,"column":9}},"92":{"start":{"line":162,"column":12},"end":{"line":162,"column":73}},"93":{"start":{"line":164,"column":8},"end":{"line":164,"column":77}},"94":{"start":{"line":165,"column":8},"end":{"line":165,"column":39}},"95":{"start":{"line":166,"column":8},"end":{"line":166,"column":85}},"96":{"start":{"line":167,"column":8},"end":{"line":167,"column":18}},"97":{"start":{"line":170,"column":22},"end":{"line":170,"column":63}},"98":{"start":{"line":171,"column":28},"end":{"line":171,"column":67}},"99":{"start":{"line":172,"column":8},"end":{"line":175,"column":9}},"100":{"start":{"line":174,"column":12},"end":{"line":174,"column":91}},"101":{"start":{"line":177,"column":8},"end":{"line":181,"column":9}},"102":{"start":{"line":178,"column":12},"end":{"line":178,"column":62}},"103":{"start":{"line":179,"column":12},"end":{"line":179,"column":43}},"104":{"start":{"line":180,"column":12},"end":{"line":180,"column":22}},"105":{"start":{"line":182,"column":8},"end":{"line":184,"column":9}},"106":{"start":{"line":183,"column":12},"end":{"line":183,"column":73}},"107":{"start":{"line":185,"column":8},"end":{"line":185,"column":66}},"108":{"start":{"line":186,"column":8},"end":{"line":186,"column":39}},"109":{"start":{"line":187,"column":8},"end":{"line":187,"column":75}},"110":{"start":{"line":188,"column":8},"end":{"line":188,"column":18}},"111":{"start":{"line":191,"column":0},"end":{"line":191,"column":38}},"112":{"start":{"line":200,"column":15},"end":{"line":200,"column":41}},"113":{"start":{"line":201,"column":15},"end":{"line":201,"column":58}},"114":{"start":{"line":202,"column":13},"end":{"line":202,"column":51}},"115":{"start":{"line":203,"column":23},"end":{"line":203,"column":64}},"116":{"start":{"line":204,"column":4},"end":{"line":206,"column":5}},"117":{"start":{"line":205,"column":8},"end":{"line":205,"column":66}},"118":{"start":{"line":207,"column":4},"end":{"line":209,"column":5}},"119":{"start":{"line":208,"column":8},"end":{"line":208,"column":67}},"120":{"start":{"line":210,"column":4},"end":{"line":212,"column":5}},"121":{"start":{"line":211,"column":8},"end":{"line":211,"column":78}},"122":{"start":{"line":213,"column":4},"end":{"line":215,"column":5}},"123":{"start":{"line":214,"column":8},"end":{"line":214,"column":70}},"124":{"start":{"line":216,"column":4},"end":{"line":218,"column":5}},"125":{"start":{"line":217,"column":8},"end":{"line":217,"column":69}},"126":{"start":{"line":219,"column":18},"end":{"line":219,"column":56}},"127":{"start":{"line":220,"column":20},"end":{"line":220,"column":55}},"128":{"start":{"line":221,"column":21},"end":{"line":228,"column":5}},"129":{"start":{"line":229,"column":4},"end":{"line":229,"column":47}},"130":{"start":{"line":230,"column":4},"end":{"line":230,"column":35}},"131":{"start":{"line":231,"column":4},"end":{"line":231,"column":71}},"132":{"start":{"line":232,"column":4},"end":{"line":232,"column":64}},"133":{"start":{"line":233,"column":4},"end":{"line":233,"column":36}},"134":{"start":{"line":235,"column":0},"end":{"line":235,"column":42}},"135":{"start":{"line":243,"column":15},"end":{"line":243,"column":41}},"136":{"start":{"line":244,"column":15},"end":{"line":244,"column":58}},"137":{"start":{"line":245,"column":18},"end":{"line":245,"column":73}},"138":{"start":{"line":246,"column":13},"end":{"line":246,"column":63}},"139":{"start":{"line":247,"column":23},"end":{"line":247,"column":25}},"140":{"start":{"line":249,"column":4},"end":{"line":251,"column":5}},"141":{"start":{"line":250,"column":8},"end":{"line":250,"column":66}},"142":{"start":{"line":252,"column":4},"end":{"line":262,"column":5}},"143":{"start":{"line":253,"column":8},"end":{"line":253,"column":67}},"144":{"start":{"line":255,"column":9},"end":{"line":262,"column":5}},"145":{"start":{"line":256,"column":8},"end":{"line":256,"column":91}},"146":{"start":{"line":257,"column":8},"end":{"line":257,"column":24}},"147":{"start":{"line":260,"column":8},"end":{"line":260,"column":81}},"148":{"start":{"line":261,"column":8},"end":{"line":261,"column":19}},"149":{"start":{"line":263,"column":23},"end":{"line":263,"column":67}},"150":{"start":{"line":264,"column":22},"end":{"line":264,"column":65}},"151":{"start":{"line":265,"column":4},"end":{"line":267,"column":5}},"152":{"start":{"line":266,"column":8},"end":{"line":266,"column":83}},"153":{"start":{"line":268,"column":4},"end":{"line":292,"column":5}},"154":{"start":{"line":269,"column":27},"end":{"line":269,"column":83}},"155":{"start":{"line":270,"column":28},"end":{"line":270,"column":78}},"156":{"start":{"line":271,"column":8},"end":{"line":273,"column":9}},"157":{"start":{"line":272,"column":12},"end":{"line":272,"column":79}},"158":{"start":{"line":275,"column":8},"end":{"line":278,"column":9}},"159":{"start":{"line":277,"column":12},"end":{"line":277,"column":97}},"160":{"start":{"line":279,"column":8},"end":{"line":279,"column":75}},"161":{"start":{"line":282,"column":22},"end":{"line":282,"column":63}},"162":{"start":{"line":283,"column":28},"end":{"line":283,"column":67}},"163":{"start":{"line":284,"column":8},"end":{"line":286,"column":9}},"164":{"start":{"line":285,"column":12},"end":{"line":285,"column":79}},"165":{"start":{"line":288,"column":8},"end":{"line":290,"column":9}},"166":{"start":{"line":289,"column":12},"end":{"line":289,"column":76}},"167":{"start":{"line":291,"column":8},"end":{"line":291,"column":64}},"168":{"start":{"line":293,"column":4},"end":{"line":293,"column":35}},"169":{"start":{"line":294,"column":4},"end":{"line":294,"column":14}},"170":{"start":{"line":296,"column":0},"end":{"line":296,"column":36}},"171":{"start":{"line":304,"column":15},"end":{"line":304,"column":41}},"172":{"start":{"line":305,"column":15},"end":{"line":305,"column":58}},"173":{"start":{"line":306,"column":18},"end":{"line":306,"column":73}},"174":{"start":{"line":307,"column":13},"end":{"line":307,"column":63}},"175":{"start":{"line":308,"column":23},"end":{"line":308,"column":25}},"176":{"start":{"line":310,"column":4},"end":{"line":312,"column":5}},"177":{"start":{"line":311,"column":8},"end":{"line":311,"column":66}},"178":{"start":{"line":313,"column":4},"end":{"line":323,"column":5}},"179":{"start":{"line":314,"column":8},"end":{"line":314,"column":67}},"180":{"start":{"line":316,"column":9},"end":{"line":323,"column":5}},"181":{"start":{"line":317,"column":8},"end":{"line":317,"column":91}},"182":{"start":{"line":318,"column":8},"end":{"line":318,"column":24}},"183":{"start":{"line":321,"column":8},"end":{"line":321,"column":81}},"184":{"start":{"line":322,"column":8},"end":{"line":322,"column":19}},"185":{"start":{"line":324,"column":23},"end":{"line":324,"column":67}},"186":{"start":{"line":325,"column":22},"end":{"line":325,"column":65}},"187":{"start":{"line":326,"column":4},"end":{"line":328,"column":5}},"188":{"start":{"line":327,"column":8},"end":{"line":327,"column":83}},"189":{"start":{"line":329,"column":4},"end":{"line":353,"column":5}},"190":{"start":{"line":330,"column":27},"end":{"line":330,"column":83}},"191":{"start":{"line":331,"column":28},"end":{"line":331,"column":78}},"192":{"start":{"line":332,"column":8},"end":{"line":334,"column":9}},"193":{"start":{"line":333,"column":12},"end":{"line":333,"column":75}},"194":{"start":{"line":336,"column":8},"end":{"line":339,"column":9}},"195":{"start":{"line":338,"column":12},"end":{"line":338,"column":97}},"196":{"start":{"line":340,"column":8},"end":{"line":340,"column":76}},"197":{"start":{"line":343,"column":22},"end":{"line":343,"column":63}},"198":{"start":{"line":344,"column":28},"end":{"line":344,"column":67}},"199":{"start":{"line":345,"column":8},"end":{"line":347,"column":9}},"200":{"start":{"line":346,"column":12},"end":{"line":346,"column":75}},"201":{"start":{"line":349,"column":8},"end":{"line":351,"column":9}},"202":{"start":{"line":350,"column":12},"end":{"line":350,"column":76}},"203":{"start":{"line":352,"column":8},"end":{"line":352,"column":65}},"204":{"start":{"line":354,"column":4},"end":{"line":354,"column":35}},"205":{"start":{"line":355,"column":4},"end":{"line":355,"column":14}},"206":{"start":{"line":357,"column":0},"end":{"line":357,"column":40}},"207":{"start":{"line":364,"column":15},"end":{"line":364,"column":58}},"208":{"start":{"line":365,"column":4},"end":{"line":367,"column":5}},"209":{"start":{"line":366,"column":8},"end":{"line":366,"column":66}},"210":{"start":{"line":368,"column":4},"end":{"line":373,"column":5}},"211":{"start":{"line":369,"column":8},"end":{"line":369,"column":68}},"212":{"start":{"line":371,"column":9},"end":{"line":373,"column":5}},"213":{"start":{"line":372,"column":8},"end":{"line":372,"column":67}},"214":{"start":{"line":374,"column":15},"end":{"line":374,"column":41}},"215":{"start":{"line":376,"column":22},"end":{"line":376,"column":35}},"216":{"start":{"line":377,"column":17},"end":{"line":377,"column":24}},"217":{"start":{"line":378,"column":22},"end":{"line":378,"column":24}},"218":{"start":{"line":379,"column":4},"end":{"line":388,"column":5}},"219":{"start":{"line":379,"column":18},"end":{"line":379,"column":19}},"220":{"start":{"line":379,"column":37},"end":{"line":379,"column":48}},"221":{"start":{"line":380,"column":22},"end":{"line":380,"column":39}},"222":{"start":{"line":381,"column":8},"end":{"line":387,"column":9}},"223":{"start":{"line":381,"column":22},"end":{"line":381,"column":23}},"224":{"start":{"line":381,"column":30},"end":{"line":381,"column":46}},"225":{"start":{"line":382,"column":26},"end":{"line":382,"column":32}},"226":{"start":{"line":383,"column":12},"end":{"line":386,"column":13}},"227":{"start":{"line":385,"column":16},"end":{"line":385,"column":42}},"228":{"start":{"line":389,"column":4},"end":{"line":398,"column":5}},"229":{"start":{"line":389,"column":18},"end":{"line":389,"column":19}},"230":{"start":{"line":389,"column":32},"end":{"line":389,"column":38}},"231":{"start":{"line":390,"column":17},"end":{"line":390,"column":29}},"232":{"start":{"line":391,"column":8},"end":{"line":397,"column":9}},"233":{"start":{"line":391,"column":22},"end":{"line":391,"column":23}},"234":{"start":{"line":391,"column":30},"end":{"line":391,"column":41}},"235":{"start":{"line":392,"column":26},"end":{"line":392,"column":32}},"236":{"start":{"line":393,"column":12},"end":{"line":396,"column":13}},"237":{"start":{"line":395,"column":16},"end":{"line":395,"column":42}},"238":{"start":{"line":399,"column":16},"end":{"line":399,"column":17}},"239":{"start":{"line":400,"column":14},"end":{"line":400,"column":32}},"240":{"start":{"line":401,"column":28},"end":{"line":405,"column":5}},"241":{"start":{"line":406,"column":4},"end":{"line":406,"column":29}},"242":{"start":{"line":408,"column":0},"end":{"line":408,"column":28}},"243":{"start":{"line":410,"column":15},"end":{"line":410,"column":58}},"244":{"start":{"line":411,"column":4},"end":{"line":413,"column":5}},"245":{"start":{"line":412,"column":8},"end":{"line":412,"column":66}},"246":{"start":{"line":414,"column":15},"end":{"line":414,"column":41}},"247":{"start":{"line":415,"column":20},"end":{"line":415,"column":72}},"248":{"start":{"line":416,"column":24},"end":{"line":416,"column":59}},"249":{"start":{"line":417,"column":4},"end":{"line":417,"column":28}},"250":{"start":{"line":418,"column":30},"end":{"line":418,"column":56}},"251":{"start":{"line":419,"column":4},"end":{"line":419,"column":50}},"252":{"start":{"line":421,"column":0},"end":{"line":421,"column":48}},"253":{"start":{"line":431,"column":15},"end":{"line":431,"column":41}},"254":{"start":{"line":432,"column":15},"end":{"line":432,"column":58}},"255":{"start":{"line":433,"column":18},"end":{"line":433,"column":62}},"256":{"start":{"line":434,"column":23},"end":{"line":434,"column":69}},"257":{"start":{"line":436,"column":4},"end":{"line":438,"column":5}},"258":{"start":{"line":437,"column":8},"end":{"line":437,"column":66}},"259":{"start":{"line":439,"column":4},"end":{"line":441,"column":5}},"260":{"start":{"line":440,"column":8},"end":{"line":440,"column":72}},"261":{"start":{"line":442,"column":4},"end":{"line":444,"column":5}},"262":{"start":{"line":443,"column":8},"end":{"line":443,"column":83}},"263":{"start":{"line":445,"column":4},"end":{"line":447,"column":5}},"264":{"start":{"line":446,"column":8},"end":{"line":446,"column":70}},"265":{"start":{"line":448,"column":4},"end":{"line":450,"column":5}},"266":{"start":{"line":449,"column":8},"end":{"line":449,"column":69}},"267":{"start":{"line":451,"column":22},"end":{"line":451,"column":51}},"268":{"start":{"line":452,"column":4},"end":{"line":454,"column":5}},"269":{"start":{"line":453,"column":8},"end":{"line":453,"column":88}},"270":{"start":{"line":455,"column":23},"end":{"line":455,"column":71}},"271":{"start":{"line":456,"column":20},"end":{"line":456,"column":55}},"272":{"start":{"line":457,"column":20},"end":{"line":457,"column":42}},"273":{"start":{"line":458,"column":4},"end":{"line":471,"column":25}},"274":{"start":{"line":459,"column":25},"end":{"line":466,"column":9}},"275":{"start":{"line":467,"column":8},"end":{"line":467,"column":62}},"276":{"start":{"line":468,"column":8},"end":{"line":468,"column":39}},"277":{"start":{"line":469,"column":8},"end":{"line":469,"column":85}},"278":{"start":{"line":470,"column":8},"end":{"line":470,"column":68}},"279":{"start":{"line":472,"column":4},"end":{"line":472,"column":36}},"280":{"start":{"line":474,"column":0},"end":{"line":474,"column":48}},"281":{"start":{"line":484,"column":15},"end":{"line":484,"column":41}},"282":{"start":{"line":485,"column":15},"end":{"line":485,"column":58}},"283":{"start":{"line":486,"column":13},"end":{"line":486,"column":51}},"284":{"start":{"line":487,"column":23},"end":{"line":487,"column":64}},"285":{"start":{"line":488,"column":4},"end":{"line":490,"column":5}},"286":{"start":{"line":489,"column":8},"end":{"line":489,"column":66}},"287":{"start":{"line":491,"column":4},"end":{"line":493,"column":5}},"288":{"start":{"line":492,"column":8},"end":{"line":492,"column":67}},"289":{"start":{"line":494,"column":4},"end":{"line":496,"column":5}},"290":{"start":{"line":495,"column":8},"end":{"line":495,"column":78}},"291":{"start":{"line":497,"column":4},"end":{"line":499,"column":5}},"292":{"start":{"line":498,"column":8},"end":{"line":498,"column":70}},"293":{"start":{"line":500,"column":4},"end":{"line":502,"column":5}},"294":{"start":{"line":501,"column":8},"end":{"line":501,"column":69}},"295":{"start":{"line":503,"column":22},"end":{"line":503,"column":51}},"296":{"start":{"line":504,"column":4},"end":{"line":506,"column":5}},"297":{"start":{"line":505,"column":8},"end":{"line":505,"column":88}},"298":{"start":{"line":507,"column":18},"end":{"line":507,"column":56}},"299":{"start":{"line":508,"column":20},"end":{"line":508,"column":55}},"300":{"start":{"line":509,"column":20},"end":{"line":509,"column":42}},"301":{"start":{"line":510,"column":4},"end":{"line":523,"column":25}},"302":{"start":{"line":511,"column":25},"end":{"line":518,"column":9}},"303":{"start":{"line":519,"column":8},"end":{"line":519,"column":51}},"304":{"start":{"line":520,"column":8},"end":{"line":520,"column":39}},"305":{"start":{"line":521,"column":8},"end":{"line":521,"column":75}},"306":{"start":{"line":522,"column":8},"end":{"line":522,"column":68}},"307":{"start":{"line":524,"column":4},"end":{"line":524,"column":36}},"308":{"start":{"line":526,"column":0},"end":{"line":526,"column":52}},"309":{"start":{"line":537,"column":15},"end":{"line":537,"column":41}},"310":{"start":{"line":538,"column":15},"end":{"line":538,"column":58}},"311":{"start":{"line":539,"column":18},"end":{"line":539,"column":75}},"312":{"start":{"line":540,"column":13},"end":{"line":540,"column":65}},"313":{"start":{"line":541,"column":29},"end":{"line":541,"column":77}},"314":{"start":{"line":542,"column":24},"end":{"line":542,"column":62}},"315":{"start":{"line":543,"column":23},"end":{"line":543,"column":25}},"316":{"start":{"line":545,"column":4},"end":{"line":547,"column":5}},"317":{"start":{"line":546,"column":8},"end":{"line":546,"column":63}},"318":{"start":{"line":548,"column":4},"end":{"line":550,"column":5}},"319":{"start":{"line":549,"column":8},"end":{"line":549,"column":76}},"320":{"start":{"line":552,"column":4},"end":{"line":562,"column":5}},"321":{"start":{"line":553,"column":8},"end":{"line":553,"column":72}},"322":{"start":{"line":555,"column":9},"end":{"line":562,"column":5}},"323":{"start":{"line":556,"column":8},"end":{"line":556,"column":93}},"324":{"start":{"line":557,"column":8},"end":{"line":557,"column":24}},"325":{"start":{"line":560,"column":8},"end":{"line":560,"column":83}},"326":{"start":{"line":561,"column":8},"end":{"line":561,"column":19}},"327":{"start":{"line":563,"column":4},"end":{"line":565,"column":5}},"328":{"start":{"line":564,"column":8},"end":{"line":564,"column":83}},"329":{"start":{"line":566,"column":4},"end":{"line":568,"column":5}},"330":{"start":{"line":567,"column":8},"end":{"line":567,"column":87}},"331":{"start":{"line":569,"column":23},"end":{"line":569,"column":67}},"332":{"start":{"line":570,"column":4},"end":{"line":572,"column":5}},"333":{"start":{"line":571,"column":8},"end":{"line":571,"column":84}},"334":{"start":{"line":573,"column":26},"end":{"line":573,"column":61}},"335":{"start":{"line":575,"column":4},"end":{"line":617,"column":5}},"336":{"start":{"line":576,"column":8},"end":{"line":576,"column":96}},"337":{"start":{"line":577,"column":8},"end":{"line":579,"column":9}},"338":{"start":{"line":578,"column":12},"end":{"line":578,"column":94}},"339":{"start":{"line":580,"column":25},"end":{"line":587,"column":9}},"340":{"start":{"line":588,"column":8},"end":{"line":588,"column":68}},"341":{"start":{"line":589,"column":8},"end":{"line":589,"column":39}},"342":{"start":{"line":590,"column":8},"end":{"line":590,"column":68}},"343":{"start":{"line":591,"column":28},"end":{"line":591,"column":61}},"344":{"start":{"line":592,"column":33},"end":{"line":592,"column":85}},"345":{"start":{"line":593,"column":8},"end":{"line":593,"column":97}},"346":{"start":{"line":594,"column":8},"end":{"line":594,"column":52}},"347":{"start":{"line":598,"column":8},"end":{"line":598,"column":85}},"348":{"start":{"line":599,"column":8},"end":{"line":601,"column":9}},"349":{"start":{"line":600,"column":12},"end":{"line":600,"column":89}},"350":{"start":{"line":602,"column":25},"end":{"line":609,"column":9}},"351":{"start":{"line":610,"column":8},"end":{"line":610,"column":57}},"352":{"start":{"line":611,"column":8},"end":{"line":611,"column":39}},"353":{"start":{"line":612,"column":8},"end":{"line":612,"column":68}},"354":{"start":{"line":613,"column":23},"end":{"line":613,"column":45}},"355":{"start":{"line":614,"column":33},"end":{"line":614,"column":80}},"356":{"start":{"line":615,"column":8},"end":{"line":615,"column":87}},"357":{"start":{"line":616,"column":8},"end":{"line":616,"column":52}},"358":{"start":{"line":619,"column":0},"end":{"line":619,"column":40}},"359":{"start":{"line":629,"column":15},"end":{"line":629,"column":41}},"360":{"start":{"line":630,"column":21},"end":{"line":630,"column":64}},"361":{"start":{"line":631,"column":18},"end":{"line":631,"column":73}},"362":{"start":{"line":632,"column":13},"end":{"line":632,"column":63}},"363":{"start":{"line":633,"column":4},"end":{"line":635,"column":5}},"364":{"start":{"line":634,"column":8},"end":{"line":634,"column":63}},"365":{"start":{"line":636,"column":4},"end":{"line":638,"column":5}},"366":{"start":{"line":637,"column":8},"end":{"line":637,"column":72}},"367":{"start":{"line":639,"column":4},"end":{"line":641,"column":5}},"368":{"start":{"line":640,"column":8},"end":{"line":640,"column":66}},"369":{"start":{"line":642,"column":23},"end":{"line":642,"column":25}},"370":{"start":{"line":645,"column":4},"end":{"line":654,"column":5}},"371":{"start":{"line":646,"column":8},"end":{"line":646,"column":91}},"372":{"start":{"line":647,"column":8},"end":{"line":647,"column":73}},"373":{"start":{"line":648,"column":8},"end":{"line":648,"column":24}},"374":{"start":{"line":651,"column":8},"end":{"line":651,"column":81}},"375":{"start":{"line":652,"column":8},"end":{"line":652,"column":58}},"376":{"start":{"line":653,"column":8},"end":{"line":653,"column":19}},"377":{"start":{"line":655,"column":23},"end":{"line":655,"column":67}},"378":{"start":{"line":656,"column":4},"end":{"line":658,"column":5}},"379":{"start":{"line":657,"column":8},"end":{"line":657,"column":82}},"380":{"start":{"line":659,"column":4},"end":{"line":722,"column":5}},"381":{"start":{"line":661,"column":8},"end":{"line":664,"column":9}},"382":{"start":{"line":663,"column":12},"end":{"line":663,"column":89}},"383":{"start":{"line":665,"column":8},"end":{"line":679,"column":9}},"384":{"start":{"line":666,"column":27},"end":{"line":669,"column":13}},"385":{"start":{"line":670,"column":12},"end":{"line":670,"column":78}},"386":{"start":{"line":674,"column":12},"end":{"line":678,"column":15}},"387":{"start":{"line":675,"column":16},"end":{"line":677,"column":17}},"388":{"start":{"line":676,"column":20},"end":{"line":676,"column":59}},"389":{"start":{"line":681,"column":8},"end":{"line":689,"column":9}},"390":{"start":{"line":682,"column":34},"end":{"line":686,"column":13}},"391":{"start":{"line":687,"column":28},"end":{"line":687,"column":112}},"392":{"start":{"line":688,"column":12},"end":{"line":688,"column":70}},"393":{"start":{"line":693,"column":8},"end":{"line":696,"column":9}},"394":{"start":{"line":695,"column":12},"end":{"line":695,"column":89}},"395":{"start":{"line":697,"column":8},"end":{"line":711,"column":9}},"396":{"start":{"line":698,"column":27},"end":{"line":701,"column":13}},"397":{"start":{"line":702,"column":12},"end":{"line":702,"column":72}},"398":{"start":{"line":706,"column":12},"end":{"line":710,"column":15}},"399":{"start":{"line":707,"column":16},"end":{"line":709,"column":17}},"400":{"start":{"line":708,"column":20},"end":{"line":708,"column":59}},"401":{"start":{"line":713,"column":8},"end":{"line":721,"column":9}},"402":{"start":{"line":714,"column":34},"end":{"line":718,"column":13}},"403":{"start":{"line":719,"column":28},"end":{"line":719,"column":106}},"404":{"start":{"line":720,"column":12},"end":{"line":720,"column":70}},"405":{"start":{"line":723,"column":4},"end":{"line":723,"column":35}},"406":{"start":{"line":724,"column":4},"end":{"line":724,"column":14}},"407":{"start":{"line":726,"column":0},"end":{"line":726,"column":40}},"408":{"start":{"line":736,"column":15},"end":{"line":736,"column":41}},"409":{"start":{"line":737,"column":21},"end":{"line":737,"column":64}},"410":{"start":{"line":738,"column":18},"end":{"line":738,"column":73}},"411":{"start":{"line":739,"column":13},"end":{"line":739,"column":63}},"412":{"start":{"line":740,"column":4},"end":{"line":742,"column":5}},"413":{"start":{"line":741,"column":8},"end":{"line":741,"column":63}},"414":{"start":{"line":743,"column":4},"end":{"line":745,"column":5}},"415":{"start":{"line":744,"column":8},"end":{"line":744,"column":72}},"416":{"start":{"line":746,"column":4},"end":{"line":748,"column":5}},"417":{"start":{"line":747,"column":8},"end":{"line":747,"column":66}},"418":{"start":{"line":749,"column":23},"end":{"line":749,"column":25}},"419":{"start":{"line":752,"column":4},"end":{"line":761,"column":5}},"420":{"start":{"line":753,"column":8},"end":{"line":753,"column":91}},"421":{"start":{"line":754,"column":8},"end":{"line":754,"column":73}},"422":{"start":{"line":755,"column":8},"end":{"line":755,"column":24}},"423":{"start":{"line":758,"column":8},"end":{"line":758,"column":81}},"424":{"start":{"line":759,"column":8},"end":{"line":759,"column":58}},"425":{"start":{"line":760,"column":8},"end":{"line":760,"column":19}},"426":{"start":{"line":762,"column":23},"end":{"line":762,"column":67}},"427":{"start":{"line":763,"column":4},"end":{"line":765,"column":5}},"428":{"start":{"line":764,"column":8},"end":{"line":764,"column":82}},"429":{"start":{"line":766,"column":4},"end":{"line":803,"column":5}},"430":{"start":{"line":768,"column":8},"end":{"line":770,"column":9}},"431":{"start":{"line":769,"column":12},"end":{"line":769,"column":84}},"432":{"start":{"line":771,"column":8},"end":{"line":773,"column":9}},"433":{"start":{"line":772,"column":12},"end":{"line":772,"column":90}},"434":{"start":{"line":775,"column":8},"end":{"line":779,"column":11}},"435":{"start":{"line":776,"column":12},"end":{"line":778,"column":13}},"436":{"start":{"line":777,"column":16},"end":{"line":777,"column":80}},"437":{"start":{"line":781,"column":8},"end":{"line":783,"column":9}},"438":{"start":{"line":782,"column":12},"end":{"line":782,"column":68}},"439":{"start":{"line":786,"column":8},"end":{"line":788,"column":9}},"440":{"start":{"line":787,"column":12},"end":{"line":787,"column":84}},"441":{"start":{"line":790,"column":8},"end":{"line":792,"column":9}},"442":{"start":{"line":791,"column":12},"end":{"line":791,"column":90}},"443":{"start":{"line":794,"column":8},"end":{"line":798,"column":11}},"444":{"start":{"line":795,"column":12},"end":{"line":797,"column":13}},"445":{"start":{"line":796,"column":16},"end":{"line":796,"column":80}},"446":{"start":{"line":800,"column":8},"end":{"line":802,"column":9}},"447":{"start":{"line":801,"column":12},"end":{"line":801,"column":62}},"448":{"start":{"line":804,"column":4},"end":{"line":804,"column":35}},"449":{"start":{"line":805,"column":4},"end":{"line":805,"column":14}},"450":{"start":{"line":807,"column":0},"end":{"line":807,"column":44}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"messageSendV1","decl":{"start":{"line":17,"column":9},"end":{"line":17,"column":22}},"loc":{"start":{"line":17,"column":50},"end":{"line":53,"column":1}},"line":17},"2":{"name":"messageRemoveV1","decl":{"start":{"line":61,"column":9},"end":{"line":61,"column":24}},"loc":{"start":{"line":61,"column":43},"end":{"line":112,"column":1}},"line":61},"3":{"name":"messageEditV1","decl":{"start":{"line":121,"column":9},"end":{"line":121,"column":22}},"loc":{"start":{"line":121,"column":50},"end":{"line":190,"column":1}},"line":121},"4":{"name":"messageSendDmV1","decl":{"start":{"line":199,"column":9},"end":{"line":199,"column":24}},"loc":{"start":{"line":199,"column":47},"end":{"line":234,"column":1}},"line":199},"5":{"name":"messagePinV1","decl":{"start":{"line":242,"column":9},"end":{"line":242,"column":21}},"loc":{"start":{"line":242,"column":40},"end":{"line":295,"column":1}},"line":242},"6":{"name":"messageUnpinV1","decl":{"start":{"line":303,"column":9},"end":{"line":303,"column":23}},"loc":{"start":{"line":303,"column":42},"end":{"line":356,"column":1}},"line":303},"7":{"name":"searchV1","decl":{"start":{"line":363,"column":9},"end":{"line":363,"column":17}},"loc":{"start":{"line":363,"column":35},"end":{"line":407,"column":1}},"line":363},"8":{"name":"notificationsGetV1","decl":{"start":{"line":409,"column":9},"end":{"line":409,"column":27}},"loc":{"start":{"line":409,"column":35},"end":{"line":420,"column":1}},"line":409},"9":{"name":"messageSendLaterV1","decl":{"start":{"line":430,"column":9},"end":{"line":430,"column":27}},"loc":{"start":{"line":430,"column":65},"end":{"line":473,"column":1}},"line":430},"10":{"name":"(anonymous_10)","decl":{"start":{"line":458,"column":15},"end":{"line":458,"column":16}},"loc":{"start":{"line":458,"column":27},"end":{"line":471,"column":5}},"line":458},"11":{"name":"messageSendLaterDmV1","decl":{"start":{"line":483,"column":9},"end":{"line":483,"column":29}},"loc":{"start":{"line":483,"column":62},"end":{"line":525,"column":1}},"line":483},"12":{"name":"(anonymous_12)","decl":{"start":{"line":510,"column":15},"end":{"line":510,"column":16}},"loc":{"start":{"line":510,"column":27},"end":{"line":523,"column":5}},"line":510},"13":{"name":"messageShareV1","decl":{"start":{"line":536,"column":9},"end":{"line":536,"column":23}},"loc":{"start":{"line":536,"column":70},"end":{"line":618,"column":1}},"line":536},"14":{"name":"messageReactV1","decl":{"start":{"line":627,"column":9},"end":{"line":627,"column":23}},"loc":{"start":{"line":627,"column":51},"end":{"line":725,"column":1}},"line":627},"15":{"name":"(anonymous_15)","decl":{"start":{"line":674,"column":71},"end":{"line":674,"column":72}},"loc":{"start":{"line":674,"column":88},"end":{"line":678,"column":13}},"line":674},"16":{"name":"(anonymous_16)","decl":{"start":{"line":706,"column":65},"end":{"line":706,"column":66}},"loc":{"start":{"line":706,"column":82},"end":{"line":710,"column":13}},"line":706},"17":{"name":"messageUnreactV1","decl":{"start":{"line":734,"column":9},"end":{"line":734,"column":25}},"loc":{"start":{"line":734,"column":53},"end":{"line":806,"column":1}},"line":734},"18":{"name":"(anonymous_18)","decl":{"start":{"line":775,"column":67},"end":{"line":775,"column":68}},"loc":{"start":{"line":775,"column":84},"end":{"line":779,"column":9}},"line":775},"19":{"name":"(anonymous_19)","decl":{"start":{"line":794,"column":61},"end":{"line":794,"column":62}},"loc":{"start":{"line":794,"column":78},"end":{"line":798,"column":9}},"line":794}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":23,"column":4},"end":{"line":25,"column":5}},"type":"if","locations":[{"start":{"line":23,"column":4},"end":{"line":25,"column":5}},{"start":{"line":23,"column":4},"end":{"line":25,"column":5}}],"line":23},"4":{"loc":{"start":{"line":26,"column":4},"end":{"line":28,"column":5}},"type":"if","locations":[{"start":{"line":26,"column":4},"end":{"line":28,"column":5}},{"start":{"line":26,"column":4},"end":{"line":28,"column":5}}],"line":26},"5":{"loc":{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},"type":"if","locations":[{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},{"start":{"line":29,"column":4},"end":{"line":31,"column":5}}],"line":29},"6":{"loc":{"start":{"line":32,"column":4},"end":{"line":34,"column":5}},"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":34,"column":5}},{"start":{"line":32,"column":4},"end":{"line":34,"column":5}}],"line":32},"7":{"loc":{"start":{"line":35,"column":4},"end":{"line":37,"column":5}},"type":"if","locations":[{"start":{"line":35,"column":4},"end":{"line":37,"column":5}},{"start":{"line":35,"column":4},"end":{"line":37,"column":5}}],"line":35},"8":{"loc":{"start":{"line":68,"column":4},"end":{"line":70,"column":5}},"type":"if","locations":[{"start":{"line":68,"column":4},"end":{"line":70,"column":5}},{"start":{"line":68,"column":4},"end":{"line":70,"column":5}}],"line":68},"9":{"loc":{"start":{"line":71,"column":4},"end":{"line":81,"column":5}},"type":"if","locations":[{"start":{"line":71,"column":4},"end":{"line":81,"column":5}},{"start":{"line":71,"column":4},"end":{"line":81,"column":5}}],"line":71},"10":{"loc":{"start":{"line":71,"column":8},"end":{"line":71,"column":49}},"type":"binary-expr","locations":[{"start":{"line":71,"column":8},"end":{"line":71,"column":29}},{"start":{"line":71,"column":33},"end":{"line":71,"column":49}}],"line":71},"11":{"loc":{"start":{"line":74,"column":9},"end":{"line":81,"column":5}},"type":"if","locations":[{"start":{"line":74,"column":9},"end":{"line":81,"column":5}},{"start":{"line":74,"column":9},"end":{"line":81,"column":5}}],"line":74},"12":{"loc":{"start":{"line":84,"column":4},"end":{"line":86,"column":5}},"type":"if","locations":[{"start":{"line":84,"column":4},"end":{"line":86,"column":5}},{"start":{"line":84,"column":4},"end":{"line":86,"column":5}}],"line":84},"13":{"loc":{"start":{"line":87,"column":4},"end":{"line":111,"column":5}},"type":"if","locations":[{"start":{"line":87,"column":4},"end":{"line":111,"column":5}},{"start":{"line":87,"column":4},"end":{"line":111,"column":5}}],"line":87},"14":{"loc":{"start":{"line":90,"column":8},"end":{"line":94,"column":9}},"type":"if","locations":[{"start":{"line":90,"column":8},"end":{"line":94,"column":9}},{"start":{"line":90,"column":8},"end":{"line":94,"column":9}}],"line":90},"15":{"loc":{"start":{"line":90,"column":12},"end":{"line":92,"column":36}},"type":"binary-expr","locations":[{"start":{"line":90,"column":12},"end":{"line":90,"column":49}},{"start":{"line":91,"column":12},"end":{"line":91,"column":59}},{"start":{"line":92,"column":12},"end":{"line":92,"column":36}}],"line":90},"16":{"loc":{"start":{"line":102,"column":8},"end":{"line":105,"column":9}},"type":"if","locations":[{"start":{"line":102,"column":8},"end":{"line":105,"column":9}},{"start":{"line":102,"column":8},"end":{"line":105,"column":9}}],"line":102},"17":{"loc":{"start":{"line":102,"column":12},"end":{"line":103,"column":59}},"type":"binary-expr","locations":[{"start":{"line":102,"column":12},"end":{"line":102,"column":49}},{"start":{"line":103,"column":12},"end":{"line":103,"column":59}}],"line":102},"18":{"loc":{"start":{"line":128,"column":4},"end":{"line":130,"column":5}},"type":"if","locations":[{"start":{"line":128,"column":4},"end":{"line":130,"column":5}},{"start":{"line":128,"column":4},"end":{"line":130,"column":5}}],"line":128},"19":{"loc":{"start":{"line":131,"column":4},"end":{"line":141,"column":5}},"type":"if","locations":[{"start":{"line":131,"column":4},"end":{"line":141,"column":5}},{"start":{"line":131,"column":4},"end":{"line":141,"column":5}}],"line":131},"20":{"loc":{"start":{"line":131,"column":8},"end":{"line":131,"column":49}},"type":"binary-expr","locations":[{"start":{"line":131,"column":8},"end":{"line":131,"column":29}},{"start":{"line":131,"column":33},"end":{"line":131,"column":49}}],"line":131},"21":{"loc":{"start":{"line":134,"column":9},"end":{"line":141,"column":5}},"type":"if","locations":[{"start":{"line":134,"column":9},"end":{"line":141,"column":5}},{"start":{"line":134,"column":9},"end":{"line":141,"column":5}}],"line":134},"22":{"loc":{"start":{"line":144,"column":4},"end":{"line":146,"column":5}},"type":"if","locations":[{"start":{"line":144,"column":4},"end":{"line":146,"column":5}},{"start":{"line":144,"column":4},"end":{"line":146,"column":5}}],"line":144},"23":{"loc":{"start":{"line":147,"column":4},"end":{"line":189,"column":5}},"type":"if","locations":[{"start":{"line":147,"column":4},"end":{"line":189,"column":5}},{"start":{"line":147,"column":4},"end":{"line":189,"column":5}}],"line":147},"24":{"loc":{"start":{"line":150,"column":8},"end":{"line":154,"column":9}},"type":"if","locations":[{"start":{"line":150,"column":8},"end":{"line":154,"column":9}},{"start":{"line":150,"column":8},"end":{"line":154,"column":9}}],"line":150},"25":{"loc":{"start":{"line":150,"column":12},"end":{"line":152,"column":36}},"type":"binary-expr","locations":[{"start":{"line":150,"column":12},"end":{"line":150,"column":49}},{"start":{"line":151,"column":12},"end":{"line":151,"column":59}},{"start":{"line":152,"column":12},"end":{"line":152,"column":36}}],"line":150},"26":{"loc":{"start":{"line":156,"column":8},"end":{"line":160,"column":9}},"type":"if","locations":[{"start":{"line":156,"column":8},"end":{"line":160,"column":9}},{"start":{"line":156,"column":8},"end":{"line":160,"column":9}}],"line":156},"27":{"loc":{"start":{"line":161,"column":8},"end":{"line":163,"column":9}},"type":"if","locations":[{"start":{"line":161,"column":8},"end":{"line":163,"column":9}},{"start":{"line":161,"column":8},"end":{"line":163,"column":9}}],"line":161},"28":{"loc":{"start":{"line":172,"column":8},"end":{"line":175,"column":9}},"type":"if","locations":[{"start":{"line":172,"column":8},"end":{"line":175,"column":9}},{"start":{"line":172,"column":8},"end":{"line":175,"column":9}}],"line":172},"29":{"loc":{"start":{"line":172,"column":12},"end":{"line":173,"column":59}},"type":"binary-expr","locations":[{"start":{"line":172,"column":12},"end":{"line":172,"column":49}},{"start":{"line":173,"column":12},"end":{"line":173,"column":59}}],"line":172},"30":{"loc":{"start":{"line":177,"column":8},"end":{"line":181,"column":9}},"type":"if","locations":[{"start":{"line":177,"column":8},"end":{"line":181,"column":9}},{"start":{"line":177,"column":8},"end":{"line":181,"column":9}}],"line":177},"31":{"loc":{"start":{"line":182,"column":8},"end":{"line":184,"column":9}},"type":"if","locations":[{"start":{"line":182,"column":8},"end":{"line":184,"column":9}},{"start":{"line":182,"column":8},"end":{"line":184,"column":9}}],"line":182},"32":{"loc":{"start":{"line":204,"column":4},"end":{"line":206,"column":5}},"type":"if","locations":[{"start":{"line":204,"column":4},"end":{"line":206,"column":5}},{"start":{"line":204,"column":4},"end":{"line":206,"column":5}}],"line":204},"33":{"loc":{"start":{"line":207,"column":4},"end":{"line":209,"column":5}},"type":"if","locations":[{"start":{"line":207,"column":4},"end":{"line":209,"column":5}},{"start":{"line":207,"column":4},"end":{"line":209,"column":5}}],"line":207},"34":{"loc":{"start":{"line":210,"column":4},"end":{"line":212,"column":5}},"type":"if","locations":[{"start":{"line":210,"column":4},"end":{"line":212,"column":5}},{"start":{"line":210,"column":4},"end":{"line":212,"column":5}}],"line":210},"35":{"loc":{"start":{"line":213,"column":4},"end":{"line":215,"column":5}},"type":"if","locations":[{"start":{"line":213,"column":4},"end":{"line":215,"column":5}},{"start":{"line":213,"column":4},"end":{"line":215,"column":5}}],"line":213},"36":{"loc":{"start":{"line":216,"column":4},"end":{"line":218,"column":5}},"type":"if","locations":[{"start":{"line":216,"column":4},"end":{"line":218,"column":5}},{"start":{"line":216,"column":4},"end":{"line":218,"column":5}}],"line":216},"37":{"loc":{"start":{"line":249,"column":4},"end":{"line":251,"column":5}},"type":"if","locations":[{"start":{"line":249,"column":4},"end":{"line":251,"column":5}},{"start":{"line":249,"column":4},"end":{"line":251,"column":5}}],"line":249},"38":{"loc":{"start":{"line":252,"column":4},"end":{"line":262,"column":5}},"type":"if","locations":[{"start":{"line":252,"column":4},"end":{"line":262,"column":5}},{"start":{"line":252,"column":4},"end":{"line":262,"column":5}}],"line":252},"39":{"loc":{"start":{"line":252,"column":8},"end":{"line":252,"column":49}},"type":"binary-expr","locations":[{"start":{"line":252,"column":8},"end":{"line":252,"column":29}},{"start":{"line":252,"column":33},"end":{"line":252,"column":49}}],"line":252},"40":{"loc":{"start":{"line":255,"column":9},"end":{"line":262,"column":5}},"type":"if","locations":[{"start":{"line":255,"column":9},"end":{"line":262,"column":5}},{"start":{"line":255,"column":9},"end":{"line":262,"column":5}}],"line":255},"41":{"loc":{"start":{"line":265,"column":4},"end":{"line":267,"column":5}},"type":"if","locations":[{"start":{"line":265,"column":4},"end":{"line":267,"column":5}},{"start":{"line":265,"column":4},"end":{"line":267,"column":5}}],"line":265},"42":{"loc":{"start":{"line":268,"column":4},"end":{"line":292,"column":5}},"type":"if","locations":[{"start":{"line":268,"column":4},"end":{"line":292,"column":5}},{"start":{"line":268,"column":4},"end":{"line":292,"column":5}}],"line":268},"43":{"loc":{"start":{"line":271,"column":8},"end":{"line":273,"column":9}},"type":"if","locations":[{"start":{"line":271,"column":8},"end":{"line":273,"column":9}},{"start":{"line":271,"column":8},"end":{"line":273,"column":9}}],"line":271},"44":{"loc":{"start":{"line":275,"column":8},"end":{"line":278,"column":9}},"type":"if","locations":[{"start":{"line":275,"column":8},"end":{"line":278,"column":9}},{"start":{"line":275,"column":8},"end":{"line":278,"column":9}}],"line":275},"45":{"loc":{"start":{"line":275,"column":12},"end":{"line":276,"column":36}},"type":"binary-expr","locations":[{"start":{"line":275,"column":12},"end":{"line":275,"column":59}},{"start":{"line":276,"column":12},"end":{"line":276,"column":36}}],"line":275},"46":{"loc":{"start":{"line":284,"column":8},"end":{"line":286,"column":9}},"type":"if","locations":[{"start":{"line":284,"column":8},"end":{"line":286,"column":9}},{"start":{"line":284,"column":8},"end":{"line":286,"column":9}}],"line":284},"47":{"loc":{"start":{"line":288,"column":8},"end":{"line":290,"column":9}},"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":290,"column":9}},{"start":{"line":288,"column":8},"end":{"line":290,"column":9}}],"line":288},"48":{"loc":{"start":{"line":310,"column":4},"end":{"line":312,"column":5}},"type":"if","locations":[{"start":{"line":310,"column":4},"end":{"line":312,"column":5}},{"start":{"line":310,"column":4},"end":{"line":312,"column":5}}],"line":310},"49":{"loc":{"start":{"line":313,"column":4},"end":{"line":323,"column":5}},"type":"if","locations":[{"start":{"line":313,"column":4},"end":{"line":323,"column":5}},{"start":{"line":313,"column":4},"end":{"line":323,"column":5}}],"line":313},"50":{"loc":{"start":{"line":313,"column":8},"end":{"line":313,"column":49}},"type":"binary-expr","locations":[{"start":{"line":313,"column":8},"end":{"line":313,"column":29}},{"start":{"line":313,"column":33},"end":{"line":313,"column":49}}],"line":313},"51":{"loc":{"start":{"line":316,"column":9},"end":{"line":323,"column":5}},"type":"if","locations":[{"start":{"line":316,"column":9},"end":{"line":323,"column":5}},{"start":{"line":316,"column":9},"end":{"line":323,"column":5}}],"line":316},"52":{"loc":{"start":{"line":326,"column":4},"end":{"line":328,"column":5}},"type":"if","locations":[{"start":{"line":326,"column":4},"end":{"line":328,"column":5}},{"start":{"line":326,"column":4},"end":{"line":328,"column":5}}],"line":326},"53":{"loc":{"start":{"line":329,"column":4},"end":{"line":353,"column":5}},"type":"if","locations":[{"start":{"line":329,"column":4},"end":{"line":353,"column":5}},{"start":{"line":329,"column":4},"end":{"line":353,"column":5}}],"line":329},"54":{"loc":{"start":{"line":332,"column":8},"end":{"line":334,"column":9}},"type":"if","locations":[{"start":{"line":332,"column":8},"end":{"line":334,"column":9}},{"start":{"line":332,"column":8},"end":{"line":334,"column":9}}],"line":332},"55":{"loc":{"start":{"line":336,"column":8},"end":{"line":339,"column":9}},"type":"if","locations":[{"start":{"line":336,"column":8},"end":{"line":339,"column":9}},{"start":{"line":336,"column":8},"end":{"line":339,"column":9}}],"line":336},"56":{"loc":{"start":{"line":336,"column":12},"end":{"line":337,"column":36}},"type":"binary-expr","locations":[{"start":{"line":336,"column":12},"end":{"line":336,"column":59}},{"start":{"line":337,"column":12},"end":{"line":337,"column":36}}],"line":336},"57":{"loc":{"start":{"line":345,"column":8},"end":{"line":347,"column":9}},"type":"if","locations":[{"start":{"line":345,"column":8},"end":{"line":347,"column":9}},{"start":{"line":345,"column":8},"end":{"line":347,"column":9}}],"line":345},"58":{"loc":{"start":{"line":349,"column":8},"end":{"line":351,"column":9}},"type":"if","locations":[{"start":{"line":349,"column":8},"end":{"line":351,"column":9}},{"start":{"line":349,"column":8},"end":{"line":351,"column":9}}],"line":349},"59":{"loc":{"start":{"line":365,"column":4},"end":{"line":367,"column":5}},"type":"if","locations":[{"start":{"line":365,"column":4},"end":{"line":367,"column":5}},{"start":{"line":365,"column":4},"end":{"line":367,"column":5}}],"line":365},"60":{"loc":{"start":{"line":368,"column":4},"end":{"line":373,"column":5}},"type":"if","locations":[{"start":{"line":368,"column":4},"end":{"line":373,"column":5}},{"start":{"line":368,"column":4},"end":{"line":373,"column":5}}],"line":368},"61":{"loc":{"start":{"line":371,"column":9},"end":{"line":373,"column":5}},"type":"if","locations":[{"start":{"line":371,"column":9},"end":{"line":373,"column":5}},{"start":{"line":371,"column":9},"end":{"line":373,"column":5}}],"line":371},"62":{"loc":{"start":{"line":383,"column":12},"end":{"line":386,"column":13}},"type":"if","locations":[{"start":{"line":383,"column":12},"end":{"line":386,"column":13}},{"start":{"line":383,"column":12},"end":{"line":386,"column":13}}],"line":383},"63":{"loc":{"start":{"line":393,"column":12},"end":{"line":396,"column":13}},"type":"if","locations":[{"start":{"line":393,"column":12},"end":{"line":396,"column":13}},{"start":{"line":393,"column":12},"end":{"line":396,"column":13}}],"line":393},"64":{"loc":{"start":{"line":411,"column":4},"end":{"line":413,"column":5}},"type":"if","locations":[{"start":{"line":411,"column":4},"end":{"line":413,"column":5}},{"start":{"line":411,"column":4},"end":{"line":413,"column":5}}],"line":411},"65":{"loc":{"start":{"line":436,"column":4},"end":{"line":438,"column":5}},"type":"if","locations":[{"start":{"line":436,"column":4},"end":{"line":438,"column":5}},{"start":{"line":436,"column":4},"end":{"line":438,"column":5}}],"line":436},"66":{"loc":{"start":{"line":439,"column":4},"end":{"line":441,"column":5}},"type":"if","locations":[{"start":{"line":439,"column":4},"end":{"line":441,"column":5}},{"start":{"line":439,"column":4},"end":{"line":441,"column":5}}],"line":439},"67":{"loc":{"start":{"line":442,"column":4},"end":{"line":444,"column":5}},"type":"if","locations":[{"start":{"line":442,"column":4},"end":{"line":444,"column":5}},{"start":{"line":442,"column":4},"end":{"line":444,"column":5}}],"line":442},"68":{"loc":{"start":{"line":445,"column":4},"end":{"line":447,"column":5}},"type":"if","locations":[{"start":{"line":445,"column":4},"end":{"line":447,"column":5}},{"start":{"line":445,"column":4},"end":{"line":447,"column":5}}],"line":445},"69":{"loc":{"start":{"line":448,"column":4},"end":{"line":450,"column":5}},"type":"if","locations":[{"start":{"line":448,"column":4},"end":{"line":450,"column":5}},{"start":{"line":448,"column":4},"end":{"line":450,"column":5}}],"line":448},"70":{"loc":{"start":{"line":452,"column":4},"end":{"line":454,"column":5}},"type":"if","locations":[{"start":{"line":452,"column":4},"end":{"line":454,"column":5}},{"start":{"line":452,"column":4},"end":{"line":454,"column":5}}],"line":452},"71":{"loc":{"start":{"line":488,"column":4},"end":{"line":490,"column":5}},"type":"if","locations":[{"start":{"line":488,"column":4},"end":{"line":490,"column":5}},{"start":{"line":488,"column":4},"end":{"line":490,"column":5}}],"line":488},"72":{"loc":{"start":{"line":491,"column":4},"end":{"line":493,"column":5}},"type":"if","locations":[{"start":{"line":491,"column":4},"end":{"line":493,"column":5}},{"start":{"line":491,"column":4},"end":{"line":493,"column":5}}],"line":491},"73":{"loc":{"start":{"line":494,"column":4},"end":{"line":496,"column":5}},"type":"if","locations":[{"start":{"line":494,"column":4},"end":{"line":496,"column":5}},{"start":{"line":494,"column":4},"end":{"line":496,"column":5}}],"line":494},"74":{"loc":{"start":{"line":497,"column":4},"end":{"line":499,"column":5}},"type":"if","locations":[{"start":{"line":497,"column":4},"end":{"line":499,"column":5}},{"start":{"line":497,"column":4},"end":{"line":499,"column":5}}],"line":497},"75":{"loc":{"start":{"line":500,"column":4},"end":{"line":502,"column":5}},"type":"if","locations":[{"start":{"line":500,"column":4},"end":{"line":502,"column":5}},{"start":{"line":500,"column":4},"end":{"line":502,"column":5}}],"line":500},"76":{"loc":{"start":{"line":504,"column":4},"end":{"line":506,"column":5}},"type":"if","locations":[{"start":{"line":504,"column":4},"end":{"line":506,"column":5}},{"start":{"line":504,"column":4},"end":{"line":506,"column":5}}],"line":504},"77":{"loc":{"start":{"line":545,"column":4},"end":{"line":547,"column":5}},"type":"if","locations":[{"start":{"line":545,"column":4},"end":{"line":547,"column":5}},{"start":{"line":545,"column":4},"end":{"line":547,"column":5}}],"line":545},"78":{"loc":{"start":{"line":548,"column":4},"end":{"line":550,"column":5}},"type":"if","locations":[{"start":{"line":548,"column":4},"end":{"line":550,"column":5}},{"start":{"line":548,"column":4},"end":{"line":550,"column":5}}],"line":548},"79":{"loc":{"start":{"line":548,"column":8},"end":{"line":548,"column":57}},"type":"binary-expr","locations":[{"start":{"line":548,"column":8},"end":{"line":548,"column":33}},{"start":{"line":548,"column":37},"end":{"line":548,"column":57}}],"line":548},"80":{"loc":{"start":{"line":552,"column":4},"end":{"line":562,"column":5}},"type":"if","locations":[{"start":{"line":552,"column":4},"end":{"line":562,"column":5}},{"start":{"line":552,"column":4},"end":{"line":562,"column":5}}],"line":552},"81":{"loc":{"start":{"line":552,"column":8},"end":{"line":552,"column":49}},"type":"binary-expr","locations":[{"start":{"line":552,"column":8},"end":{"line":552,"column":29}},{"start":{"line":552,"column":33},"end":{"line":552,"column":49}}],"line":552},"82":{"loc":{"start":{"line":555,"column":9},"end":{"line":562,"column":5}},"type":"if","locations":[{"start":{"line":555,"column":9},"end":{"line":562,"column":5}},{"start":{"line":555,"column":9},"end":{"line":562,"column":5}}],"line":555},"83":{"loc":{"start":{"line":563,"column":4},"end":{"line":565,"column":5}},"type":"if","locations":[{"start":{"line":563,"column":4},"end":{"line":565,"column":5}},{"start":{"line":563,"column":4},"end":{"line":565,"column":5}}],"line":563},"84":{"loc":{"start":{"line":563,"column":8},"end":{"line":563,"column":39}},"type":"binary-expr","locations":[{"start":{"line":563,"column":8},"end":{"line":563,"column":24}},{"start":{"line":563,"column":28},"end":{"line":563,"column":39}}],"line":563},"85":{"loc":{"start":{"line":566,"column":4},"end":{"line":568,"column":5}},"type":"if","locations":[{"start":{"line":566,"column":4},"end":{"line":568,"column":5}},{"start":{"line":566,"column":4},"end":{"line":568,"column":5}}],"line":566},"86":{"loc":{"start":{"line":570,"column":4},"end":{"line":572,"column":5}},"type":"if","locations":[{"start":{"line":570,"column":4},"end":{"line":572,"column":5}},{"start":{"line":570,"column":4},"end":{"line":572,"column":5}}],"line":570},"87":{"loc":{"start":{"line":575,"column":4},"end":{"line":617,"column":5}},"type":"if","locations":[{"start":{"line":575,"column":4},"end":{"line":617,"column":5}},{"start":{"line":575,"column":4},"end":{"line":617,"column":5}}],"line":575},"88":{"loc":{"start":{"line":577,"column":8},"end":{"line":579,"column":9}},"type":"if","locations":[{"start":{"line":577,"column":8},"end":{"line":579,"column":9}},{"start":{"line":577,"column":8},"end":{"line":579,"column":9}}],"line":577},"89":{"loc":{"start":{"line":599,"column":8},"end":{"line":601,"column":9}},"type":"if","locations":[{"start":{"line":599,"column":8},"end":{"line":601,"column":9}},{"start":{"line":599,"column":8},"end":{"line":601,"column":9}}],"line":599},"90":{"loc":{"start":{"line":633,"column":4},"end":{"line":635,"column":5}},"type":"if","locations":[{"start":{"line":633,"column":4},"end":{"line":635,"column":5}},{"start":{"line":633,"column":4},"end":{"line":635,"column":5}}],"line":633},"91":{"loc":{"start":{"line":636,"column":4},"end":{"line":638,"column":5}},"type":"if","locations":[{"start":{"line":636,"column":4},"end":{"line":638,"column":5}},{"start":{"line":636,"column":4},"end":{"line":638,"column":5}}],"line":636},"92":{"loc":{"start":{"line":636,"column":8},"end":{"line":636,"column":49}},"type":"binary-expr","locations":[{"start":{"line":636,"column":8},"end":{"line":636,"column":29}},{"start":{"line":636,"column":33},"end":{"line":636,"column":49}}],"line":636},"93":{"loc":{"start":{"line":639,"column":4},"end":{"line":641,"column":5}},"type":"if","locations":[{"start":{"line":639,"column":4},"end":{"line":641,"column":5}},{"start":{"line":639,"column":4},"end":{"line":641,"column":5}}],"line":639},"94":{"loc":{"start":{"line":645,"column":4},"end":{"line":654,"column":5}},"type":"if","locations":[{"start":{"line":645,"column":4},"end":{"line":654,"column":5}},{"start":{"line":645,"column":4},"end":{"line":654,"column":5}}],"line":645},"95":{"loc":{"start":{"line":656,"column":4},"end":{"line":658,"column":5}},"type":"if","locations":[{"start":{"line":656,"column":4},"end":{"line":658,"column":5}},{"start":{"line":656,"column":4},"end":{"line":658,"column":5}}],"line":656},"96":{"loc":{"start":{"line":659,"column":4},"end":{"line":722,"column":5}},"type":"if","locations":[{"start":{"line":659,"column":4},"end":{"line":722,"column":5}},{"start":{"line":659,"column":4},"end":{"line":722,"column":5}}],"line":659},"97":{"loc":{"start":{"line":661,"column":8},"end":{"line":664,"column":9}},"type":"if","locations":[{"start":{"line":661,"column":8},"end":{"line":664,"column":9}},{"start":{"line":661,"column":8},"end":{"line":664,"column":9}}],"line":661},"98":{"loc":{"start":{"line":661,"column":12},"end":{"line":662,"column":102}},"type":"binary-expr","locations":[{"start":{"line":661,"column":12},"end":{"line":661,"column":75}},{"start":{"line":662,"column":12},"end":{"line":662,"column":102}}],"line":661},"99":{"loc":{"start":{"line":665,"column":8},"end":{"line":679,"column":9}},"type":"if","locations":[{"start":{"line":665,"column":8},"end":{"line":679,"column":9}},{"start":{"line":665,"column":8},"end":{"line":679,"column":9}}],"line":665},"100":{"loc":{"start":{"line":675,"column":16},"end":{"line":677,"column":17}},"type":"if","locations":[{"start":{"line":675,"column":16},"end":{"line":677,"column":17}},{"start":{"line":675,"column":16},"end":{"line":677,"column":17}}],"line":675},"101":{"loc":{"start":{"line":681,"column":8},"end":{"line":689,"column":9}},"type":"if","locations":[{"start":{"line":681,"column":8},"end":{"line":689,"column":9}},{"start":{"line":681,"column":8},"end":{"line":689,"column":9}}],"line":681},"102":{"loc":{"start":{"line":693,"column":8},"end":{"line":696,"column":9}},"type":"if","locations":[{"start":{"line":693,"column":8},"end":{"line":696,"column":9}},{"start":{"line":693,"column":8},"end":{"line":696,"column":9}}],"line":693},"103":{"loc":{"start":{"line":693,"column":12},"end":{"line":694,"column":96}},"type":"binary-expr","locations":[{"start":{"line":693,"column":12},"end":{"line":693,"column":69}},{"start":{"line":694,"column":12},"end":{"line":694,"column":96}}],"line":693},"104":{"loc":{"start":{"line":697,"column":8},"end":{"line":711,"column":9}},"type":"if","locations":[{"start":{"line":697,"column":8},"end":{"line":711,"column":9}},{"start":{"line":697,"column":8},"end":{"line":711,"column":9}}],"line":697},"105":{"loc":{"start":{"line":707,"column":16},"end":{"line":709,"column":17}},"type":"if","locations":[{"start":{"line":707,"column":16},"end":{"line":709,"column":17}},{"start":{"line":707,"column":16},"end":{"line":709,"column":17}}],"line":707},"106":{"loc":{"start":{"line":713,"column":8},"end":{"line":721,"column":9}},"type":"if","locations":[{"start":{"line":713,"column":8},"end":{"line":721,"column":9}},{"start":{"line":713,"column":8},"end":{"line":721,"column":9}}],"line":713},"107":{"loc":{"start":{"line":740,"column":4},"end":{"line":742,"column":5}},"type":"if","locations":[{"start":{"line":740,"column":4},"end":{"line":742,"column":5}},{"start":{"line":740,"column":4},"end":{"line":742,"column":5}}],"line":740},"108":{"loc":{"start":{"line":743,"column":4},"end":{"line":745,"column":5}},"type":"if","locations":[{"start":{"line":743,"column":4},"end":{"line":745,"column":5}},{"start":{"line":743,"column":4},"end":{"line":745,"column":5}}],"line":743},"109":{"loc":{"start":{"line":743,"column":8},"end":{"line":743,"column":49}},"type":"binary-expr","locations":[{"start":{"line":743,"column":8},"end":{"line":743,"column":29}},{"start":{"line":743,"column":33},"end":{"line":743,"column":49}}],"line":743},"110":{"loc":{"start":{"line":746,"column":4},"end":{"line":748,"column":5}},"type":"if","locations":[{"start":{"line":746,"column":4},"end":{"line":748,"column":5}},{"start":{"line":746,"column":4},"end":{"line":748,"column":5}}],"line":746},"111":{"loc":{"start":{"line":752,"column":4},"end":{"line":761,"column":5}},"type":"if","locations":[{"start":{"line":752,"column":4},"end":{"line":761,"column":5}},{"start":{"line":752,"column":4},"end":{"line":761,"column":5}}],"line":752},"112":{"loc":{"start":{"line":763,"column":4},"end":{"line":765,"column":5}},"type":"if","locations":[{"start":{"line":763,"column":4},"end":{"line":765,"column":5}},{"start":{"line":763,"column":4},"end":{"line":765,"column":5}}],"line":763},"113":{"loc":{"start":{"line":766,"column":4},"end":{"line":803,"column":5}},"type":"if","locations":[{"start":{"line":766,"column":4},"end":{"line":803,"column":5}},{"start":{"line":766,"column":4},"end":{"line":803,"column":5}}],"line":766},"114":{"loc":{"start":{"line":768,"column":8},"end":{"line":770,"column":9}},"type":"if","locations":[{"start":{"line":768,"column":8},"end":{"line":770,"column":9}},{"start":{"line":768,"column":8},"end":{"line":770,"column":9}}],"line":768},"115":{"loc":{"start":{"line":771,"column":8},"end":{"line":773,"column":9}},"type":"if","locations":[{"start":{"line":771,"column":8},"end":{"line":773,"column":9}},{"start":{"line":771,"column":8},"end":{"line":773,"column":9}}],"line":771},"116":{"loc":{"start":{"line":776,"column":12},"end":{"line":778,"column":13}},"type":"if","locations":[{"start":{"line":776,"column":12},"end":{"line":778,"column":13}},{"start":{"line":776,"column":12},"end":{"line":778,"column":13}}],"line":776},"117":{"loc":{"start":{"line":781,"column":8},"end":{"line":783,"column":9}},"type":"if","locations":[{"start":{"line":781,"column":8},"end":{"line":783,"column":9}},{"start":{"line":781,"column":8},"end":{"line":783,"column":9}}],"line":781},"118":{"loc":{"start":{"line":786,"column":8},"end":{"line":788,"column":9}},"type":"if","locations":[{"start":{"line":786,"column":8},"end":{"line":788,"column":9}},{"start":{"line":786,"column":8},"end":{"line":788,"column":9}}],"line":786},"119":{"loc":{"start":{"line":790,"column":8},"end":{"line":792,"column":9}},"type":"if","locations":[{"start":{"line":790,"column":8},"end":{"line":792,"column":9}},{"start":{"line":790,"column":8},"end":{"line":792,"column":9}}],"line":790},"120":{"loc":{"start":{"line":795,"column":12},"end":{"line":797,"column":13}},"type":"if","locations":[{"start":{"line":795,"column":12},"end":{"line":797,"column":13}},{"start":{"line":795,"column":12},"end":{"line":797,"column":13}}],"line":795},"121":{"loc":{"start":{"line":800,"column":8},"end":{"line":802,"column":9}},"type":"if","locations":[{"start":{"line":800,"column":8},"end":{"line":802,"column":9}},{"start":{"line":800,"column":8},"end":{"line":802,"column":9}}],"line":800}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":285,"8":285,"9":285,"10":285,"11":285,"12":1,"13":284,"14":1,"15":283,"16":1,"17":282,"18":1,"19":281,"20":1,"21":280,"22":280,"23":280,"24":280,"25":280,"26":280,"27":280,"28":280,"29":1,"30":16,"31":16,"32":16,"33":16,"34":16,"35":16,"36":1,"37":15,"38":2,"39":13,"40":6,"41":6,"42":7,"43":7,"44":13,"45":13,"46":13,"47":2,"48":11,"49":5,"50":5,"51":5,"52":1,"53":4,"54":4,"55":4,"56":6,"57":6,"58":6,"59":2,"60":4,"61":4,"62":4,"63":1,"64":19,"65":19,"66":19,"67":19,"68":19,"69":19,"70":1,"71":18,"72":3,"73":15,"74":9,"75":9,"76":6,"77":6,"78":15,"79":15,"80":15,"81":1,"82":14,"83":8,"84":8,"85":8,"86":1,"87":7,"88":2,"89":2,"90":2,"91":5,"92":1,"93":4,"94":4,"95":4,"96":4,"97":6,"98":6,"99":6,"100":1,"101":5,"102":1,"103":1,"104":1,"105":4,"106":1,"107":3,"108":3,"109":3,"110":3,"111":1,"112":145,"113":145,"114":145,"115":145,"116":145,"117":1,"118":144,"119":1,"120":143,"121":1,"122":142,"123":1,"124":141,"125":1,"126":140,"127":140,"128":140,"129":140,"130":140,"131":140,"132":140,"133":140,"134":1,"135":20,"136":20,"137":20,"138":20,"139":20,"140":20,"141":1,"142":19,"143":1,"144":18,"145":12,"146":12,"147":6,"148":6,"149":18,"150":18,"151":18,"152":1,"153":17,"154":11,"155":11,"156":11,"157":2,"158":9,"159":1,"160":8,"161":6,"162":6,"163":6,"164":1,"165":5,"166":1,"167":4,"168":12,"169":12,"170":1,"171":11,"172":11,"173":11,"174":11,"175":11,"176":11,"177":1,"178":10,"179":1,"180":9,"181":6,"182":6,"183":3,"184":3,"185":9,"186":9,"187":9,"188":1,"189":8,"190":5,"191":5,"192":5,"193":1,"194":4,"195":1,"196":3,"197":3,"198":3,"199":3,"200":1,"201":2,"202":1,"203":1,"204":4,"205":4,"206":1,"207":5,"208":5,"209":1,"210":4,"211":1,"212":3,"213":1,"214":2,"215":2,"216":2,"217":2,"218":2,"219":2,"220":2,"221":2,"222":2,"223":2,"224":2,"225":4,"226":4,"227":2,"228":2,"229":2,"230":2,"231":2,"232":2,"233":2,"234":2,"235":4,"236":4,"237":2,"238":2,"239":2,"240":2,"241":2,"242":1,"243":19,"244":19,"245":1,"246":18,"247":18,"248":18,"249":18,"250":18,"251":18,"252":1,"253":10,"254":10,"255":10,"256":10,"257":10,"258":1,"259":9,"260":1,"261":8,"262":1,"263":7,"264":1,"265":6,"266":1,"267":5,"268":5,"269":1,"270":4,"271":4,"272":4,"273":4,"274":4,"275":4,"276":4,"277":4,"278":4,"279":4,"280":1,"281":10,"282":10,"283":10,"284":10,"285":10,"286":1,"287":9,"288":1,"289":8,"290":1,"291":7,"292":1,"293":6,"294":1,"295":5,"296":5,"297":1,"298":4,"299":4,"300":4,"301":4,"302":4,"303":4,"304":4,"305":4,"306":4,"307":4,"308":1,"309":13,"310":13,"311":13,"312":13,"313":13,"314":13,"315":13,"316":13,"317":1,"318":12,"319":1,"320":11,"321":1,"322":10,"323":9,"324":9,"325":1,"326":1,"327":10,"328":1,"329":9,"330":1,"331":8,"332":8,"333":2,"334":6,"335":6,"336":4,"337":4,"338":1,"339":3,"340":3,"341":3,"342":3,"343":3,"344":3,"345":3,"346":3,"347":2,"348":2,"349":1,"350":1,"351":1,"352":1,"353":1,"354":1,"355":1,"356":1,"357":1,"358":1,"359":22,"360":22,"361":22,"362":22,"363":22,"364":1,"365":21,"366":1,"367":20,"368":1,"369":19,"370":19,"371":9,"372":9,"373":9,"374":10,"375":10,"376":10,"377":19,"378":19,"379":2,"380":17,"381":7,"382":1,"383":6,"384":5,"385":5,"386":1,"387":1,"388":1,"389":6,"390":2,"391":2,"392":2,"393":10,"394":1,"395":9,"396":7,"397":7,"398":2,"399":2,"400":2,"401":9,"402":6,"403":6,"404":6,"405":15,"406":15,"407":1,"408":13,"409":13,"410":13,"411":13,"412":13,"413":1,"414":12,"415":1,"416":11,"417":1,"418":10,"419":10,"420":4,"421":4,"422":4,"423":6,"424":6,"425":6,"426":10,"427":10,"428":2,"429":8,"430":3,"431":1,"432":2,"433":1,"434":1,"435":1,"436":1,"437":1,"438":1,"439":5,"440":1,"441":4,"442":1,"443":3,"444":3,"445":3,"446":3,"447":2,"448":4,"449":4,"450":1},"f":{"0":1,"1":285,"2":16,"3":19,"4":145,"5":20,"6":11,"7":5,"8":19,"9":10,"10":4,"11":10,"12":4,"13":13,"14":22,"15":1,"16":2,"17":13,"18":1,"19":3},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[1,284],"4":[1,283],"5":[1,282],"6":[1,281],"7":[1,280],"8":[1,15],"9":[2,13],"10":[15,9],"11":[6,7],"12":[2,11],"13":[5,6],"14":[1,4],"15":[5,3,2],"16":[2,4],"17":[6,4],"18":[1,18],"19":[3,15],"20":[18,9],"21":[9,6],"22":[1,14],"23":[8,6],"24":[1,7],"25":[8,3,2],"26":[2,5],"27":[1,4],"28":[1,5],"29":[6,1],"30":[1,4],"31":[1,3],"32":[1,144],"33":[1,143],"34":[1,142],"35":[1,141],"36":[1,140],"37":[1,19],"38":[1,18],"39":[19,7],"40":[12,6],"41":[1,17],"42":[11,6],"43":[2,9],"44":[1,8],"45":[9,3],"46":[1,5],"47":[1,4],"48":[1,10],"49":[1,9],"50":[10,4],"51":[6,3],"52":[1,8],"53":[5,3],"54":[1,4],"55":[1,3],"56":[4,2],"57":[1,2],"58":[1,1],"59":[1,4],"60":[1,3],"61":[1,2],"62":[2,2],"63":[2,2],"64":[1,18],"65":[1,9],"66":[1,8],"67":[1,7],"68":[1,6],"69":[1,5],"70":[1,4],"71":[1,9],"72":[1,8],"73":[1,7],"74":[1,6],"75":[1,5],"76":[1,4],"77":[1,12],"78":[1,11],"79":[12,3],"80":[1,10],"81":[11,2],"82":[9,1],"83":[1,9],"84":[10,8],"85":[1,8],"86":[2,6],"87":[4,2],"88":[1,3],"89":[1,1],"90":[1,21],"91":[1,20],"92":[21,11],"93":[1,19],"94":[9,10],"95":[2,17],"96":[7,10],"97":[1,6],"98":[7,2],"99":[5,1],"100":[1,0],"101":[2,4],"102":[1,9],"103":[10,3],"104":[7,2],"105":[2,0],"106":[6,3],"107":[1,12],"108":[1,11],"109":[12,7],"110":[1,10],"111":[4,6],"112":[2,8],"113":[3,5],"114":[1,2],"115":[1,1],"116":[1,0],"117":[1,0],"118":[1,4],"119":[1,3],"120":[3,0],"121":[2,1]},"inputSourceMap":{"version":3,"file":"/Users/binvog/Documents/UNSW 2023T1/COMP1531/Indiv_projectbackend/iter4-project-backend/src/message.ts","sources":["/Users/binvog/Documents/UNSW 2023T1/COMP1531/Indiv_projectbackend/iter4-project-backend/src/message.ts"],"names":[],"mappings":"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","sourcesContent":["import { getData, setData } from './dataStore';\nimport {\n  findChannel,\n  findChannelByMessageId,\n  findDMbyId,\n  findDMbyMessageId,\n  findMessageIndexInChannel,\n  findMessageIndexInDM,\n  findUserIndex,\n  getAllMemberIds,\n  getAllOwnerIds,\n  getChannelIndex,\n  getDmIndex,\n  getUserByToken,\n  incrementMessageStat,\n  sendNotifChannel,\n  sendNotifDm,\n} from './functionHelper';\nimport HTTPError from 'http-errors';\nimport {\n  messages,\n  messagesObject,\n  newMessageReturn,\n  reactsObject,\n} from './interfaces';\n\n/**\n *\n * @param {string} token - The token of the user sending the message.\n * @param {number} channelId - The ID of the channel to send the message to.\n * @param {string} message - The message to be sent.\n * @returns {} - An object containing either an error message or the ID of the sent message.\n */\nexport function messageSendV1(\n  token: string,\n  channelId: number,\n  message: string\n): newMessageReturn {\n  const data = getData();\n  const user = getUserByToken(token);\n  const channel = findChannel(channelId);\n  const allMemberIds = getAllMemberIds(channel);\n\n  // Error Checking\n  if (user === undefined) {\n    throw HTTPError(403, 'Token is invalid');\n  }\n  if (channel === undefined) {\n    throw HTTPError(400, 'Channel does not exist');\n  }\n  if (allMemberIds.includes(user.authUserId) === false) {\n    throw HTTPError(403, 'User is not registered in channel');\n  }\n  if (message.length < 1) {\n    throw HTTPError(400, 'Message is too short');\n  }\n  if (message.length > 1000) {\n    throw HTTPError(400, 'Message is too long');\n  }\n\n  const channelIndex = getChannelIndex(channelId);\n  const messageId = Math.floor(Math.random() * 1000000);\n  const newMessage = {\n    messageId: messageId,\n    uId: user.authUserId,\n    message: message,\n    timeSent: Math.floor(Date.now() / 1000),\n    isPinned: false,\n    reacts: [] as reactsObject[],\n  };\n  data.channels[channelIndex].messages.push(newMessage);\n\n  setData(data);\n\n  incrementMessageStat(user.authUserId);\n  sendNotifChannel(user, message, allMemberIds, channel);\n  return { messageId: messageId };\n}\n/**\n *\n * @param {string} token - The token of the user removing the message.\n * @param {number} messageId - The ID of the message to be removed.\n * @returns {} - An object containing either an error message or nothing.\n */\nexport function messageRemoveV1(\n  token: string,\n  messageId: number\n): Record<string, never> {\n  const data = getData();\n  const user = getUserByToken(token);\n  const channel = findChannelByMessageId(messageId);\n  const dm = findDMbyMessageId(messageId);\n  let messageIndex = -1;\n  let flags;\n\n  if (user === undefined) {\n    throw HTTPError(403, 'Token is invalid');\n  }\n\n  if (channel === undefined && dm === undefined) {\n    throw HTTPError(400, 'Message does not exist');\n  } else if (channel !== undefined) {\n    messageIndex = findMessageIndexInChannel(channel, messageId);\n    flags = channel;\n  } else {\n    messageIndex = findMessageIndexInDM(dm, messageId);\n    flags = dm;\n  }\n\n  const allMemberIds = getAllMemberIds(flags);\n  const allOwnerIds = getAllOwnerIds(flags);\n\n  if (allMemberIds.includes(user.authUserId) === false) {\n    throw HTTPError(403, 'User is not registered in channel');\n  }\n\n  if (flags === channel) {\n    const channelIndex = getChannelIndex(channel.channelId);\n    const messageToEdit = data.channels[channelIndex].messages[messageIndex];\n\n    if (\n      messageToEdit.uId !== user.authUserId &&\n      allOwnerIds.includes(user.authUserId) === false &&\n      user.isGlobalOwner === 2\n    ) {\n      throw HTTPError(\n        403,\n        'User is not the author of the message and not an owner'\n      );\n    }\n\n    data.channels[channelIndex].messages.splice(messageIndex, 1);\n    setData(data);\n    return {};\n  } else {\n    const dmIndex = getDmIndex(dm.dmId);\n    const messageToEdit = data.dm[dmIndex].messages[messageIndex];\n\n    if (\n      messageToEdit.uId !== user.authUserId &&\n      allOwnerIds.includes(user.authUserId) === false\n    ) {\n      throw HTTPError(403, 'User is not the author of the message');\n    }\n\n    data.dm[dmIndex].messages.splice(messageIndex, 1);\n    setData(data);\n    return {};\n\n    // reacted message: \"{User’s handle} reacted to your message in {channel/DM name}\"\n    // added to a channel/DM: \"{User’s handle} added you to {channel/DM name}\"\n  }\n}\n\n/**\n *\n * @param {string} token - The token of the user editing the message.\n * @param {number} messageId - The ID of the message to be edited.\n * @param {string} message - The new message.\n * @returns {} - An object containing either an error message or nothing.\n */\nexport function messageEditV1(\n  token: string,\n  messageId: number,\n  message: string\n): Record<string, never> {\n  const data = getData();\n  const user = getUserByToken(token);\n  const channel = findChannelByMessageId(messageId);\n  const dm = findDMbyMessageId(messageId);\n  let messageIndex = -1;\n  let flags;\n\n  if (user === undefined) {\n    throw HTTPError(403, 'Token is invalid');\n  }\n\n  if (channel === undefined && dm === undefined) {\n    throw HTTPError(400, 'Message does not exist');\n  } else if (channel !== undefined) {\n    messageIndex = findMessageIndexInChannel(channel, messageId);\n    flags = channel;\n  } else {\n    messageIndex = findMessageIndexInDM(dm, messageId);\n    flags = dm;\n  }\n\n  const allMemberIds = getAllMemberIds(flags);\n  const allOwnerIds = getAllOwnerIds(flags);\n\n  if (allMemberIds.includes(user.authUserId) === false) {\n    throw HTTPError(403, 'User is not registered in channel');\n  }\n\n  if (flags === channel) {\n    const channelIndex = getChannelIndex(channel.channelId);\n    const messageToEdit = data.channels[channelIndex].messages[messageIndex];\n\n    if (\n      messageToEdit.uId !== user.authUserId &&\n      allOwnerIds.includes(user.authUserId) === false &&\n      user.isGlobalOwner === 2\n    ) {\n      throw HTTPError(\n        403,\n        'User is not the author of the message and not an owner'\n      );\n    }\n\n    // Delets message if message is empty\n    if (message.length < 1) {\n      data.channels[channelIndex].messages.splice(messageIndex, 1);\n      setData(data);\n      return {};\n    }\n    if (message.length > 1000) {\n      throw HTTPError(400, 'Message is too long');\n    }\n\n    data.channels[channelIndex].messages[messageIndex].message = message;\n\n    setData(data);\n\n    sendNotifChannel(user, message, allMemberIds, channel);\n    return {};\n  } else {\n    const dmIndex = getDmIndex(dm.dmId);\n    const messageToEdit = data.dm[dmIndex].messages[messageIndex];\n\n    if (\n      messageToEdit.uId !== user.authUserId &&\n      allOwnerIds.includes(user.authUserId) === false\n    ) {\n      throw HTTPError(403, 'User is not the author of the message');\n    }\n\n    // Delets message if message is empty\n    if (message.length < 1) {\n      data.dm[dmIndex].messages.splice(messageIndex, 1);\n      setData(data);\n      return {};\n    }\n    if (message.length > 1000) {\n      throw HTTPError(400, 'Message is too long');\n    }\n\n    data.dm[dmIndex].messages[messageIndex].message = message;\n    setData(data);\n\n    sendNotifDm(user, message, allMemberIds, dm);\n    return {};\n  }\n}\n\n/**\n *\n * @param {string} token - The token of the user sending the message.\n * @param {number} dmId - The ID of the DM to send the message to.\n * @param {string} message - The message to be sent.\n * @returns {messageId : number} - An object containing the ID of the message sent.\n */\nexport function messageSendDmV1(\n  token: string,\n  dmId: number,\n  message: string\n): newMessageReturn {\n  const data = getData();\n  const user = getUserByToken(token);\n  const dm = findDMbyId(dmId);\n  const allMemberIds = getAllMemberIds(dm);\n\n  if (user === undefined) {\n    throw HTTPError(403, 'Token is invalid');\n  }\n  if (dm === undefined) {\n    throw HTTPError(400, 'DM does not exist');\n  }\n  if (allMemberIds.includes(user.authUserId) === false) {\n    throw HTTPError(403, 'User is not registered in DM');\n  }\n  if (message.length < 1) {\n    throw HTTPError(400, 'Message is too short');\n  }\n  if (message.length > 1000) {\n    throw HTTPError(400, 'Message is too long');\n  }\n\n  const dmIndex = getDmIndex(dmId);\n  const messageId = Math.floor(Math.random() * 1000000);\n  const newMessage = {\n    messageId: messageId,\n    uId: user.authUserId,\n    message: message,\n    timeSent: Math.floor(Date.now() / 1000),\n    isPinned: false,\n    reacts: [] as reactsObject[],\n  };\n  data.dm[dmIndex].messages.push(newMessage);\n\n  setData(data);\n\n  sendNotifDm(user, message, allMemberIds, dm);\n  incrementMessageStat(user.authUserId);\n  return { messageId: messageId };\n}\n\n/**\n * Given a message within a channel or DM, removes its mark as \"pinned\".\n * @param {string} token - The token of the user sending the message.\n * @param {number} messageId - The ID of the message to be edited.\n * @returns {{}} - An object containing either an error message or nothing.\n */\nexport function messagePinV1(\n  token: string,\n  messageId: number\n): Record<string, never> {\n  const data = getData();\n  const user = getUserByToken(token);\n  const channel = findChannelByMessageId(messageId);\n  const dm = findDMbyMessageId(messageId);\n  let messageIndex = -1;\n  let flags;\n\n  if (user === undefined) {\n    throw HTTPError(403, 'Token is invalid');\n  }\n\n  if (channel === undefined && dm === undefined) {\n    throw HTTPError(400, 'Message Not Found');\n  } else if (channel !== undefined) {\n    messageIndex = findMessageIndexInChannel(channel, messageId);\n    flags = channel;\n  } else {\n    messageIndex = findMessageIndexInDM(dm, messageId);\n    flags = dm;\n  }\n\n  const allMemberIds = getAllMemberIds(flags);\n  const allOwnerIds = getAllOwnerIds(flags);\n\n  if (allMemberIds.includes(user.authUserId) === false) {\n    throw HTTPError(403, 'User is not registered in channel');\n  }\n\n  if (flags === channel) {\n    const channelIndex = getChannelIndex(channel.channelId);\n    const messageToEdit = data.channels[channelIndex].messages[messageIndex];\n    if (messageToEdit.isPinned === true) {\n      throw HTTPError(400, 'Message is already pinned');\n    }\n    // only global owner or owner can pin message\n    if (\n      allOwnerIds.includes(user.authUserId) === false &&\n      user.isGlobalOwner === 2\n    ) {\n      throw HTTPError(403, 'User is neither a global owner nor an owner');\n    }\n\n    data.channels[channelIndex].messages[messageIndex].isPinned = true;\n  } else {\n    const dmIndex = getDmIndex(dm.dmId);\n    const messageToEdit = data.dm[dmIndex].messages[messageIndex];\n    if (messageToEdit.isPinned === true) {\n      throw HTTPError(400, 'Message is already pinned');\n    }\n    // only owner can pin message\n    if (allOwnerIds.includes(user.authUserId) === false) {\n      throw HTTPError(403, 'User is not a dm owner');\n    }\n    data.dm[dmIndex].messages[messageIndex].isPinned = true;\n  }\n\n  setData(data);\n  return {};\n}\n\n/**\n * Given a message within a channel or DM, removes its mark as \"pinned\".\n * @param {string} token - The token of the user sending the message.\n * @param {number} messageId - The ID of the message to be edited.\n * @returns {{}} - An object containing either an error message or nothing.\n */\nexport function messageUnpinV1(\n  token: string,\n  messageId: number\n): Record<string, never> {\n  const data = getData();\n  const user = getUserByToken(token);\n  const channel = findChannelByMessageId(messageId);\n  const dm = findDMbyMessageId(messageId);\n  let messageIndex = -1;\n  let flags;\n\n  if (user === undefined) {\n    throw HTTPError(403, 'Token is invalid');\n  }\n\n  if (channel === undefined && dm === undefined) {\n    throw HTTPError(400, 'Message Not Found');\n  } else if (channel !== undefined) {\n    messageIndex = findMessageIndexInChannel(channel, messageId);\n    flags = channel;\n  } else {\n    messageIndex = findMessageIndexInDM(dm, messageId);\n    flags = dm;\n  }\n\n  const allMemberIds = getAllMemberIds(flags);\n  const allOwnerIds = getAllOwnerIds(flags);\n\n  if (allMemberIds.includes(user.authUserId) === false) {\n    throw HTTPError(403, 'User is not registered in channel');\n  }\n\n  if (flags === channel) {\n    const channelIndex = getChannelIndex(channel.channelId);\n    const messageToEdit = data.channels[channelIndex].messages[messageIndex];\n    if (messageToEdit.isPinned === false) {\n      throw HTTPError(400, 'Message is not pinned');\n    }\n    // only global owner or owner can unpin message\n    if (\n      allOwnerIds.includes(user.authUserId) === false &&\n      user.isGlobalOwner === 2\n    ) {\n      throw HTTPError(403, 'User is neither a global owner nor an owner');\n    }\n\n    data.channels[channelIndex].messages[messageIndex].isPinned = false;\n  } else {\n    const dmIndex = getDmIndex(dm.dmId);\n    const messageToEdit = data.dm[dmIndex].messages[messageIndex];\n    if (messageToEdit.isPinned === false) {\n      throw HTTPError(400, 'Message is not pinned');\n    }\n    // only owner can pin message\n    if (allOwnerIds.includes(user.authUserId) === false) {\n      throw HTTPError(403, 'User is not a dm owner');\n    }\n    data.dm[dmIndex].messages[messageIndex].isPinned = false;\n  }\n  setData(data);\n  return {};\n}\n\n/**\n * Given a query substring, returns a collection of messages in all of the channels/DMs that the user has joined that contain the query (case-insensitive). There is no expected order for these messages.\n * @param token - The token of the user sending the message.\n * @param queryStr - queryStr\n */\nexport function searchV1(token: string, queryStr: string): messages {\n  const user = getUserByToken(token);\n  if (user === undefined) {\n    throw HTTPError(403, 'Token is invalid');\n  }\n\n  if (queryStr.length < 1) {\n    throw HTTPError(400, 'Query is too short');\n  } else if (queryStr.length > 1000) {\n    throw HTTPError(400, 'Query is too long');\n  }\n\n  const data = getData();\n  // search through all channels or dms that the user is part of\n  const allChannels = data.channels;\n  const allDms = data.dm;\n  const allMessages: messagesObject[] = [];\n\n  for (const channel of allChannels) {\n    for (const message of channel.messages) {\n      if (message.message.includes(queryStr)) {\n        // put message in array\n        allMessages.push(message);\n      }\n    }\n  }\n\n  for (const dm of allDms) {\n    for (const message of dm.messages) {\n      if (message.message.includes(queryStr)) {\n        // put message in array\n        allMessages.push(message);\n      }\n    }\n  }\n\n  const start = 0;\n  const end = allMessages.length;\n  const allMessagesObject: messages = {\n    start,\n    end,\n    messages: allMessages,\n  };\n\n  return allMessagesObject;\n}\n\nexport function notificationsGetV1(token: string) {\n  const user = getUserByToken(token);\n  if (user === undefined) {\n    throw HTTPError(403, 'Token is invalid');\n  }\n\n  const data = getData();\n  const userIndex = findUserIndex(user.authUserId);\n  const notifications = data.users[userIndex].notifications;\n  notifications.reverse();\n  const notificationsSliced = notifications.slice(0, 20);\n  return { notifications: notificationsSliced };\n}\n\n/**\n *\n * @param token - The token of the user sending the message.\n * @param channelId - The ID of the channel to which the message is being sent.\n * @param message - The message to be sent.\n * @param timeSent - The time at which the message is to be sent.\n * @returns {messageId: number}\n */\nexport function messageSendLaterV1(\n  token: string,\n  channelId: number,\n  message: string,\n  timeSent: number\n) {\n  const data = getData();\n  const user = getUserByToken(token);\n  const channel = findChannel(channelId);\n  const allMemberIds = getAllMemberIds(channel);\n\n  // Error Checking\n  if (user === undefined) {\n    throw HTTPError(403, 'Token is invalid');\n  }\n  if (channel === undefined) {\n    throw HTTPError(400, 'Channel does not exist');\n  }\n  if (allMemberIds.includes(user.authUserId) === false) {\n    throw HTTPError(403, 'User is not registered in channel');\n  }\n  if (message.length < 1) {\n    throw HTTPError(400, 'Message is too short');\n  }\n  if (message.length > 1000) {\n    throw HTTPError(400, 'Message is too long');\n  }\n\n  const currentTime = Math.floor(Date.now() / 1000);\n  if (timeSent < currentTime) {\n    throw HTTPError(400, 'Time sent cannot be a time in the past');\n  }\n\n  const channelIndex = getChannelIndex(channelId);\n  const messageId = Math.floor(Math.random() * 1000000);\n\n  const timeDelay = timeSent - currentTime;\n  setTimeout(() => {\n    const newMessage = {\n      messageId: messageId,\n      uId: user.authUserId,\n      message: message,\n      timeSent: Math.floor(Date.now() / 1000),\n      isPinned: false,\n      reacts: [] as reactsObject[],\n    };\n    data.channels[channelIndex].messages.push(newMessage);\n    setData(data);\n    sendNotifChannel(user, message, allMemberIds, channel);\n    incrementMessageStat(user.authUserId);\n  }, timeDelay * 1000);\n\n  return { messageId: messageId };\n}\n\n/**\n *\n * @param token - The token of the user sending the message.\n * @param dmId - The ID of the DM to which the message is being sent.\n * @param message - The message to be sent.\n * @param timeSent - The time at which the message is to be sent.\n * @returns {messageId: number} - The ID of the message that was sent.\n */\nexport function messageSendLaterDmV1(\n  token: string,\n  dmId: number,\n  message: string,\n  timeSent: number\n) {\n  const data = getData();\n  const user = getUserByToken(token);\n  const dm = findDMbyId(dmId);\n  const allMemberIds = getAllMemberIds(dm);\n\n  if (user === undefined) {\n    throw HTTPError(403, 'Token is invalid');\n  }\n  if (dm === undefined) {\n    throw HTTPError(400, 'DM does not exist');\n  }\n  if (allMemberIds.includes(user.authUserId) === false) {\n    throw HTTPError(403, 'User is not registered in DM');\n  }\n  if (message.length < 1) {\n    throw HTTPError(400, 'Message is too short');\n  }\n  if (message.length > 1000) {\n    throw HTTPError(400, 'Message is too long');\n  }\n\n  const currentTime = Math.floor(Date.now() / 1000);\n  if (timeSent < currentTime) {\n    throw HTTPError(400, 'Time sent cannot be a time in the past');\n  }\n\n  const dmIndex = getDmIndex(dmId);\n  const messageId = Math.floor(Math.random() * 1000000);\n\n  const timeDelay = timeSent - currentTime;\n  setTimeout(() => {\n    const newMessage = {\n      messageId: messageId,\n      uId: user.authUserId,\n      message: message,\n      timeSent: Math.floor(Date.now() / 1000),\n      isPinned: false,\n      reacts: [] as Array<reactsObject>,\n    };\n    data.dm[dmIndex].messages.push(newMessage);\n    setData(data);\n    sendNotifDm(user, message, allMemberIds, dm);\n    incrementMessageStat(user.authUserId);\n  }, timeDelay * 1000);\n  return { messageId: messageId };\n}\n\n/**\n *\n * @param token - The token of the user sending the message.\n * @param ogMessageId - The ID of the message being shared.\n * @param message - The message to be sent.\n * @param channelId - The ID of the channel to which the message is being sent or -1 if DM\n * @param dmId - The ID of the DM to which the message is being sent or -1 if channel\n * @returns {sharedMessageId: number}\n */\nexport function messageShareV1(\n  token: string,\n  ogMessageId: number,\n  message: string,\n  channelId: number,\n  dmId: number\n) {\n  const data = getData();\n  const user = getUserByToken(token);\n  const channel = findChannelByMessageId(ogMessageId);\n  const dm = findDMbyMessageId(ogMessageId);\n  const channelTargetIndex = getChannelIndex(channelId);\n  const dmTargetIndex = getDmIndex(dmId);\n  let messageIndex = -1;\n  let flags;\n\n  if (user === undefined) {\n    throw HTTPError(403, 'Invalid token');\n  }\n\n  if (channelTargetIndex === -1 && dmTargetIndex === -1) {\n    throw HTTPError(400, 'Invalid channelId and dmId');\n  }\n\n  // Finds the message's location\n  if (channel === undefined && dm === undefined) {\n    throw HTTPError(400, 'Message does not exist');\n  } else if (channel !== undefined) {\n    messageIndex = findMessageIndexInChannel(channel, ogMessageId);\n    flags = channel;\n  } else {\n    messageIndex = findMessageIndexInDM(dm, ogMessageId);\n    flags = dm;\n  }\n\n  if (channelId !== -1 && dmId !== -1) {\n    throw HTTPError(400, 'Neither channelId nor dmId are -1');\n  }\n  if (message.length > 1000) {\n    throw HTTPError(400, 'Message cannot exceed 1000 characters');\n  }\n\n  let allMemberIds = getAllMemberIds(flags);\n  if (!allMemberIds.includes(user.authUserId)) {\n    throw HTTPError(400, 'You cannot share message from this');\n  }\n\n  const sharedMessageId = Math.floor(Math.random() * 1000000);\n  // Shares the message to a channel\n  if (channelId !== -1) {\n    allMemberIds = getAllMemberIds(data.channels[channelTargetIndex]);\n    if (!allMemberIds.includes(user.authUserId)) {\n      throw HTTPError(403, 'You cannot share message to this channel');\n    }\n    const newMessage = {\n      messageId: sharedMessageId,\n      uId: user.authUserId,\n      message: flags.messages[messageIndex].message + ' ' + message,\n      timeSent: Math.floor(Date.now() / 1000),\n      isPinned: false,\n      reacts: [] as Array<reactsObject>,\n    };\n    data.channels[channelTargetIndex].messages.push(newMessage);\n    setData(data);\n    incrementMessageStat(user.authUserId);\n    const targetChannel = data.channels[channelTargetIndex];\n    const allMemberIdsTarget = getAllMemberIds(targetChannel);\n    sendNotifChannel(user, message, allMemberIdsTarget, targetChannel);\n    return { sharedMessageId: sharedMessageId };\n\n    // Shares the message to a dm\n  } else {\n    allMemberIds = getAllMemberIds(data.dm[dmTargetIndex]);\n    if (!allMemberIds.includes(user.authUserId)) {\n      throw HTTPError(403, 'You cannot share message to this dm');\n    }\n    const newMessage = {\n      messageId: sharedMessageId,\n      uId: user.authUserId,\n      message: flags.messages[messageIndex].message + ' ' + message,\n      timeSent: Math.floor(Date.now() / 1000),\n      isPinned: false,\n      reacts: [] as Array<reactsObject>,\n    };\n    data.dm[dmTargetIndex].messages.push(newMessage);\n    setData(data);\n    incrementMessageStat(user.authUserId);\n    const targetDM = data.dm[dmTargetIndex];\n    const allMemberIdsTarget = getAllMemberIds(targetDM);\n    sendNotifDm(user, message, allMemberIdsTarget, targetDM);\n    return { sharedMessageId: sharedMessageId };\n  }\n}\n/**\n *\n * @param token - The token of the user sending the message.\n * @param messageId - The ID of the message being reacted to.\n * @param reactId - The ID of the react.\n * @returns\n */\nexport function messageReactV1(\n  token: string,\n  messageId: number,\n  reactId: number\n) {\n  // errors\n  const data = getData();\n  const tokenFound = getUserByToken(token);\n\n  const channel = findChannelByMessageId(messageId);\n  const dm = findDMbyMessageId(messageId);\n\n  if (tokenFound === undefined) {\n    throw HTTPError(403, 'Invalid token');\n  }\n\n  if (channel === undefined && dm === undefined) {\n    throw HTTPError(400, 'Message does not exist');\n  }\n\n  if (reactId !== 1) {\n    throw HTTPError(400, 'Invalid react id');\n  }\n\n  let messageIndex = -1;\n  let flags;\n  let index;\n\n  if (channel !== undefined) {\n    messageIndex = findMessageIndexInChannel(channel, messageId);\n    index = getChannelIndex(channel.channelId);\n    flags = channel;\n  } else {\n    messageIndex = findMessageIndexInDM(dm, messageId);\n    index = getDmIndex(dm.dmId);\n    flags = dm;\n  }\n\n  const allMemberIds = getAllMemberIds(flags);\n  if (!allMemberIds.includes(tokenFound.authUserId)) {\n    throw HTTPError(403, 'You cannot react to this message');\n  }\n\n  if (flags === channel) {\n    // if user already reacted to message\n    if (\n      data.channels[index].messages[messageIndex].reacts.length !== 0 &&\n      data.channels[index].messages[messageIndex].reacts[0].uIds.includes(\n        tokenFound.authUserId\n      )\n    ) {\n      throw HTTPError(400, 'You already reacted to this message');\n    }\n\n    if (data.channels[index].messages[messageIndex].reacts.length === 0) {\n      const newReact = {\n        reactId: reactId,\n        uIds: [tokenFound.authUserId],\n      };\n      data.channels[index].messages[messageIndex].reacts.push(newReact);\n    } else {\n      // find the reacts and push the uid\n      data.channels[index].messages[messageIndex].reacts.forEach(\n        (react: reactsObject) => {\n          if (react.reactId === reactId) {\n            react.uIds.push(tokenFound.authUserId);\n          }\n        }\n      );\n    }\n\n    // send notification to message author that someone reacted to their message\n    if (\n      data.channels[index].messages[messageIndex].uId !== tokenFound.authUserId\n    ) {\n      const newNotification = {\n        channelId: data.channels[index].channelId,\n        dmId: -1,\n        notificationMessage: `${tokenFound.handleStr} reacted to your message in ${data.channels[index].name}`,\n      };\n\n      const userIndex = findUserIndex(\n        data.channels[index].messages[messageIndex].uId\n      );\n\n      data.users[userIndex].notifications.push(newNotification);\n    }\n  } else {\n    // if user already reacted to message\n    if (\n      data.dm[index].messages[messageIndex].reacts.length !== 0 &&\n      data.dm[index].messages[messageIndex].reacts[0].uIds.includes(\n        tokenFound.authUserId\n      )\n    ) {\n      throw HTTPError(400, 'You already reacted to this message');\n    }\n    if (data.dm[index].messages[messageIndex].reacts.length === 0) {\n      const newReact = {\n        reactId: reactId,\n        uIds: [tokenFound.authUserId],\n      };\n      data.dm[index].messages[messageIndex].reacts.push(newReact);\n    } else {\n      // find the reacts and push the uid\n      data.dm[index].messages[messageIndex].reacts.forEach(\n        (react: reactsObject) => {\n          if (react.reactId === reactId) {\n            react.uIds.push(tokenFound.authUserId);\n          }\n        }\n      );\n    }\n\n    // send notification to message author that someone reacted to their message\n    if (data.dm[index].messages[messageIndex].uId !== tokenFound.authUserId) {\n      const newNotification = {\n        channelId: -1,\n        dmId: data.dm[index].dmId,\n        notificationMessage: `${tokenFound.handleStr} reacted to your message in ${data.dm[index].name}`,\n      };\n\n      const userIndex = findUserIndex(\n        data.dm[index].messages[messageIndex].uId\n      );\n\n      data.users[userIndex].notifications.push(newNotification);\n    }\n  }\n\n  setData(data);\n  return {};\n}\n\n/**\n *\n * @param token - user token making request\n * @param messageId - message id of message to unreact to\n * @param reactId - react id of react to unreact to\n * @returns\n */\nexport function messageUnreactV1(\n  token: string,\n  messageId: number,\n  reactId: number\n) {\n  // errors\n  const data = getData();\n  const tokenFound = getUserByToken(token);\n\n  const channel = findChannelByMessageId(messageId);\n  const dm = findDMbyMessageId(messageId);\n\n  if (tokenFound === undefined) {\n    throw HTTPError(403, 'Invalid token');\n  }\n\n  if (channel === undefined && dm === undefined) {\n    throw HTTPError(400, 'Message does not exist');\n  }\n\n  if (reactId !== 1) {\n    throw HTTPError(400, 'Invalid react id');\n  }\n\n  let messageIndex = -1;\n  let flags;\n  let index;\n\n  if (channel !== undefined) {\n    messageIndex = findMessageIndexInChannel(channel, messageId);\n    index = getChannelIndex(channel.channelId);\n    flags = channel;\n  } else {\n    messageIndex = findMessageIndexInDM(dm, messageId);\n    index = getDmIndex(dm.dmId);\n    flags = dm;\n  }\n\n  const allMemberIds = getAllMemberIds(flags);\n  if (!allMemberIds.includes(tokenFound.authUserId)) {\n    throw HTTPError(403, 'You cannot react to this message');\n  }\n\n  if (flags === channel) {\n    // if user is not in the uids array\n    if (data.channels[index].messages[messageIndex].reacts.length === 0) {\n      throw HTTPError(400, 'There is no reaction to remove');\n    }\n    if (\n      !data.channels[index].messages[messageIndex].reacts[0].uIds.includes(\n        tokenFound.authUserId\n      )\n    ) {\n      throw HTTPError(400, 'You have not reacted to this message');\n    }\n\n    // if user is in the uids array\n    data.channels[index].messages[messageIndex].reacts.forEach(\n      (react: reactsObject) => {\n        if (react.reactId === reactId) {\n          react.uIds.splice(react.uIds.indexOf(tokenFound.authUserId), 1);\n        }\n      }\n    );\n\n    // if there is no more uids in the array, remove the react\n    if (\n      data.channels[index].messages[messageIndex].reacts[0].uIds.length === 0\n    ) {\n      data.channels[index].messages[messageIndex].reacts = [];\n    }\n  } else {\n    if (data.dm[index].messages[messageIndex].reacts.length === 0) {\n      throw HTTPError(400, 'There is no reaction to remove');\n    }\n\n    // if user is not in the uids array\n    if (\n      !data.dm[index].messages[messageIndex].reacts[0].uIds.includes(\n        tokenFound.authUserId\n      )\n    ) {\n      throw HTTPError(400, 'You have not reacted to this message');\n    }\n\n    // if user is in the uids array\n    data.dm[index].messages[messageIndex].reacts.forEach(\n      (react: reactsObject) => {\n        if (react.reactId === reactId) {\n          react.uIds.splice(react.uIds.indexOf(tokenFound.authUserId), 1);\n        }\n      }\n    );\n\n    // if there is no more uids in the array, remove the react\n    if (data.dm[index].messages[messageIndex].reacts[0].uIds.length === 0) {\n      data.dm[index].messages[messageIndex].reacts = [];\n    }\n  }\n\n  setData(data);\n  return {};\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"fb5615d1c4c94bd07045208c32a24f2ceb09d753","contentHash":"12c84ffc006584ec5baf7b8cc96936936b10e83051c86e722823094d49e50583"},"/Users/binvog/Documents/UNSW 2023T1/COMP1531/Indiv_projectbackend/iter4-project-backend/src/users.ts":{"path":"/Users/binvog/Documents/UNSW 2023T1/COMP1531/Indiv_projectbackend/iter4-project-backend/src/users.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":190}},"4":{"start":{"line":7,"column":18},"end":{"line":7,"column":40}},"5":{"start":{"line":8,"column":23},"end":{"line":8,"column":50}},"6":{"start":{"line":9,"column":18},"end":{"line":9,"column":55}},"7":{"start":{"line":10,"column":20},"end":{"line":10,"column":59}},"8":{"start":{"line":11,"column":20},"end":{"line":11,"column":44}},"9":{"start":{"line":12,"column":21},"end":{"line":12,"column":61}},"10":{"start":{"line":13,"column":14},"end":{"line":13,"column":47}},"11":{"start":{"line":38,"column":15},"end":{"line":38,"column":58}},"12":{"start":{"line":39,"column":4},"end":{"line":41,"column":5}},"13":{"start":{"line":40,"column":8},"end":{"line":40,"column":63}},"14":{"start":{"line":42,"column":15},"end":{"line":42,"column":41}},"15":{"start":{"line":44,"column":4},"end":{"line":46,"column":5}},"16":{"start":{"line":45,"column":8},"end":{"line":45,"column":61}},"17":{"start":{"line":48,"column":18},"end":{"line":48,"column":85}},"18":{"start":{"line":48,"column":54},"end":{"line":48,"column":82}},"19":{"start":{"line":50,"column":4},"end":{"line":59,"column":6}},"20":{"start":{"line":61,"column":0},"end":{"line":61,"column":38}},"21":{"start":{"line":70,"column":15},"end":{"line":70,"column":58}},"22":{"start":{"line":71,"column":4},"end":{"line":73,"column":5}},"23":{"start":{"line":72,"column":8},"end":{"line":72,"column":63}},"24":{"start":{"line":74,"column":4},"end":{"line":76,"column":5}},"25":{"start":{"line":75,"column":8},"end":{"line":75,"column":63}},"26":{"start":{"line":77,"column":15},"end":{"line":77,"column":41}},"27":{"start":{"line":78,"column":4},"end":{"line":80,"column":5}},"28":{"start":{"line":78,"column":42},"end":{"line":78,"column":70}},"29":{"start":{"line":79,"column":8},"end":{"line":79,"column":101}},"30":{"start":{"line":81,"column":20},"end":{"line":81,"column":72}},"31":{"start":{"line":82,"column":4},"end":{"line":82,"column":40}},"32":{"start":{"line":83,"column":4},"end":{"line":83,"column":35}},"33":{"start":{"line":84,"column":4},"end":{"line":84,"column":73}},"34":{"start":{"line":85,"column":4},"end":{"line":85,"column":14}},"35":{"start":{"line":87,"column":0},"end":{"line":87,"column":28}},"36":{"start":{"line":97,"column":15},"end":{"line":97,"column":41}},"37":{"start":{"line":98,"column":15},"end":{"line":98,"column":58}},"38":{"start":{"line":99,"column":4},"end":{"line":101,"column":5}},"39":{"start":{"line":100,"column":8},"end":{"line":100,"column":63}},"40":{"start":{"line":102,"column":4},"end":{"line":107,"column":5}},"41":{"start":{"line":106,"column":8},"end":{"line":106,"column":88}},"42":{"start":{"line":108,"column":20},"end":{"line":108,"column":72}},"43":{"start":{"line":109,"column":4},"end":{"line":109,"column":48}},"44":{"start":{"line":110,"column":4},"end":{"line":110,"column":46}},"45":{"start":{"line":111,"column":4},"end":{"line":111,"column":35}},"46":{"start":{"line":112,"column":4},"end":{"line":112,"column":81}},"47":{"start":{"line":113,"column":4},"end":{"line":113,"column":79}},"48":{"start":{"line":114,"column":4},"end":{"line":114,"column":14}},"49":{"start":{"line":116,"column":0},"end":{"line":116,"column":26}},"50":{"start":{"line":125,"column":15},"end":{"line":125,"column":41}},"51":{"start":{"line":126,"column":15},"end":{"line":126,"column":58}},"52":{"start":{"line":127,"column":4},"end":{"line":129,"column":5}},"53":{"start":{"line":128,"column":8},"end":{"line":128,"column":63}},"54":{"start":{"line":130,"column":4},"end":{"line":134,"column":5}},"55":{"start":{"line":133,"column":8},"end":{"line":133,"column":89}},"56":{"start":{"line":135,"column":4},"end":{"line":137,"column":5}},"57":{"start":{"line":135,"column":42},"end":{"line":135,"column":78}},"58":{"start":{"line":136,"column":8},"end":{"line":136,"column":94}},"59":{"start":{"line":138,"column":20},"end":{"line":138,"column":72}},"60":{"start":{"line":139,"column":4},"end":{"line":139,"column":48}},"61":{"start":{"line":140,"column":4},"end":{"line":140,"column":35}},"62":{"start":{"line":141,"column":4},"end":{"line":141,"column":81}},"63":{"start":{"line":142,"column":4},"end":{"line":142,"column":14}},"64":{"start":{"line":144,"column":0},"end":{"line":144,"column":30}},"65":{"start":{"line":152,"column":15},"end":{"line":152,"column":41}},"66":{"start":{"line":153,"column":15},"end":{"line":153,"column":58}},"67":{"start":{"line":154,"column":4},"end":{"line":156,"column":5}},"68":{"start":{"line":155,"column":8},"end":{"line":155,"column":63}},"69":{"start":{"line":157,"column":4},"end":{"line":166,"column":6}},"70":{"start":{"line":158,"column":45},"end":{"line":165,"column":11}},"71":{"start":{"line":168,"column":0},"end":{"line":168,"column":34}},"72":{"start":{"line":180,"column":15},"end":{"line":180,"column":58}},"73":{"start":{"line":181,"column":4},"end":{"line":183,"column":5}},"74":{"start":{"line":182,"column":8},"end":{"line":182,"column":63}},"75":{"start":{"line":184,"column":14},"end":{"line":184,"column":56}},"76":{"start":{"line":185,"column":4},"end":{"line":187,"column":5}},"77":{"start":{"line":186,"column":8},"end":{"line":186,"column":67}},"78":{"start":{"line":189,"column":4},"end":{"line":191,"column":5}},"79":{"start":{"line":190,"column":8},"end":{"line":190,"column":68}},"80":{"start":{"line":192,"column":4},"end":{"line":192,"column":84}},"81":{"start":{"line":193,"column":20},"end":{"line":193,"column":58}},"82":{"start":{"line":194,"column":17},"end":{"line":194,"column":38}},"83":{"start":{"line":195,"column":21},"end":{"line":195,"column":38}},"84":{"start":{"line":196,"column":4},"end":{"line":203,"column":5}},"85":{"start":{"line":202,"column":8},"end":{"line":202,"column":74}},"86":{"start":{"line":205,"column":23},"end":{"line":205,"column":62}},"87":{"start":{"line":206,"column":27},"end":{"line":206,"column":62}},"88":{"start":{"line":207,"column":4},"end":{"line":214,"column":34}},"89":{"start":{"line":217,"column":20},"end":{"line":217,"column":72}},"90":{"start":{"line":218,"column":15},"end":{"line":218,"column":41}},"91":{"start":{"line":219,"column":15},"end":{"line":219,"column":63}},"92":{"start":{"line":220,"column":15},"end":{"line":220,"column":44}},"93":{"start":{"line":221,"column":17},"end":{"line":221,"column":95}},"94":{"start":{"line":222,"column":4},"end":{"line":222,"column":49}},"95":{"start":{"line":223,"column":4},"end":{"line":223,"column":35}},"96":{"start":{"line":224,"column":4},"end":{"line":224,"column":82}},"97":{"start":{"line":225,"column":4},"end":{"line":225,"column":14}},"98":{"start":{"line":227,"column":0},"end":{"line":227,"column":60}},"99":{"start":{"line":229,"column":15},"end":{"line":229,"column":58}},"100":{"start":{"line":230,"column":4},"end":{"line":232,"column":5}},"101":{"start":{"line":231,"column":8},"end":{"line":231,"column":63}},"102":{"start":{"line":233,"column":4},"end":{"line":233,"column":61}},"103":{"start":{"line":234,"column":15},"end":{"line":234,"column":41}},"104":{"start":{"line":235,"column":20},"end":{"line":235,"column":72}},"105":{"start":{"line":236,"column":20},"end":{"line":236,"column":47}},"106":{"start":{"line":237,"column":4},"end":{"line":237,"column":36}},"107":{"start":{"line":239,"column":0},"end":{"line":239,"column":34}},"108":{"start":{"line":241,"column":15},"end":{"line":241,"column":58}},"109":{"start":{"line":242,"column":4},"end":{"line":244,"column":5}},"110":{"start":{"line":243,"column":8},"end":{"line":243,"column":63}},"111":{"start":{"line":246,"column":4},"end":{"line":246,"column":46}},"112":{"start":{"line":247,"column":15},"end":{"line":247,"column":41}},"113":{"start":{"line":248,"column":25},"end":{"line":248,"column":35}},"114":{"start":{"line":249,"column":4},"end":{"line":249,"column":46}},"115":{"start":{"line":251,"column":0},"end":{"line":251,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"userProfileV2","decl":{"start":{"line":37,"column":9},"end":{"line":37,"column":22}},"loc":{"start":{"line":37,"column":35},"end":{"line":60,"column":1}},"line":37},"2":{"name":"(anonymous_2)","decl":{"start":{"line":48,"column":39},"end":{"line":48,"column":40}},"loc":{"start":{"line":48,"column":52},"end":{"line":48,"column":84}},"line":48},"3":{"name":"setEmail","decl":{"start":{"line":69,"column":9},"end":{"line":69,"column":17}},"loc":{"start":{"line":69,"column":32},"end":{"line":86,"column":1}},"line":69},"4":{"name":"(anonymous_4)","decl":{"start":{"line":78,"column":24},"end":{"line":78,"column":25}},"loc":{"start":{"line":78,"column":40},"end":{"line":78,"column":72}},"line":78},"5":{"name":"setName","decl":{"start":{"line":96,"column":9},"end":{"line":96,"column":16}},"loc":{"start":{"line":96,"column":45},"end":{"line":115,"column":1}},"line":96},"6":{"name":"setHandle","decl":{"start":{"line":124,"column":9},"end":{"line":124,"column":18}},"loc":{"start":{"line":124,"column":37},"end":{"line":143,"column":1}},"line":124},"7":{"name":"(anonymous_7)","decl":{"start":{"line":135,"column":24},"end":{"line":135,"column":25}},"loc":{"start":{"line":135,"column":40},"end":{"line":135,"column":80}},"line":135},"8":{"name":"getAllUsers","decl":{"start":{"line":151,"column":9},"end":{"line":151,"column":20}},"loc":{"start":{"line":151,"column":28},"end":{"line":167,"column":1}},"line":151},"9":{"name":"(anonymous_9)","decl":{"start":{"line":158,"column":30},"end":{"line":158,"column":31}},"loc":{"start":{"line":158,"column":43},"end":{"line":165,"column":13}},"line":158},"10":{"name":"userProfileUploadPhotoV1","decl":{"start":{"line":179,"column":9},"end":{"line":179,"column":33}},"loc":{"start":{"line":179,"column":77},"end":{"line":226,"column":1}},"line":179},"11":{"name":"userStatsV1","decl":{"start":{"line":228,"column":9},"end":{"line":228,"column":20}},"loc":{"start":{"line":228,"column":28},"end":{"line":238,"column":1}},"line":228},"12":{"name":"usersStatsV1","decl":{"start":{"line":240,"column":9},"end":{"line":240,"column":21}},"loc":{"start":{"line":240,"column":29},"end":{"line":250,"column":1}},"line":240}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":39,"column":4},"end":{"line":41,"column":5}},"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":41,"column":5}},{"start":{"line":39,"column":4},"end":{"line":41,"column":5}}],"line":39},"4":{"loc":{"start":{"line":44,"column":4},"end":{"line":46,"column":5}},"type":"if","locations":[{"start":{"line":44,"column":4},"end":{"line":46,"column":5}},{"start":{"line":44,"column":4},"end":{"line":46,"column":5}}],"line":44},"5":{"loc":{"start":{"line":71,"column":4},"end":{"line":73,"column":5}},"type":"if","locations":[{"start":{"line":71,"column":4},"end":{"line":73,"column":5}},{"start":{"line":71,"column":4},"end":{"line":73,"column":5}}],"line":71},"6":{"loc":{"start":{"line":74,"column":4},"end":{"line":76,"column":5}},"type":"if","locations":[{"start":{"line":74,"column":4},"end":{"line":76,"column":5}},{"start":{"line":74,"column":4},"end":{"line":76,"column":5}}],"line":74},"7":{"loc":{"start":{"line":78,"column":4},"end":{"line":80,"column":5}},"type":"if","locations":[{"start":{"line":78,"column":4},"end":{"line":80,"column":5}},{"start":{"line":78,"column":4},"end":{"line":80,"column":5}}],"line":78},"8":{"loc":{"start":{"line":99,"column":4},"end":{"line":101,"column":5}},"type":"if","locations":[{"start":{"line":99,"column":4},"end":{"line":101,"column":5}},{"start":{"line":99,"column":4},"end":{"line":101,"column":5}}],"line":99},"9":{"loc":{"start":{"line":102,"column":4},"end":{"line":107,"column":5}},"type":"if","locations":[{"start":{"line":102,"column":4},"end":{"line":107,"column":5}},{"start":{"line":102,"column":4},"end":{"line":107,"column":5}}],"line":102},"10":{"loc":{"start":{"line":102,"column":8},"end":{"line":105,"column":28}},"type":"binary-expr","locations":[{"start":{"line":102,"column":8},"end":{"line":102,"column":28}},{"start":{"line":103,"column":8},"end":{"line":103,"column":29}},{"start":{"line":104,"column":8},"end":{"line":104,"column":27}},{"start":{"line":105,"column":8},"end":{"line":105,"column":28}}],"line":102},"11":{"loc":{"start":{"line":127,"column":4},"end":{"line":129,"column":5}},"type":"if","locations":[{"start":{"line":127,"column":4},"end":{"line":129,"column":5}},{"start":{"line":127,"column":4},"end":{"line":129,"column":5}}],"line":127},"12":{"loc":{"start":{"line":130,"column":4},"end":{"line":134,"column":5}},"type":"if","locations":[{"start":{"line":130,"column":4},"end":{"line":134,"column":5}},{"start":{"line":130,"column":4},"end":{"line":134,"column":5}}],"line":130},"13":{"loc":{"start":{"line":130,"column":8},"end":{"line":132,"column":41}},"type":"binary-expr","locations":[{"start":{"line":130,"column":8},"end":{"line":130,"column":28}},{"start":{"line":131,"column":8},"end":{"line":131,"column":29}},{"start":{"line":132,"column":8},"end":{"line":132,"column":41}}],"line":130},"14":{"loc":{"start":{"line":135,"column":4},"end":{"line":137,"column":5}},"type":"if","locations":[{"start":{"line":135,"column":4},"end":{"line":137,"column":5}},{"start":{"line":135,"column":4},"end":{"line":137,"column":5}}],"line":135},"15":{"loc":{"start":{"line":154,"column":4},"end":{"line":156,"column":5}},"type":"if","locations":[{"start":{"line":154,"column":4},"end":{"line":156,"column":5}},{"start":{"line":154,"column":4},"end":{"line":156,"column":5}}],"line":154},"16":{"loc":{"start":{"line":181,"column":4},"end":{"line":183,"column":5}},"type":"if","locations":[{"start":{"line":181,"column":4},"end":{"line":183,"column":5}},{"start":{"line":181,"column":4},"end":{"line":183,"column":5}}],"line":181},"17":{"loc":{"start":{"line":185,"column":4},"end":{"line":187,"column":5}},"type":"if","locations":[{"start":{"line":185,"column":4},"end":{"line":187,"column":5}},{"start":{"line":185,"column":4},"end":{"line":187,"column":5}}],"line":185},"18":{"loc":{"start":{"line":189,"column":4},"end":{"line":191,"column":5}},"type":"if","locations":[{"start":{"line":189,"column":4},"end":{"line":191,"column":5}},{"start":{"line":189,"column":4},"end":{"line":191,"column":5}}],"line":189},"19":{"loc":{"start":{"line":196,"column":4},"end":{"line":203,"column":5}},"type":"if","locations":[{"start":{"line":196,"column":4},"end":{"line":203,"column":5}},{"start":{"line":196,"column":4},"end":{"line":203,"column":5}}],"line":196},"20":{"loc":{"start":{"line":196,"column":8},"end":{"line":201,"column":22}},"type":"binary-expr","locations":[{"start":{"line":196,"column":8},"end":{"line":196,"column":18}},{"start":{"line":197,"column":8},"end":{"line":197,"column":18}},{"start":{"line":198,"column":8},"end":{"line":198,"column":31}},{"start":{"line":199,"column":8},"end":{"line":199,"column":32}},{"start":{"line":200,"column":8},"end":{"line":200,"column":22}},{"start":{"line":201,"column":8},"end":{"line":201,"column":22}}],"line":196},"21":{"loc":{"start":{"line":219,"column":24},"end":{"line":219,"column":62}},"type":"binary-expr","locations":[{"start":{"line":219,"column":24},"end":{"line":219,"column":40}},{"start":{"line":219,"column":44},"end":{"line":219,"column":62}}],"line":219},"22":{"loc":{"start":{"line":220,"column":15},"end":{"line":220,"column":44}},"type":"binary-expr","locations":[{"start":{"line":220,"column":15},"end":{"line":220,"column":29}},{"start":{"line":220,"column":33},"end":{"line":220,"column":44}}],"line":220},"23":{"loc":{"start":{"line":230,"column":4},"end":{"line":232,"column":5}},"type":"if","locations":[{"start":{"line":230,"column":4},"end":{"line":232,"column":5}},{"start":{"line":230,"column":4},"end":{"line":232,"column":5}}],"line":230},"24":{"loc":{"start":{"line":242,"column":4},"end":{"line":244,"column":5}},"type":"if","locations":[{"start":{"line":242,"column":4},"end":{"line":244,"column":5}},{"start":{"line":242,"column":4},"end":{"line":244,"column":5}}],"line":242}},"s":{"0":1,"1":4,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":14,"12":14,"13":1,"14":13,"15":13,"16":1,"17":12,"18":18,"19":12,"20":1,"21":4,"22":4,"23":1,"24":3,"25":1,"26":2,"27":2,"28":3,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":3,"37":3,"38":3,"39":1,"40":2,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":6,"51":6,"52":6,"53":1,"54":5,"55":3,"56":2,"57":4,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":2,"66":2,"67":2,"68":1,"69":1,"70":2,"71":1,"72":10,"73":10,"74":1,"75":9,"76":9,"77":1,"78":8,"79":1,"80":7,"81":7,"82":7,"83":7,"84":7,"85":5,"86":2,"87":2,"88":2,"89":2,"90":2,"91":2,"92":2,"93":2,"94":2,"95":2,"96":2,"97":2,"98":1,"99":16,"100":16,"101":1,"102":15,"103":15,"104":15,"105":15,"106":15,"107":1,"108":14,"109":14,"110":1,"111":13,"112":13,"113":13,"114":13,"115":1},"f":{"0":4,"1":14,"2":18,"3":4,"4":3,"5":3,"6":6,"7":4,"8":2,"9":2,"10":10,"11":16,"12":14},"b":{"0":[1,1,1],"1":[0,4],"2":[4,4],"3":[1,13],"4":[1,12],"5":[1,3],"6":[1,2],"7":[1,1],"8":[1,2],"9":[1,1],"10":[2,1,1,1],"11":[1,5],"12":[3,2],"13":[5,4,3],"14":[1,1],"15":[1,1],"16":[1,9],"17":[1,8],"18":[1,7],"19":[5,2],"20":[7,7,7,5,4,2],"21":[2,2],"22":[2,2],"23":[1,15],"24":[1,13]},"inputSourceMap":{"version":3,"file":"/Users/binvog/Documents/UNSW 2023T1/COMP1531/Indiv_projectbackend/iter4-project-backend/src/users.ts","sources":["/Users/binvog/Documents/UNSW 2023T1/COMP1531/Indiv_projectbackend/iter4-project-backend/src/users.ts"],"names":[],"mappings":"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","sourcesContent":["import { getData, setData } from './dataStore';\nimport {\n  userObject,\n  errorMessage,\n  allUsers,\n  userStats,\n  statsData,\n} from './interfaces';\nimport {\n  isUser,\n  getUserByToken,\n  findUserIndex,\n  downloadImage,\n  updateAllData,\n  updateInvolvement,\n  updateUtilization,\n} from './functionHelper';\nimport validator from 'validator';\nimport HTTPError from 'http-errors';\nimport { port } from './config.json';\nimport request from 'sync-request';\nimport sharp from 'sharp';\n// import { getAllMemberIds } from './functionHelper';\n\n/**\n * For a valid user, userProfileV1 returns information about the user\n * including their user ID, email address, first name, last name,\n * and handlestring.\n *\n * @param {number} authUserId - the authenticated user Id\n * @param {number} uId - User's unique Id\n *\n * @returns {error: 'error message'} - if the authUserId is not in the dataStore and invalid\n *                                   | if the uId is not in the dataStore and invalid\n * @returns {{authUserId:number, authemail:string,\n * authfirstname:string, authlastname:string, handlestring:string}} - returns\n * the user object and its associated data if it exists in the dataStore\n *\n */\n\n/**\n * Get user profile based on the given token and user ID.\n *\n * @param {string} token - The user's access token.\n * @param {number} uId - The user ID to retrieve the profile for.\n * @return {Object} Returns a user object if successful, or an error message if unsuccessful.\n */\nexport function userProfileV2(\n  token: string,\n  uId: number\n): { user: userObject } {\n  const user = getUserByToken(token);\n  if (user === undefined) {\n    throw HTTPError(403, 'Invalid token');\n  }\n\n  const data = getData();\n  // Check that uId is valid\n  if (!isUser(uId)) {\n    throw HTTPError(400, 'Invalid uId');\n  }\n  // Storing the user's data in an object to be returned\n  const userNum = data.users.findIndex((a) => a.authUserId === uId);\n  // If both conditions are met, return the userNum object information\n  return {\n    user: {\n      uId: data.users[userNum].authUserId,\n      email: data.users[userNum].email,\n      nameFirst: data.users[userNum].nameFirst,\n      nameLast: data.users[userNum].nameLast,\n      handleStr: data.users[userNum].handleStr,\n      profileImgUrl: data.users[userNum].profileImgUrl,\n    },\n  };\n}\n\n/**\n * Set the email address of the authenticated user.\n *\n * @param {string} token - The user's access token.\n * @param {string} email - The new email address to set for the user.\n * @return {{}} Returns an empty object if successful, or an error message if unsuccessful.\n */\nexport function setEmail(token: string, email: string) {\n  const user = getUserByToken(token);\n  if (user === undefined) {\n    throw HTTPError(403, 'Invalid token');\n  }\n\n  if (!validator.isEmail(email)) {\n    throw HTTPError(400, 'invalid email');\n  }\n\n  const data = getData();\n  if (data.users.some((user) => user.email === email)) {\n    throw HTTPError(400, 'email address is already being used by another user');\n  }\n  const userIndex = findUserIndex(user.authUserId);\n  data.users[userIndex].email = email;\n\n  setData(data);\n  updateAllData(email, user.authUserId, 'email');\n  return {};\n}\n\n/**\n * Set the first and last name of the authenticated user.\n *\n * @param {string} token - The user's access token.\n * @param {string} nameFirst - The user's new first name.\n * @param {string} nameLast - The user's new last name.\n * @return {{}} Returns an empty object if successful, or an error message if unsuccessful.\n */\nexport function setName(token: string, nameFirst: string, nameLast: string) {\n  const data = getData();\n  const user = getUserByToken(token);\n  if (user === undefined) {\n    throw HTTPError(403, 'Invalid token');\n  }\n\n  if (\n    nameFirst.length < 1 ||\n    nameFirst.length > 50 ||\n    nameLast.length < 1 ||\n    nameLast.length > 50\n  ) {\n    throw HTTPError(400, 'name length should in range of 1 to 50');\n  }\n  const userIndex = findUserIndex(user.authUserId);\n  data.users[userIndex].nameFirst = nameFirst;\n  data.users[userIndex].nameLast = nameLast;\n  setData(data);\n  updateAllData(nameFirst, user.authUserId, 'nameFirst');\n  updateAllData(nameLast, user.authUserId, 'nameLast');\n  return {};\n}\n\n/**\n * Set the handle (username) of the authenticated user.\n *\n * @param {string} token - The user's access token.\n * @param {string} handleStr - The new handle for the user.\n * @return {{}} Returns an empty object if successful, or an error message if unsuccessful.\n */\nexport function setHandle(\n  token: string,\n  handleStr: string\n): Record<string, never> {\n  const data = getData();\n  const user = getUserByToken(token);\n  if (user === undefined) {\n    throw HTTPError(403, 'Invalid token');\n  }\n\n  if (\n    handleStr.length < 3 ||\n    handleStr.length > 20 ||\n    !/^[a-zA-Z0-9]+$/.test(handleStr)\n  ) {\n    throw HTTPError(400, 'Please use alphanumeric characters only');\n  }\n  if (data.users.some((user) => user.handleStr === handleStr)) {\n    throw HTTPError(400, 'handle is already being used by another user');\n  }\n  const userIndex = findUserIndex(user.authUserId);\n  data.users[userIndex].handleStr = handleStr;\n  setData(data);\n\n  updateAllData(handleStr, user.authUserId, 'handleStr');\n  return {};\n}\n\n/**\n * Get all users.\n *\n * @param {string} token - The user's access token.\n * @return {Array<Object> | errorMessage} Returns an array of user objects if successful, or an error message if unsuccessful.\n */\nexport function getAllUsers(token: string): allUsers | errorMessage {\n  const data = getData();\n  const user = getUserByToken(token);\n  if (user === undefined) {\n    throw HTTPError(403, 'Invalid token');\n  }\n  return {\n    users: data.users.map((a) => ({\n      uId: a.authUserId,\n      email: a.email,\n      nameFirst: a.nameFirst,\n      nameLast: a.nameLast,\n      handleStr: a.handleStr,\n      profileImgUrl: a.profileImgUrl,\n    })),\n  };\n}\n\n/**\n *\n * @param token - The user's access token.\n * @param imgUrl - The URL of the image to upload. (ONLY JPG)\n * @param xStart - The x starting coordinate from the top left corner of the crop area.\n * @param yStart - The y starting coordinate from the top left corner of the crop area.\n * @param xEnd - The x ending coordinate from the top left corner of the crop area.\n * @param yEnd - The y ending coordinate from the top left corner of the crop area.\n * @returns {} - Returns an empty object if successful, or throw error message if unsuccessful.\n */\nexport function userProfileUploadPhotoV1(\n  token: string,\n  imgUrl: string,\n  xStart: number,\n  yStart: number,\n  xEnd: number,\n  yEnd: number\n) {\n  const user = getUserByToken(token);\n  if (user === undefined) {\n    throw HTTPError(403, 'Invalid token');\n  }\n\n  const res = request('GET', imgUrl);\n  if (res.statusCode !== 200) {\n    throw HTTPError(400, 'Invalid image URL');\n  }\n\n  // check if image is a jpg\n  if (!imgUrl.endsWith('.jpg')) {\n    throw HTTPError(400, 'Invalid image type');\n  }\n\n  downloadImage(imgUrl, `${user.authUserId}.jpg`);\n\n  const imagePath = `img/${user.authUserId}.jpg`;\n\n  const sizeOf = require('image-size');\n  const dimensions = sizeOf(imagePath);\n\n  if (\n    xStart < 0 ||\n    yStart < 0 ||\n    xEnd > dimensions.width ||\n    yEnd > dimensions.height ||\n    xStart >= xEnd ||\n    yStart >= yEnd\n  ) {\n    throw HTTPError(400, 'Invalid image dimensions');\n  }\n\n  // crop photo\n  const randomString = Math.random().toString(36).substring(5);\n  const imageCroppedPath = `img/${randomString}.jpg`;\n  sharp(imagePath)\n    .extract({\n      left: xStart,\n      top: yStart,\n      width: xEnd - xStart,\n      height: yEnd - yStart,\n    })\n    .toFile(imageCroppedPath);\n\n  // delete the uncropped photo\n  // fs.unlinkSync(imagePath);\n\n  const userIndex = findUserIndex(user.authUserId);\n  const data = getData();\n  const PORT: number = parseInt(process.env.PORT || port);\n  const HOST: string = process.env.IP || 'localhost';\n  const newUrl = `http://${HOST}:${PORT}/img/${randomString}.jpg`;\n\n  data.users[userIndex].profileImgUrl = newUrl;\n\n  setData(data);\n\n  updateAllData(newUrl, user.authUserId, 'profileImgUrl');\n\n  return {};\n}\n\nexport function userStatsV1(token: string): { userStats: userStats } {\n  const user = getUserByToken(token);\n  if (user === undefined) {\n    throw HTTPError(403, 'Invalid token');\n  }\n\n  updateInvolvement(user.authUserId);\n\n  const data = getData();\n  const userIndex = findUserIndex(user.authUserId);\n  const userStats = data.users[userIndex].stats;\n\n  return { userStats: userStats };\n}\n\nexport function usersStatsV1(token: string): {\n  workspaceStats: statsData;\n} {\n  const user = getUserByToken(token);\n  if (user === undefined) {\n    throw HTTPError(403, 'Invalid token');\n  }\n\n  // update utilization rate\n  updateUtilization();\n\n  const data = getData();\n  const workspaceStats = data.stats;\n\n  return { workspaceStats: workspaceStats };\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"17ccc5e4b5b5bc329ce2287f4afcae4a93709ee7","contentHash":"fac802e5d33705408d709ed3b4beec8485d09e43abd569f0dfde9f32b9319335"},"/Users/binvog/Documents/UNSW 2023T1/COMP1531/Indiv_projectbackend/iter4-project-backend/src/dm.ts":{"path":"/Users/binvog/Documents/UNSW 2023T1/COMP1531/Indiv_projectbackend/iter4-project-backend/src/dm.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":133}},"4":{"start":{"line":7,"column":18},"end":{"line":7,"column":40}},"5":{"start":{"line":8,"column":23},"end":{"line":8,"column":50}},"6":{"start":{"line":9,"column":20},"end":{"line":9,"column":59}},"7":{"start":{"line":19,"column":15},"end":{"line":19,"column":41}},"8":{"start":{"line":20,"column":15},"end":{"line":20,"column":58}},"9":{"start":{"line":21,"column":4},"end":{"line":23,"column":5}},"10":{"start":{"line":22,"column":8},"end":{"line":22,"column":63}},"11":{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},"12":{"start":{"line":26,"column":8},"end":{"line":26,"column":63}},"13":{"start":{"line":29,"column":18},"end":{"line":29,"column":31}},"14":{"start":{"line":30,"column":4},"end":{"line":32,"column":5}},"15":{"start":{"line":31,"column":8},"end":{"line":31,"column":63}},"16":{"start":{"line":33,"column":20},"end":{"line":33,"column":26}},"17":{"start":{"line":34,"column":4},"end":{"line":41,"column":5}},"18":{"start":{"line":34,"column":18},"end":{"line":34,"column":19}},"19":{"start":{"line":34,"column":30},"end":{"line":34,"column":34}},"20":{"start":{"line":35,"column":18},"end":{"line":35,"column":28}},"21":{"start":{"line":36,"column":22},"end":{"line":36,"column":57}},"22":{"start":{"line":37,"column":8},"end":{"line":39,"column":9}},"23":{"start":{"line":38,"column":12},"end":{"line":38,"column":65}},"24":{"start":{"line":40,"column":8},"end":{"line":40,"column":32}},"25":{"start":{"line":44,"column":17},"end":{"line":44,"column":19}},"26":{"start":{"line":45,"column":4},"end":{"line":48,"column":5}},"27":{"start":{"line":45,"column":18},"end":{"line":45,"column":19}},"28":{"start":{"line":45,"column":35},"end":{"line":45,"column":44}},"29":{"start":{"line":46,"column":18},"end":{"line":46,"column":33}},"30":{"start":{"line":47,"column":8},"end":{"line":47,"column":39}},"31":{"start":{"line":49,"column":4},"end":{"line":49,"column":33}},"32":{"start":{"line":50,"column":4},"end":{"line":50,"column":50}},"33":{"start":{"line":52,"column":21},"end":{"line":52,"column":23}},"34":{"start":{"line":53,"column":4},"end":{"line":63,"column":5}},"35":{"start":{"line":53,"column":18},"end":{"line":53,"column":19}},"36":{"start":{"line":53,"column":35},"end":{"line":53,"column":44}},"37":{"start":{"line":54,"column":18},"end":{"line":54,"column":33}},"38":{"start":{"line":55,"column":8},"end":{"line":62,"column":11}},"39":{"start":{"line":65,"column":15},"end":{"line":65,"column":53}},"40":{"start":{"line":66,"column":4},"end":{"line":83,"column":7}},"41":{"start":{"line":86,"column":4},"end":{"line":94,"column":5}},"42":{"start":{"line":86,"column":18},"end":{"line":86,"column":19}},"43":{"start":{"line":86,"column":30},"end":{"line":86,"column":34}},"44":{"start":{"line":87,"column":18},"end":{"line":87,"column":28}},"45":{"start":{"line":88,"column":23},"end":{"line":88,"column":63}},"46":{"start":{"line":89,"column":8},"end":{"line":93,"column":11}},"47":{"start":{"line":96,"column":4},"end":{"line":99,"column":7}},"48":{"start":{"line":100,"column":4},"end":{"line":100,"column":35}},"49":{"start":{"line":101,"column":4},"end":{"line":104,"column":5}},"50":{"start":{"line":101,"column":18},"end":{"line":101,"column":19}},"51":{"start":{"line":101,"column":35},"end":{"line":101,"column":44}},"52":{"start":{"line":102,"column":18},"end":{"line":102,"column":33}},"53":{"start":{"line":103,"column":8},"end":{"line":103,"column":62}},"54":{"start":{"line":105,"column":4},"end":{"line":105,"column":26}},"55":{"start":{"line":107,"column":0},"end":{"line":107,"column":32}},"56":{"start":{"line":130,"column":15},"end":{"line":130,"column":41}},"57":{"start":{"line":131,"column":15},"end":{"line":131,"column":58}},"58":{"start":{"line":132,"column":4},"end":{"line":134,"column":5}},"59":{"start":{"line":133,"column":8},"end":{"line":133,"column":63}},"60":{"start":{"line":135,"column":4},"end":{"line":137,"column":5}},"61":{"start":{"line":136,"column":8},"end":{"line":136,"column":83}},"62":{"start":{"line":138,"column":4},"end":{"line":140,"column":5}},"63":{"start":{"line":139,"column":8},"end":{"line":139,"column":80}},"64":{"start":{"line":141,"column":18},"end":{"line":141,"column":77}},"65":{"start":{"line":141,"column":51},"end":{"line":141,"column":74}},"66":{"start":{"line":142,"column":21},"end":{"line":142,"column":53}},"67":{"start":{"line":143,"column":4},"end":{"line":145,"column":5}},"68":{"start":{"line":144,"column":8},"end":{"line":144,"column":115}},"69":{"start":{"line":146,"column":13},"end":{"line":146,"column":47}},"70":{"start":{"line":147,"column":4},"end":{"line":157,"column":5}},"71":{"start":{"line":147,"column":18},"end":{"line":147,"column":19}},"72":{"start":{"line":147,"column":26},"end":{"line":147,"column":37}},"73":{"start":{"line":148,"column":22},"end":{"line":148,"column":28}},"74":{"start":{"line":149,"column":8},"end":{"line":156,"column":9}},"75":{"start":{"line":150,"column":12},"end":{"line":155,"column":13}},"76":{"start":{"line":151,"column":16},"end":{"line":151,"column":59}},"77":{"start":{"line":154,"column":16},"end":{"line":154,"column":60}},"78":{"start":{"line":159,"column":4},"end":{"line":159,"column":26}},"79":{"start":{"line":160,"column":4},"end":{"line":173,"column":5}},"80":{"start":{"line":161,"column":8},"end":{"line":165,"column":10}},"81":{"start":{"line":168,"column":8},"end":{"line":172,"column":10}},"82":{"start":{"line":175,"column":0},"end":{"line":175,"column":36}},"83":{"start":{"line":194,"column":15},"end":{"line":194,"column":58}},"84":{"start":{"line":195,"column":4},"end":{"line":197,"column":5}},"85":{"start":{"line":196,"column":8},"end":{"line":196,"column":63}},"86":{"start":{"line":198,"column":4},"end":{"line":200,"column":5}},"87":{"start":{"line":199,"column":8},"end":{"line":199,"column":83}},"88":{"start":{"line":201,"column":4},"end":{"line":203,"column":5}},"89":{"start":{"line":202,"column":8},"end":{"line":202,"column":94}},"90":{"start":{"line":204,"column":19},"end":{"line":204,"column":53}},"91":{"start":{"line":205,"column":4},"end":{"line":208,"column":6}},"92":{"start":{"line":210,"column":0},"end":{"line":210,"column":34}},"93":{"start":{"line":225,"column":15},"end":{"line":225,"column":41}},"94":{"start":{"line":226,"column":15},"end":{"line":226,"column":58}},"95":{"start":{"line":227,"column":4},"end":{"line":229,"column":5}},"96":{"start":{"line":228,"column":8},"end":{"line":228,"column":63}},"97":{"start":{"line":230,"column":27},"end":{"line":230,"column":42}},"98":{"start":{"line":231,"column":18},"end":{"line":237,"column":5}},"99":{"start":{"line":234,"column":12},"end":{"line":234,"column":101}},"100":{"start":{"line":234,"column":58},"end":{"line":234,"column":97}},"101":{"start":{"line":236,"column":33},"end":{"line":236,"column":75}},"102":{"start":{"line":238,"column":4},"end":{"line":238,"column":19}},"103":{"start":{"line":240,"column":0},"end":{"line":240,"column":28}},"104":{"start":{"line":252,"column":15},"end":{"line":252,"column":58}},"105":{"start":{"line":253,"column":13},"end":{"line":253,"column":47}},"106":{"start":{"line":254,"column":4},"end":{"line":256,"column":5}},"107":{"start":{"line":255,"column":8},"end":{"line":255,"column":63}},"108":{"start":{"line":257,"column":4},"end":{"line":259,"column":5}},"109":{"start":{"line":258,"column":8},"end":{"line":258,"column":83}},"110":{"start":{"line":260,"column":4},"end":{"line":262,"column":5}},"111":{"start":{"line":260,"column":48},"end":{"line":260,"column":84}},"112":{"start":{"line":261,"column":8},"end":{"line":261,"column":82}},"113":{"start":{"line":263,"column":4},"end":{"line":266,"column":5}},"114":{"start":{"line":263,"column":18},"end":{"line":263,"column":19}},"115":{"start":{"line":263,"column":26},"end":{"line":263,"column":39}},"116":{"start":{"line":264,"column":21},"end":{"line":264,"column":27}},"117":{"start":{"line":265,"column":8},"end":{"line":265,"column":58}},"118":{"start":{"line":267,"column":15},"end":{"line":267,"column":41}},"119":{"start":{"line":268,"column":18},"end":{"line":268,"column":77}},"120":{"start":{"line":268,"column":51},"end":{"line":268,"column":74}},"121":{"start":{"line":269,"column":4},"end":{"line":269,"column":31}},"122":{"start":{"line":270,"column":4},"end":{"line":273,"column":7}},"123":{"start":{"line":274,"column":4},"end":{"line":274,"column":35}},"124":{"start":{"line":275,"column":4},"end":{"line":275,"column":14}},"125":{"start":{"line":277,"column":0},"end":{"line":277,"column":32}},"126":{"start":{"line":294,"column":15},"end":{"line":294,"column":41}},"127":{"start":{"line":295,"column":15},"end":{"line":295,"column":58}},"128":{"start":{"line":296,"column":4},"end":{"line":298,"column":5}},"129":{"start":{"line":297,"column":8},"end":{"line":297,"column":63}},"130":{"start":{"line":299,"column":4},"end":{"line":301,"column":5}},"131":{"start":{"line":300,"column":8},"end":{"line":300,"column":83}},"132":{"start":{"line":302,"column":4},"end":{"line":304,"column":5}},"133":{"start":{"line":303,"column":8},"end":{"line":303,"column":94}},"134":{"start":{"line":305,"column":18},"end":{"line":305,"column":83}},"135":{"start":{"line":305,"column":54},"end":{"line":305,"column":80}},"136":{"start":{"line":306,"column":25},"end":{"line":306,"column":122}},"137":{"start":{"line":306,"column":83},"end":{"line":306,"column":119}},"138":{"start":{"line":307,"column":26},"end":{"line":307,"column":121}},"139":{"start":{"line":307,"column":82},"end":{"line":307,"column":118}},"140":{"start":{"line":308,"column":4},"end":{"line":310,"column":5}},"141":{"start":{"line":309,"column":8},"end":{"line":309,"column":64}},"142":{"start":{"line":311,"column":4},"end":{"line":311,"column":59}},"143":{"start":{"line":312,"column":4},"end":{"line":312,"column":35}},"144":{"start":{"line":314,"column":4},"end":{"line":314,"column":59}},"145":{"start":{"line":315,"column":4},"end":{"line":315,"column":14}},"146":{"start":{"line":317,"column":0},"end":{"line":317,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"dmCreateV1","decl":{"start":{"line":18,"column":9},"end":{"line":18,"column":19}},"loc":{"start":{"line":18,"column":33},"end":{"line":106,"column":1}},"line":18},"2":{"name":"dmMessagesV1","decl":{"start":{"line":129,"column":9},"end":{"line":129,"column":21}},"loc":{"start":{"line":129,"column":42},"end":{"line":174,"column":1}},"line":129},"3":{"name":"(anonymous_3)","decl":{"start":{"line":141,"column":36},"end":{"line":141,"column":37}},"loc":{"start":{"line":141,"column":49},"end":{"line":141,"column":76}},"line":141},"4":{"name":"dmDetailsV1","decl":{"start":{"line":193,"column":9},"end":{"line":193,"column":20}},"loc":{"start":{"line":193,"column":34},"end":{"line":209,"column":1}},"line":193},"5":{"name":"dmListV1","decl":{"start":{"line":224,"column":9},"end":{"line":224,"column":17}},"loc":{"start":{"line":224,"column":25},"end":{"line":239,"column":1}},"line":224},"6":{"name":"(anonymous_6)","decl":{"start":{"line":233,"column":20},"end":{"line":233,"column":21}},"loc":{"start":{"line":233,"column":34},"end":{"line":235,"column":9}},"line":233},"7":{"name":"(anonymous_7)","decl":{"start":{"line":234,"column":38},"end":{"line":234,"column":39}},"loc":{"start":{"line":234,"column":56},"end":{"line":234,"column":99}},"line":234},"8":{"name":"(anonymous_8)","decl":{"start":{"line":236,"column":17},"end":{"line":236,"column":18}},"loc":{"start":{"line":236,"column":31},"end":{"line":236,"column":77}},"line":236},"9":{"name":"dmRemoveV1","decl":{"start":{"line":251,"column":9},"end":{"line":251,"column":19}},"loc":{"start":{"line":251,"column":33},"end":{"line":276,"column":1}},"line":251},"10":{"name":"(anonymous_10)","decl":{"start":{"line":260,"column":30},"end":{"line":260,"column":31}},"loc":{"start":{"line":260,"column":46},"end":{"line":260,"column":86}},"line":260},"11":{"name":"(anonymous_11)","decl":{"start":{"line":268,"column":36},"end":{"line":268,"column":37}},"loc":{"start":{"line":268,"column":49},"end":{"line":268,"column":76}},"line":268},"12":{"name":"dmLeaveV1","decl":{"start":{"line":293,"column":9},"end":{"line":293,"column":18}},"loc":{"start":{"line":293,"column":32},"end":{"line":316,"column":1}},"line":293},"13":{"name":"(anonymous_13)","decl":{"start":{"line":305,"column":36},"end":{"line":305,"column":37}},"loc":{"start":{"line":305,"column":52},"end":{"line":305,"column":82}},"line":305},"14":{"name":"(anonymous_14)","decl":{"start":{"line":306,"column":65},"end":{"line":306,"column":66}},"loc":{"start":{"line":306,"column":81},"end":{"line":306,"column":121}},"line":306},"15":{"name":"(anonymous_15)","decl":{"start":{"line":307,"column":64},"end":{"line":307,"column":65}},"loc":{"start":{"line":307,"column":80},"end":{"line":307,"column":120}},"line":307}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":21,"column":4},"end":{"line":23,"column":5}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":23,"column":5}},{"start":{"line":21,"column":4},"end":{"line":23,"column":5}}],"line":21},"4":{"loc":{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},"type":"if","locations":[{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},{"start":{"line":25,"column":4},"end":{"line":27,"column":5}}],"line":25},"5":{"loc":{"start":{"line":30,"column":4},"end":{"line":32,"column":5}},"type":"if","locations":[{"start":{"line":30,"column":4},"end":{"line":32,"column":5}},{"start":{"line":30,"column":4},"end":{"line":32,"column":5}}],"line":30},"6":{"loc":{"start":{"line":37,"column":8},"end":{"line":39,"column":9}},"type":"if","locations":[{"start":{"line":37,"column":8},"end":{"line":39,"column":9}},{"start":{"line":37,"column":8},"end":{"line":39,"column":9}}],"line":37},"7":{"loc":{"start":{"line":132,"column":4},"end":{"line":134,"column":5}},"type":"if","locations":[{"start":{"line":132,"column":4},"end":{"line":134,"column":5}},{"start":{"line":132,"column":4},"end":{"line":134,"column":5}}],"line":132},"8":{"loc":{"start":{"line":135,"column":4},"end":{"line":137,"column":5}},"type":"if","locations":[{"start":{"line":135,"column":4},"end":{"line":137,"column":5}},{"start":{"line":135,"column":4},"end":{"line":137,"column":5}}],"line":135},"9":{"loc":{"start":{"line":138,"column":4},"end":{"line":140,"column":5}},"type":"if","locations":[{"start":{"line":138,"column":4},"end":{"line":140,"column":5}},{"start":{"line":138,"column":4},"end":{"line":140,"column":5}}],"line":138},"10":{"loc":{"start":{"line":143,"column":4},"end":{"line":145,"column":5}},"type":"if","locations":[{"start":{"line":143,"column":4},"end":{"line":145,"column":5}},{"start":{"line":143,"column":4},"end":{"line":145,"column":5}}],"line":143},"11":{"loc":{"start":{"line":149,"column":8},"end":{"line":156,"column":9}},"type":"if","locations":[{"start":{"line":149,"column":8},"end":{"line":156,"column":9}},{"start":{"line":149,"column":8},"end":{"line":156,"column":9}}],"line":149},"12":{"loc":{"start":{"line":150,"column":12},"end":{"line":155,"column":13}},"type":"if","locations":[{"start":{"line":150,"column":12},"end":{"line":155,"column":13}},{"start":{"line":150,"column":12},"end":{"line":155,"column":13}}],"line":150},"13":{"loc":{"start":{"line":160,"column":4},"end":{"line":173,"column":5}},"type":"if","locations":[{"start":{"line":160,"column":4},"end":{"line":173,"column":5}},{"start":{"line":160,"column":4},"end":{"line":173,"column":5}}],"line":160},"14":{"loc":{"start":{"line":195,"column":4},"end":{"line":197,"column":5}},"type":"if","locations":[{"start":{"line":195,"column":4},"end":{"line":197,"column":5}},{"start":{"line":195,"column":4},"end":{"line":197,"column":5}}],"line":195},"15":{"loc":{"start":{"line":198,"column":4},"end":{"line":200,"column":5}},"type":"if","locations":[{"start":{"line":198,"column":4},"end":{"line":200,"column":5}},{"start":{"line":198,"column":4},"end":{"line":200,"column":5}}],"line":198},"16":{"loc":{"start":{"line":201,"column":4},"end":{"line":203,"column":5}},"type":"if","locations":[{"start":{"line":201,"column":4},"end":{"line":203,"column":5}},{"start":{"line":201,"column":4},"end":{"line":203,"column":5}}],"line":201},"17":{"loc":{"start":{"line":227,"column":4},"end":{"line":229,"column":5}},"type":"if","locations":[{"start":{"line":227,"column":4},"end":{"line":229,"column":5}},{"start":{"line":227,"column":4},"end":{"line":229,"column":5}}],"line":227},"18":{"loc":{"start":{"line":254,"column":4},"end":{"line":256,"column":5}},"type":"if","locations":[{"start":{"line":254,"column":4},"end":{"line":256,"column":5}},{"start":{"line":254,"column":4},"end":{"line":256,"column":5}}],"line":254},"19":{"loc":{"start":{"line":257,"column":4},"end":{"line":259,"column":5}},"type":"if","locations":[{"start":{"line":257,"column":4},"end":{"line":259,"column":5}},{"start":{"line":257,"column":4},"end":{"line":259,"column":5}}],"line":257},"20":{"loc":{"start":{"line":260,"column":4},"end":{"line":262,"column":5}},"type":"if","locations":[{"start":{"line":260,"column":4},"end":{"line":262,"column":5}},{"start":{"line":260,"column":4},"end":{"line":262,"column":5}}],"line":260},"21":{"loc":{"start":{"line":296,"column":4},"end":{"line":298,"column":5}},"type":"if","locations":[{"start":{"line":296,"column":4},"end":{"line":298,"column":5}},{"start":{"line":296,"column":4},"end":{"line":298,"column":5}}],"line":296},"22":{"loc":{"start":{"line":299,"column":4},"end":{"line":301,"column":5}},"type":"if","locations":[{"start":{"line":299,"column":4},"end":{"line":301,"column":5}},{"start":{"line":299,"column":4},"end":{"line":301,"column":5}}],"line":299},"23":{"loc":{"start":{"line":302,"column":4},"end":{"line":304,"column":5}},"type":"if","locations":[{"start":{"line":302,"column":4},"end":{"line":304,"column":5}},{"start":{"line":302,"column":4},"end":{"line":304,"column":5}}],"line":302},"24":{"loc":{"start":{"line":308,"column":4},"end":{"line":310,"column":5}},"type":"if","locations":[{"start":{"line":308,"column":4},"end":{"line":310,"column":5}},{"start":{"line":308,"column":4},"end":{"line":310,"column":5}}],"line":308}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":193,"8":193,"9":193,"10":1,"11":192,"12":1,"13":191,"14":191,"15":2,"16":189,"17":189,"18":189,"19":189,"20":208,"21":208,"22":208,"23":2,"24":206,"25":187,"26":187,"27":187,"28":187,"29":393,"30":393,"31":187,"32":187,"33":187,"34":187,"35":187,"36":187,"37":393,"38":393,"39":187,"40":187,"41":187,"42":187,"43":187,"44":206,"45":206,"46":206,"47":187,"48":187,"49":187,"50":187,"51":187,"52":393,"53":393,"54":187,"55":1,"56":29,"57":29,"58":29,"59":1,"60":28,"61":1,"62":27,"63":1,"64":26,"65":28,"66":26,"67":26,"68":1,"69":25,"70":25,"71":25,"72":25,"73":315,"74":315,"75":3,"76":2,"77":1,"78":25,"79":25,"80":23,"81":2,"82":1,"83":8,"84":8,"85":1,"86":7,"87":1,"88":6,"89":1,"90":5,"91":5,"92":1,"93":6,"94":6,"95":6,"96":1,"97":5,"98":5,"99":4,"100":7,"101":4,"102":5,"103":1,"104":6,"105":6,"106":6,"107":1,"108":5,"109":1,"110":4,"111":4,"112":1,"113":3,"114":3,"115":3,"116":7,"117":7,"118":3,"119":3,"120":3,"121":3,"122":3,"123":3,"124":3,"125":1,"126":7,"127":7,"128":7,"129":1,"130":6,"131":1,"132":5,"133":1,"134":4,"135":8,"136":4,"137":4,"138":4,"139":5,"140":4,"141":3,"142":4,"143":4,"144":4,"145":4,"146":1},"f":{"0":1,"1":193,"2":29,"3":28,"4":8,"5":6,"6":4,"7":7,"8":4,"9":6,"10":4,"11":3,"12":7,"13":8,"14":4,"15":5},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[1,192],"4":[1,191],"5":[2,189],"6":[2,206],"7":[1,28],"8":[1,27],"9":[1,26],"10":[1,25],"11":[3,312],"12":[2,1],"13":[23,2],"14":[1,7],"15":[1,6],"16":[1,5],"17":[1,5],"18":[1,5],"19":[1,4],"20":[1,3],"21":[1,6],"22":[1,5],"23":[1,4],"24":[3,1]},"inputSourceMap":{"version":3,"file":"/Users/binvog/Documents/UNSW 2023T1/COMP1531/Indiv_projectbackend/iter4-project-backend/src/dm.ts","sources":["/Users/binvog/Documents/UNSW 2023T1/COMP1531/Indiv_projectbackend/iter4-project-backend/src/dm.ts"],"names":[],"mappings":"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","sourcesContent":["import { getData, setData } from './dataStore';\nimport {\n  findDm,\n  findUser,\n  findUserIndex,\n  getCurrentTime,\n  getUserByToken,\n  isDm,\n  isDmMember,\n  updateDmInfo,\n} from './functionHelper';\nimport {\n  errorMessage,\n  dmCreateReturn,\n  userData,\n  dmListReturn,\n  userObject,\n} from './interfaces';\nimport HTTPError from 'http-errors';\n\n/**\n *\n * @param {string} token - The user's token making the request\n * @param {Array<number>} uIds - Array of user IDs to add to the DM channel.\n * @returns {dmCreateReturn | errorMessage} - Object containing the newly\n *                                            created DM channel ID and name if successful,\n *                                            or an error message if unsuccessful.\n */\nexport function dmCreateV1(\n  token: string,\n  uIds: Array<number>\n): dmCreateReturn | errorMessage {\n  const data = getData();\n  const user = getUserByToken(token);\n\n  if (user === undefined) {\n    throw HTTPError(403, 'Invalid token');\n  }\n\n  // Make sure that owner does not invite owner\n  if (uIds.includes(user.authUserId)) {\n    throw HTTPError(400, 'Duplicate uId');\n  }\n\n  // Use a Set to check for duplicate user IDs\n  const userSet = new Set(uIds);\n  if (userSet.size !== uIds.length) {\n    throw HTTPError(400, 'Duplicate uId');\n  }\n\n  const userArray: Array<userData> = [user];\n  for (const uId of uIds) {\n    const userUId = findUser(uId);\n    if (userUId === undefined) {\n      throw HTTPError(400, 'Invalid uId');\n    }\n    userArray.push(userUId);\n  }\n\n  // make name with all the user's handleStr that is inside the set\n  // and sort it alphabetically\n  let dmName = '';\n  for (const uId of userArray) {\n    dmName += uId.handleStr + ', ';\n  }\n  dmName = dmName.slice(0, -2);\n  dmName = dmName.split(', ').sort().join(', ');\n\n  // create Array for allMembers that is in array\n  const allMembers: Array<userObject> = [];\n  for (const uId of userArray) {\n    allMembers.push({\n      uId: uId.authUserId,\n      email: uId.email,\n      handleStr: uId.handleStr,\n      nameFirst: uId.nameFirst,\n      nameLast: uId.nameLast,\n      profileImgUrl: uId.profileImgUrl,\n    });\n  }\n\n  // Create new dm\n  const dmId = Math.floor(Math.random() * 1000000000);\n  data.dm.push({\n    dmId: dmId,\n    name: dmName,\n    ownerMembers: [\n      {\n        uId: user.authUserId,\n        email: user.email,\n        handleStr: user.handleStr,\n        nameFirst: user.nameFirst,\n        nameLast: user.nameLast,\n        profileImgUrl: user.profileImgUrl,\n      },\n    ],\n    allMembers: allMembers,\n    messages: [],\n    start: 0,\n    end: -1,\n  });\n\n  // send notification to all the users invited to the dm\n  // and add the stats\n  for (const uId of uIds) {\n    const uIdIndex = findUserIndex(uId);\n    data.users[uIdIndex].notifications.push({\n      channelId: -1,\n      dmId: dmId,\n      notificationMessage: `${user.handleStr} added you to ${dmName}`,\n    });\n  }\n\n  // update the dm info\n  data.stats.dmsExist.push({\n    numDmsExist: data.dm.length,\n    timeStamp: getCurrentTime(),\n  });\n  setData(data);\n\n  for (const uId of userArray) {\n    updateDmInfo(uId.authUserId, 0);\n  }\n\n  return { dmId: dmId };\n}\n\n/**\n *\n * Given a DM with a valid dmId, authorised members are able\n * to send messages to other group members. This function\n * returns the most recent messages up to the 50th message.\n *\n * @param {number} token - The authenticated user token\n * @param {number} dmId - The dmId to join\n * @param {number} start - The amount of messages in the dm\n * ...\n *\n * @returns {\n * messages: string,\n * start: number,\n * end: number} - returns dm chat information\n * @returns {error : 'error message'} - returns an error when\n *                                    | dmId does not refer to a valid DM\n *                                    | start is greater than the total number of messages in the channel\n *                                    | dmId is valid and the authorised user is not a member of the DM\n *                                    | token is invalid\n */\nexport function dmMessagesV1(token: string, dmId: number, start: number) {\n  const data = getData();\n  const user = getUserByToken(token);\n\n  if (user === undefined) {\n    throw HTTPError(403, 'Invalid token');\n  }\n  if (!isDm(dmId)) {\n    throw HTTPError(400, 'dmId does not refer to a valid DM');\n  }\n  if (!isDmMember(dmId, user.authUserId)) {\n    throw HTTPError(403, 'User is not a member of the DM');\n  }\n  const dmIndex = data.dm.findIndex((a) => a.dmId === dmId);\n  const dmMessages = data.dm[dmIndex].messages.length;\n  if (start > data.dm[dmIndex].messages.length) {\n    throw HTTPError(\n      400,\n      'start is greater than the total number of messages in the channel'\n    );\n  }\n\n  const dm = findDm(dmId);\n\n  for (const message of dm.messages) {\n    if (message.reacts.length !== 0) {\n      if (message.reacts[0].uIds.includes(user.authUserId)) {\n        message.reacts[0].isThisUserReacted = true;\n      } else {\n        message.reacts[0].isThisUserReacted = false;\n      }\n    }\n  }\n  // reverse message\n  dm.messages.reverse();\n\n  if (start + 50 > dmMessages) {\n    return {\n      messages: dm.messages.slice(start),\n      start: start,\n      end: -1,\n    };\n  } else {\n    return {\n      messages: dm.messages.slice(start, start + 50),\n      start: start,\n      end: start + 50,\n    };\n  }\n}\n/**\n * Given a DM with a valid dmId that an authorised user is a member\n * of, it provides basic information about the DM.\n *\n * @param {string} token - The authenticated token\n * @param {number} dmId - The DM Id to join\n * ...\n *\n * @returns {\n *  name: string,\n *  ownerMembers: string\n *  allMembers: string} - returns details of the DM when successful\n * @returns {error : 'error message'} - returns an error when\n *                                    | dmId does not refer to a valid DM\n *                                    | the authUser is not a part of the DM\n *                                    | user token is invalid\n */\nexport function dmDetailsV1(token: string, dmId: number) {\n  const user = getUserByToken(token);\n\n  if (user === undefined) {\n    throw HTTPError(403, 'Invalid token');\n  }\n  if (!isDm(dmId)) {\n    throw HTTPError(400, 'dmId does not refer to a valid DM');\n  }\n  if (!isDmMember(dmId, user.authUserId)) {\n    throw HTTPError(403, user.authUserId + ' is not a member of the DM');\n  }\n\n  const dmObject = findDm(dmId);\n  return {\n    name: dmObject.name,\n    members: dmObject.allMembers,\n  };\n}\n/**\n * Provides an array of all dms that an authorised\n * user is a member of by accessing the dm information\n * from data.channels. Then it returns information about\n * the dms.\n *\n * @param {number} token - the authenticated user token\n *\n * @returns {error: 'error message'} - if the given token is invalid\n * @returns {{channelId: number, name: string}} - returns the details of the dms\n * when successful\n *\n */\nexport function dmListV1(token: string): dmListReturn | errorMessage {\n  const data = getData();\n  const user = getUserByToken(token);\n\n  if (user === undefined) {\n    throw HTTPError(403, 'Invalid token');\n  }\n\n  const authUserIdToFind = user.authUserId;\n  const userDms: dmListReturn = {\n    dms: data.dm\n      .filter((dm) =>\n        dm.allMembers.some((member) => member.uId === authUserIdToFind)\n      )\n      .map((dm) => ({ dmId: dm.dmId, name: dm.name })),\n  };\n  return userDms;\n}\n\n/**\n  Removes a direct message (DM) with the specified DM ID if the user making the request is the original creator.\n  @function\n  @name dmRemoveV1\n  @param {string} token - The token of the authenticated user.\n  @param {number} dmId - The ID of the DM to remove.\n  @throws {HTTPError} Throws an error if the token is invalid or if the DM ID does not refer to a valid DM.\n  @throws {HTTPError} Throws an error if the user making the request is not the original creator of the DM.\n  @returns {Object} An empty object to indicate successful removal of the DM.\n*/\nexport function dmRemoveV1(token: string, dmId: number) {\n  const user = getUserByToken(token);\n  const dm = findDm(dmId);\n\n  if (user === undefined) {\n    throw HTTPError(403, 'Invalid token');\n  }\n  if (dm === undefined) {\n    throw HTTPError(400, 'dmId does not refer to a valid DM');\n  }\n  if (!dm.ownerMembers.some((item) => item.uId === user.authUserId)) {\n    throw HTTPError(403, 'User is not the original creator');\n  }\n\n  for (const member of dm.allMembers) {\n    updateDmInfo(member.uId, 1);\n  }\n\n  const data = getData();\n  const dmIndex = data.dm.findIndex((a) => a.dmId === dmId);\n  data.dm.splice(dmIndex, 1);\n  data.stats.dmsExist.push({\n    timeStamp: getCurrentTime(),\n    numDmsExist: data.dm.length,\n  });\n\n  setData(data);\n\n  return {};\n}\n\n/**\n * Given a dmId of a dm and token, it will remove that member from the dm.\n * If the user is the owner, the chat will still exist if this happens.\n * A user leaving does not update the name of the DM.\n *\n * @param {string} token - The authenticated token\n * @param {number} dmId - The dmId to join\n * ...\n *\n * @returns {} - returns {} when successful\n * @returns {error : 'error message'} - returns an error when\n *                                    | dmId does not refer to a valid DM\n *                                    | dmId is valid and the authorised user is not a member of the DM\n *                                    | user token is invalid\n */\nexport function dmLeaveV1(token: string, dmId: number) {\n  const data = getData();\n  const user = getUserByToken(token);\n\n  if (user === undefined) {\n    throw HTTPError(403, 'Invalid token');\n  }\n  if (!isDm(dmId)) {\n    throw HTTPError(400, 'dmId does not refer to a valid DM');\n  }\n  if (!isDmMember(dmId, user.authUserId)) {\n    throw HTTPError(403, user.authUserId + ' is not a member of the DM');\n  }\n\n  const dmIndex = data.dm.findIndex((item) => item.dmId === dmId);\n\n  const userOwnerIndex = data.dm[dmIndex].ownerMembers.findIndex(\n    (item) => item.uId === user.authUserId\n  );\n\n  const userMemberIndex = data.dm[dmIndex].allMembers.findIndex(\n    (item) => item.uId === user.authUserId\n  );\n\n  if (userOwnerIndex !== -1) {\n    data.dm[dmIndex].ownerMembers.splice(userOwnerIndex, 1);\n  }\n\n  data.dm[dmIndex].allMembers.splice(userMemberIndex, 1);\n  setData(data);\n\n  // update stats to remove the dm\n  updateDmInfo(user.authUserId, 1);\n  return {};\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9a7fec844dccaf4ba44bb6d1eb7ac5f3cd1f77f8","contentHash":"a18da5fd4e850e35e2f25b71dd5d207b1043b4e050b2d1bc2f133ff4adad9273"},"/Users/binvog/Documents/UNSW 2023T1/COMP1531/Indiv_projectbackend/iter4-project-backend/src/other.ts":{"path":"/Users/binvog/Documents/UNSW 2023T1/COMP1531/Indiv_projectbackend/iter4-project-backend/src/other.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":4,"column":18},"end":{"line":4,"column":40}},"3":{"start":{"line":6,"column":15},"end":{"line":6,"column":41}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":20}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":23}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":17}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":25}},"8":{"start":{"line":11,"column":4},"end":{"line":16,"column":6}},"9":{"start":{"line":17,"column":4},"end":{"line":17,"column":19}},"10":{"start":{"line":18,"column":4},"end":{"line":18,"column":35}},"11":{"start":{"line":19,"column":4},"end":{"line":19,"column":14}},"12":{"start":{"line":21,"column":0},"end":{"line":21,"column":26}},"13":{"start":{"line":23,"column":15},"end":{"line":23,"column":22}},"14":{"start":{"line":24,"column":13},"end":{"line":24,"column":26}},"15":{"start":{"line":25,"column":4},"end":{"line":38,"column":7}},"16":{"start":{"line":27,"column":8},"end":{"line":37,"column":9}},"17":{"start":{"line":28,"column":27},"end":{"line":28,"column":60}},"18":{"start":{"line":30,"column":12},"end":{"line":36,"column":13}},"19":{"start":{"line":31,"column":16},"end":{"line":31,"column":40}},"20":{"start":{"line":32,"column":16},"end":{"line":32,"column":63}}},"fnMap":{"0":{"name":"clearV1","decl":{"start":{"line":5,"column":9},"end":{"line":5,"column":16}},"loc":{"start":{"line":5,"column":19},"end":{"line":20,"column":1}},"line":5},"1":{"name":"removeImages","decl":{"start":{"line":22,"column":9},"end":{"line":22,"column":21}},"loc":{"start":{"line":22,"column":24},"end":{"line":39,"column":1}},"line":22},"2":{"name":"(anonymous_2)","decl":{"start":{"line":25,"column":33},"end":{"line":25,"column":34}},"loc":{"start":{"line":25,"column":49},"end":{"line":38,"column":5}},"line":25}},"branchMap":{"0":{"loc":{"start":{"line":27,"column":8},"end":{"line":37,"column":9}},"type":"if","locations":[{"start":{"line":27,"column":8},"end":{"line":37,"column":9}},{"start":{"line":27,"column":8},"end":{"line":37,"column":9}}],"line":27},"1":{"loc":{"start":{"line":27,"column":12},"end":{"line":27,"column":59}},"type":"binary-expr","locations":[{"start":{"line":27,"column":12},"end":{"line":27,"column":33}},{"start":{"line":27,"column":37},"end":{"line":27,"column":59}}],"line":27},"2":{"loc":{"start":{"line":30,"column":12},"end":{"line":36,"column":13}},"type":"if","locations":[{"start":{"line":30,"column":12},"end":{"line":36,"column":13}}],"line":30}},"s":{"0":1,"1":1,"2":1,"3":663,"4":663,"5":663,"6":663,"7":663,"8":663,"9":663,"10":663,"11":663,"12":1,"13":663,"14":663,"15":663,"16":668,"17":5,"18":5,"19":5,"20":5},"f":{"0":663,"1":663,"2":668},"b":{"0":[5,663],"1":[668,668],"2":[5]},"inputSourceMap":{"version":3,"file":"/Users/binvog/Documents/UNSW 2023T1/COMP1531/Indiv_projectbackend/iter4-project-backend/src/other.ts","sources":["/Users/binvog/Documents/UNSW 2023T1/COMP1531/Indiv_projectbackend/iter4-project-backend/src/other.ts"],"names":[],"mappings":";;;AAAA,yCAA+C;AAE/C,SAAgB,OAAO;IACrB,IAAM,IAAI,GAAG,IAAA,mBAAO,GAAE,CAAC;IACvB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IAChB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACnB,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;IACb,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;IACrB,IAAI,CAAC,KAAK,GAAG;QACX,aAAa,EAAE,EAAE;QACjB,QAAQ,EAAE,EAAE;QACZ,aAAa,EAAE,EAAE;QACjB,eAAe,EAAE,CAAC;KACnB,CAAC;IACF,YAAY,EAAE,CAAC;IACf,IAAA,mBAAO,EAAC,IAAI,CAAC,CAAC;IAEd,OAAO,EAAE,CAAC;AACZ,CAAC;AAhBD,0BAgBC;AAED,SAAS,YAAY;IACnB,IAAM,IAAI,GAAG,OAAO,CAAC;IACrB,IAAM,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;IACzB,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,UAAC,IAAS;QACrC,+CAA+C;QAC/C,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,KAAK,aAAa,EAAE;YACnD,IAAM,QAAQ,GAAG,UAAG,IAAI,cAAI,IAAI,CAAE,CAAC;YACnC,0BAA0B;YAC1B,IAAI,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;gBAC3B,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;gBACxB,OAAO,CAAC,GAAG,CAAC,wBAAiB,QAAQ,CAAE,CAAC,CAAC;aAC1C;iBAAM;gBACL,OAAO,CAAC,KAAK,CAAC,iBAAU,QAAQ,eAAY,CAAC,CAAC;aAC/C;SACF;IACH,CAAC,CAAC,CAAC;AACL,CAAC","sourcesContent":["import { getData, setData } from './dataStore';\n\nexport function clearV1(): Record<string, never> {\n  const data = getData();\n  data.users = [];\n  data.channels = [];\n  data.dm = [];\n  data.resetCodes = [];\n  data.stats = {\n    channelsExist: [],\n    dmsExist: [],\n    messagesExist: [],\n    utilizationRate: 0,\n  };\n  removeImages();\n  setData(data);\n\n  return {};\n}\n\nfunction removeImages() {\n  const path = './img';\n  const fs = require('fs');\n  fs.readdirSync(path).forEach((file: any) => {\n    // remove any file with .jpg except for default\n    if (file.endsWith('.jpg') && file !== 'default.jpg') {\n      const filePath = `${path}/${file}`;\n      /* istanbul ignore else */\n      if (fs.existsSync(filePath)) {\n        fs.unlinkSync(filePath);\n        console.log(`Deleted file: ${filePath}`);\n      } else {\n        console.error(`Error: ${filePath} not found`);\n      }\n    }\n  });\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"855985c66384f14ae989753e1b0bf93fb14e7e55","contentHash":"22a1c4fe02cd050b7909adcfcf6aa38ec008ceffe05c12f97ba52aca99968322"},"/Users/binvog/Documents/UNSW 2023T1/COMP1531/Indiv_projectbackend/iter4-project-backend/src/admin.ts":{"path":"/Users/binvog/Documents/UNSW 2023T1/COMP1531/Indiv_projectbackend/iter4-project-backend/src/admin.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":73}},"4":{"start":{"line":7,"column":20},"end":{"line":7,"column":59}},"5":{"start":{"line":8,"column":18},"end":{"line":8,"column":40}},"6":{"start":{"line":9,"column":23},"end":{"line":9,"column":50}},"7":{"start":{"line":20,"column":15},"end":{"line":20,"column":41}},"8":{"start":{"line":21,"column":21},"end":{"line":21,"column":64}},"9":{"start":{"line":22,"column":19},"end":{"line":22,"column":87}},"10":{"start":{"line":22,"column":53},"end":{"line":22,"column":84}},"11":{"start":{"line":23,"column":4},"end":{"line":25,"column":5}},"12":{"start":{"line":24,"column":8},"end":{"line":24,"column":68}},"13":{"start":{"line":26,"column":4},"end":{"line":28,"column":5}},"14":{"start":{"line":27,"column":8},"end":{"line":27,"column":61}},"15":{"start":{"line":30,"column":4},"end":{"line":32,"column":5}},"16":{"start":{"line":31,"column":8},"end":{"line":31,"column":92}},"17":{"start":{"line":34,"column":25},"end":{"line":41,"column":9}},"18":{"start":{"line":35,"column":8},"end":{"line":40,"column":9}},"19":{"start":{"line":36,"column":12},"end":{"line":36,"column":43}},"20":{"start":{"line":39,"column":12},"end":{"line":39,"column":23}},"21":{"start":{"line":42,"column":4},"end":{"line":46,"column":5}},"22":{"start":{"line":45,"column":8},"end":{"line":45,"column":80}},"23":{"start":{"line":47,"column":4},"end":{"line":49,"column":5}},"24":{"start":{"line":48,"column":8},"end":{"line":48,"column":70}},"25":{"start":{"line":50,"column":4},"end":{"line":52,"column":5}},"26":{"start":{"line":51,"column":8},"end":{"line":51,"column":82}},"27":{"start":{"line":57,"column":4},"end":{"line":57,"column":42}},"28":{"start":{"line":58,"column":4},"end":{"line":58,"column":35}},"29":{"start":{"line":59,"column":4},"end":{"line":59,"column":14}},"30":{"start":{"line":61,"column":0},"end":{"line":61,"column":66}},"31":{"start":{"line":71,"column":15},"end":{"line":71,"column":41}},"32":{"start":{"line":72,"column":21},"end":{"line":72,"column":64}},"33":{"start":{"line":73,"column":19},"end":{"line":73,"column":87}},"34":{"start":{"line":73,"column":53},"end":{"line":73,"column":84}},"35":{"start":{"line":74,"column":4},"end":{"line":76,"column":5}},"36":{"start":{"line":75,"column":8},"end":{"line":75,"column":68}},"37":{"start":{"line":77,"column":4},"end":{"line":79,"column":5}},"38":{"start":{"line":78,"column":8},"end":{"line":78,"column":61}},"39":{"start":{"line":81,"column":4},"end":{"line":83,"column":5}},"40":{"start":{"line":82,"column":8},"end":{"line":82,"column":91}},"41":{"start":{"line":85,"column":25},"end":{"line":92,"column":9}},"42":{"start":{"line":86,"column":8},"end":{"line":91,"column":9}},"43":{"start":{"line":87,"column":12},"end":{"line":87,"column":43}},"44":{"start":{"line":90,"column":12},"end":{"line":90,"column":23}},"45":{"start":{"line":93,"column":4},"end":{"line":95,"column":5}},"46":{"start":{"line":94,"column":8},"end":{"line":94,"column":111}},"47":{"start":{"line":96,"column":4},"end":{"line":96,"column":34}},"48":{"start":{"line":97,"column":4},"end":{"line":97,"column":37}},"49":{"start":{"line":98,"column":4},"end":{"line":98,"column":36}},"50":{"start":{"line":99,"column":4},"end":{"line":99,"column":35}},"51":{"start":{"line":100,"column":4},"end":{"line":100,"column":14}},"52":{"start":{"line":102,"column":0},"end":{"line":102,"column":46}},"53":{"start":{"line":104,"column":24},"end":{"line":104,"column":38}},"54":{"start":{"line":105,"column":4},"end":{"line":111,"column":7}},"55":{"start":{"line":106,"column":8},"end":{"line":110,"column":11}},"56":{"start":{"line":107,"column":12},"end":{"line":109,"column":13}},"57":{"start":{"line":108,"column":16},"end":{"line":108,"column":48}},"58":{"start":{"line":112,"column":4},"end":{"line":118,"column":7}},"59":{"start":{"line":113,"column":8},"end":{"line":117,"column":11}},"60":{"start":{"line":114,"column":12},"end":{"line":116,"column":13}},"61":{"start":{"line":115,"column":16},"end":{"line":115,"column":48}},"62":{"start":{"line":119,"column":4},"end":{"line":119,"column":16}},"63":{"start":{"line":122,"column":21},"end":{"line":122,"column":89}},"64":{"start":{"line":122,"column":55},"end":{"line":122,"column":86}},"65":{"start":{"line":123,"column":4},"end":{"line":123,"column":37}},"66":{"start":{"line":124,"column":4},"end":{"line":124,"column":33}},"67":{"start":{"line":125,"column":4},"end":{"line":125,"column":26}},"68":{"start":{"line":126,"column":4},"end":{"line":126,"column":30}},"69":{"start":{"line":127,"column":4},"end":{"line":127,"column":33}},"70":{"start":{"line":129,"column":4},"end":{"line":129,"column":39}},"71":{"start":{"line":130,"column":4},"end":{"line":130,"column":16}},"72":{"start":{"line":137,"column":4},"end":{"line":140,"column":7}},"73":{"start":{"line":138,"column":8},"end":{"line":138,"column":105}},"74":{"start":{"line":138,"column":75},"end":{"line":138,"column":101}},"75":{"start":{"line":139,"column":8},"end":{"line":139,"column":109}},"76":{"start":{"line":139,"column":79},"end":{"line":139,"column":105}},"77":{"start":{"line":141,"column":4},"end":{"line":144,"column":7}},"78":{"start":{"line":142,"column":8},"end":{"line":142,"column":95}},"79":{"start":{"line":142,"column":65},"end":{"line":142,"column":91}},"80":{"start":{"line":143,"column":8},"end":{"line":143,"column":99}},"81":{"start":{"line":143,"column":69},"end":{"line":143,"column":95}},"82":{"start":{"line":145,"column":4},"end":{"line":145,"column":16}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"adminuserPermissionChangeV1","decl":{"start":{"line":19,"column":9},"end":{"line":19,"column":36}},"loc":{"start":{"line":19,"column":63},"end":{"line":60,"column":1}},"line":19},"2":{"name":"(anonymous_2)","decl":{"start":{"line":22,"column":35},"end":{"line":22,"column":36}},"loc":{"start":{"line":22,"column":51},"end":{"line":22,"column":86}},"line":22},"3":{"name":"(anonymous_3)","decl":{"start":{"line":34,"column":43},"end":{"line":34,"column":44}},"loc":{"start":{"line":34,"column":63},"end":{"line":41,"column":5}},"line":34},"4":{"name":"adminuserRemoveV1","decl":{"start":{"line":69,"column":9},"end":{"line":69,"column":26}},"loc":{"start":{"line":69,"column":39},"end":{"line":101,"column":1}},"line":69},"5":{"name":"(anonymous_5)","decl":{"start":{"line":73,"column":35},"end":{"line":73,"column":36}},"loc":{"start":{"line":73,"column":51},"end":{"line":73,"column":86}},"line":73},"6":{"name":"(anonymous_6)","decl":{"start":{"line":85,"column":43},"end":{"line":85,"column":44}},"loc":{"start":{"line":85,"column":63},"end":{"line":92,"column":5}},"line":85},"7":{"name":"replaceMessage","decl":{"start":{"line":103,"column":9},"end":{"line":103,"column":23}},"loc":{"start":{"line":103,"column":35},"end":{"line":120,"column":1}},"line":103},"8":{"name":"(anonymous_8)","decl":{"start":{"line":105,"column":26},"end":{"line":105,"column":27}},"loc":{"start":{"line":105,"column":45},"end":{"line":111,"column":5}},"line":105},"9":{"name":"(anonymous_9)","decl":{"start":{"line":106,"column":33},"end":{"line":106,"column":34}},"loc":{"start":{"line":106,"column":52},"end":{"line":110,"column":9}},"line":106},"10":{"name":"(anonymous_10)","decl":{"start":{"line":112,"column":20},"end":{"line":112,"column":21}},"loc":{"start":{"line":112,"column":34},"end":{"line":118,"column":5}},"line":112},"11":{"name":"(anonymous_11)","decl":{"start":{"line":113,"column":28},"end":{"line":113,"column":29}},"loc":{"start":{"line":113,"column":47},"end":{"line":117,"column":9}},"line":113},"12":{"name":"editProfile","decl":{"start":{"line":121,"column":9},"end":{"line":121,"column":20}},"loc":{"start":{"line":121,"column":32},"end":{"line":131,"column":1}},"line":121},"13":{"name":"(anonymous_13)","decl":{"start":{"line":122,"column":37},"end":{"line":122,"column":38}},"loc":{"start":{"line":122,"column":53},"end":{"line":122,"column":88}},"line":122},"14":{"name":"hideChannelDm","decl":{"start":{"line":132,"column":9},"end":{"line":132,"column":22}},"loc":{"start":{"line":132,"column":34},"end":{"line":146,"column":1}},"line":132},"15":{"name":"(anonymous_15)","decl":{"start":{"line":137,"column":26},"end":{"line":137,"column":27}},"loc":{"start":{"line":137,"column":45},"end":{"line":140,"column":5}},"line":137},"16":{"name":"(anonymous_16)","decl":{"start":{"line":138,"column":55},"end":{"line":138,"column":56}},"loc":{"start":{"line":138,"column":73},"end":{"line":138,"column":103}},"line":138},"17":{"name":"(anonymous_17)","decl":{"start":{"line":139,"column":59},"end":{"line":139,"column":60}},"loc":{"start":{"line":139,"column":77},"end":{"line":139,"column":107}},"line":139},"18":{"name":"(anonymous_18)","decl":{"start":{"line":141,"column":20},"end":{"line":141,"column":21}},"loc":{"start":{"line":141,"column":34},"end":{"line":144,"column":5}},"line":141},"19":{"name":"(anonymous_19)","decl":{"start":{"line":142,"column":45},"end":{"line":142,"column":46}},"loc":{"start":{"line":142,"column":63},"end":{"line":142,"column":93}},"line":142},"20":{"name":"(anonymous_20)","decl":{"start":{"line":143,"column":49},"end":{"line":143,"column":50}},"loc":{"start":{"line":143,"column":67},"end":{"line":143,"column":97}},"line":143}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":23,"column":4},"end":{"line":25,"column":5}},"type":"if","locations":[{"start":{"line":23,"column":4},"end":{"line":25,"column":5}},{"start":{"line":23,"column":4},"end":{"line":25,"column":5}}],"line":23},"4":{"loc":{"start":{"line":26,"column":4},"end":{"line":28,"column":5}},"type":"if","locations":[{"start":{"line":26,"column":4},"end":{"line":28,"column":5}},{"start":{"line":26,"column":4},"end":{"line":28,"column":5}}],"line":26},"5":{"loc":{"start":{"line":30,"column":4},"end":{"line":32,"column":5}},"type":"if","locations":[{"start":{"line":30,"column":4},"end":{"line":32,"column":5}},{"start":{"line":30,"column":4},"end":{"line":32,"column":5}}],"line":30},"6":{"loc":{"start":{"line":35,"column":8},"end":{"line":40,"column":9}},"type":"if","locations":[{"start":{"line":35,"column":8},"end":{"line":40,"column":9}},{"start":{"line":35,"column":8},"end":{"line":40,"column":9}}],"line":35},"7":{"loc":{"start":{"line":42,"column":4},"end":{"line":46,"column":5}},"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":46,"column":5}},{"start":{"line":42,"column":4},"end":{"line":46,"column":5}}],"line":42},"8":{"loc":{"start":{"line":42,"column":8},"end":{"line":44,"column":36}},"type":"binary-expr","locations":[{"start":{"line":42,"column":8},"end":{"line":42,"column":28}},{"start":{"line":43,"column":8},"end":{"line":43,"column":26}},{"start":{"line":44,"column":8},"end":{"line":44,"column":36}}],"line":42},"9":{"loc":{"start":{"line":47,"column":4},"end":{"line":49,"column":5}},"type":"if","locations":[{"start":{"line":47,"column":4},"end":{"line":49,"column":5}},{"start":{"line":47,"column":4},"end":{"line":49,"column":5}}],"line":47},"10":{"loc":{"start":{"line":47,"column":8},"end":{"line":47,"column":48}},"type":"binary-expr","locations":[{"start":{"line":47,"column":8},"end":{"line":47,"column":26}},{"start":{"line":47,"column":30},"end":{"line":47,"column":48}}],"line":47},"11":{"loc":{"start":{"line":50,"column":4},"end":{"line":52,"column":5}},"type":"if","locations":[{"start":{"line":50,"column":4},"end":{"line":52,"column":5}},{"start":{"line":50,"column":4},"end":{"line":52,"column":5}}],"line":50},"12":{"loc":{"start":{"line":74,"column":4},"end":{"line":76,"column":5}},"type":"if","locations":[{"start":{"line":74,"column":4},"end":{"line":76,"column":5}},{"start":{"line":74,"column":4},"end":{"line":76,"column":5}}],"line":74},"13":{"loc":{"start":{"line":77,"column":4},"end":{"line":79,"column":5}},"type":"if","locations":[{"start":{"line":77,"column":4},"end":{"line":79,"column":5}},{"start":{"line":77,"column":4},"end":{"line":79,"column":5}}],"line":77},"14":{"loc":{"start":{"line":81,"column":4},"end":{"line":83,"column":5}},"type":"if","locations":[{"start":{"line":81,"column":4},"end":{"line":83,"column":5}},{"start":{"line":81,"column":4},"end":{"line":83,"column":5}}],"line":81},"15":{"loc":{"start":{"line":86,"column":8},"end":{"line":91,"column":9}},"type":"if","locations":[{"start":{"line":86,"column":8},"end":{"line":91,"column":9}},{"start":{"line":86,"column":8},"end":{"line":91,"column":9}}],"line":86},"16":{"loc":{"start":{"line":93,"column":4},"end":{"line":95,"column":5}},"type":"if","locations":[{"start":{"line":93,"column":4},"end":{"line":95,"column":5}},{"start":{"line":93,"column":4},"end":{"line":95,"column":5}}],"line":93},"17":{"loc":{"start":{"line":93,"column":8},"end":{"line":93,"column":60}},"type":"binary-expr","locations":[{"start":{"line":93,"column":8},"end":{"line":93,"column":28}},{"start":{"line":93,"column":32},"end":{"line":93,"column":60}}],"line":93},"18":{"loc":{"start":{"line":107,"column":12},"end":{"line":109,"column":13}},"type":"if","locations":[{"start":{"line":107,"column":12},"end":{"line":109,"column":13}},{"start":{"line":107,"column":12},"end":{"line":109,"column":13}}],"line":107},"19":{"loc":{"start":{"line":114,"column":12},"end":{"line":116,"column":13}},"type":"if","locations":[{"start":{"line":114,"column":12},"end":{"line":116,"column":13}},{"start":{"line":114,"column":12},"end":{"line":116,"column":13}}],"line":114}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":17,"8":17,"9":17,"10":37,"11":17,"12":2,"13":15,"14":2,"15":13,"16":3,"17":10,"18":30,"19":13,"20":17,"21":10,"22":1,"23":9,"24":2,"25":7,"26":2,"27":5,"28":5,"29":5,"30":1,"31":8,"32":8,"33":8,"34":16,"35":8,"36":2,"37":6,"38":2,"39":4,"40":2,"41":2,"42":6,"43":3,"44":3,"45":2,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":3,"57":2,"58":1,"59":1,"60":3,"61":2,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":2,"75":1,"76":1,"77":1,"78":1,"79":2,"80":1,"81":1,"82":1},"f":{"0":1,"1":17,"2":37,"3":30,"4":8,"5":16,"6":6,"7":1,"8":1,"9":3,"10":1,"11":3,"12":1,"13":1,"14":1,"15":1,"16":2,"17":1,"18":1,"19":2,"20":1},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[2,15],"4":[2,13],"5":[3,10],"6":[13,17],"7":[1,9],"8":[10,8,3],"9":[2,7],"10":[9,5],"11":[2,5],"12":[2,6],"13":[2,4],"14":[2,2],"15":[3,3],"16":[1,1],"17":[2,1],"18":[2,1],"19":[2,1]},"inputSourceMap":{"version":3,"file":"/Users/binvog/Documents/UNSW 2023T1/COMP1531/Indiv_projectbackend/iter4-project-backend/src/admin.ts","sources":["/Users/binvog/Documents/UNSW 2023T1/COMP1531/Indiv_projectbackend/iter4-project-backend/src/admin.ts"],"names":[],"mappings":"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","sourcesContent":["import HTTPError from 'http-errors';\nimport { getData, setData } from './dataStore';\nimport { getUserByToken } from './functionHelper';\nimport { newData } from './interfaces';\n\n/**\n * User with permissionId == 1 can change the user with uId\n * @param {string} token\n * @param {number} uId - user Id\n * @param {number} permissionId - permissionId\n * @returns { error : string } error - different error strings for different situations\n * @returns {} - returns {} when successful\n */\n\n// the global owner value should be set as what permissionId set\nexport function adminuserPermissionChangeV1(\n  token: string,\n  uId: number,\n  permissionId: number\n) {\n  const data = getData();\n  const tokenFound = getUserByToken(token);\n  const uIdfound = data.users.find((user) => user.authUserId === uId);\n\n  if (tokenFound === undefined) {\n    throw HTTPError(403, 'Invalid user token');\n  }\n\n  if (uIdfound === undefined) {\n    throw HTTPError(400, 'Invalid uId');\n  }\n\n  // user with the token is not global owner\n  if (tokenFound.isGlobalOwner !== 1) {\n    throw HTTPError(403, tokenFound.authUserId + ' is not authorised');\n  }\n\n  // user with uId is the only global, and Uid ===\n  const globalOwnernum = data.users.reduce((acc, obj) => {\n    if (obj.isGlobalOwner === 1) {\n      return acc + obj.isGlobalOwner;\n    } else {\n      return acc;\n    }\n  }, 0);\n\n  if (\n    globalOwnernum === 1 &&\n    permissionId === 2 &&\n    uIdfound.isGlobalOwner === 1\n  ) {\n    throw HTTPError(400, 'You are the only global owner!');\n  }\n\n  if (permissionId !== 1 && permissionId !== 2) {\n    throw HTTPError(400, 'Invalid permissionId');\n  }\n  if (uIdfound.isGlobalOwner === permissionId) {\n    throw HTTPError(400, 'User already in permission level');\n  }\n\n  // set the globalowner property same as the permissionId\n  //\n  // const userfound = data.users.find((a) => a.authUserId === uId);\n  // uIdfound.isGlobalOwner = permissionId;\n  uIdfound.isGlobalOwner = permissionId;\n  setData(data);\n  return {};\n}\n\n/**\n * remove the user with uId from all channels and DMs, also will not be included in user array\n * @param {string} token\n * @param {number} uId - user Id\n * @returns { error : string } error - different error strings for different situations\n * @returns {} - returns {} when successful\n */\nexport function adminuserRemoveV1(token: string, uId: number) {\n  // errors\n  let data = getData();\n  const tokenFound = getUserByToken(token);\n  const uIdfound = data.users.find((user) => user.authUserId === uId);\n\n  if (tokenFound === undefined) {\n    throw HTTPError(403, 'Invalid user token');\n  }\n\n  if (uIdfound === undefined) {\n    throw HTTPError(400, 'Invalid uId');\n  }\n\n  // user with the token is not a global owner\n  if (tokenFound.isGlobalOwner !== 1) {\n    throw HTTPError(403, tokenFound.authUserId + 'is not authorised');\n  }\n\n  // user with uId is the only global, and Uid ===\n  const globalOwnernum = data.users.reduce((acc, obj) => {\n    if (obj.isGlobalOwner === 1) {\n      return acc + obj.isGlobalOwner;\n    } else {\n      return acc;\n    }\n  }, 0);\n\n  if (globalOwnernum === 1 && uIdfound.isGlobalOwner === 1) {\n    throw HTTPError(\n      400,\n      'The person you are trying to remove is the only Global Owner!'\n    );\n  }\n  data = editProfile(uId, data);\n  data = replaceMessage(uId, data);\n  data = hideChannelDm(uId, data);\n\n  setData(data);\n  return {};\n}\n\nfunction replaceMessage(uId: number, data: newData) {\n  const removedString = 'Removed user';\n\n  data.channels.forEach((channel) => {\n    channel.messages.forEach((message) => {\n      if (message.uId === uId) {\n        message.message = removedString;\n      }\n    });\n  });\n\n  data.dm.forEach((dm) => {\n    dm.messages.forEach((message) => {\n      if (message.uId === uId) {\n        message.message = removedString;\n      }\n    });\n  });\n  return data;\n}\n\nfunction editProfile(uId: number, data: newData) {\n  const removeUser = data.users.find((user) => user.authUserId === uId);\n  removeUser.nameFirst = 'Removed';\n  removeUser.nameLast = 'user';\n  removeUser.email = '';\n  removeUser.handleStr = '';\n  removeUser.isGlobalOwner = 2;\n  // clear token\n  removeUser.token = [{ token: '' }];\n  return data;\n}\n\nfunction hideChannelDm(uId: number, data: newData) {\n  // hide the element in all DM and channels\n  // map.filter\n  // isremoved boolean, put the boolean to true if this user is going to be removed\n  // const data = getData();\n  data.channels.forEach((channel) => {\n    channel.allMembers = channel.allMembers.filter(\n      (member) => member.uId !== uId\n    );\n    channel.ownerMembers = channel.ownerMembers.filter(\n      (member) => member.uId !== uId\n    );\n  });\n\n  data.dm.forEach((dm) => {\n    dm.allMembers = dm.allMembers.filter((member) => member.uId !== uId);\n    dm.ownerMembers = dm.ownerMembers.filter((member) => member.uId !== uId);\n  });\n  return data;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e33410cd9d4322aff34fd8542660f8d4679885e9","contentHash":"c93d82ab6fdf5f26df0f6645913a117a919577b4af285c3fcb61e3435814575e"}}